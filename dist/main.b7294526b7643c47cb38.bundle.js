/*! For license information please see main.b7294526b7643c47cb38.bundle.js.LICENSE.txt */
(()=>{var e={9784:(e,t,n)=>{"use strict";n.d(t,{Z:()=>h});var i,r=n(3734),o=n(450),a=function(e,t,n){return function(){var i=this.callBase;this.callBase=e[t];try{return n.apply(this,arguments)}finally{this.callBase=i}}},s=function(e){var t,n,i;if(!e)return this;for(n in e)i=e[n],t="function"==typeof this.prototype[n]&&"function"==typeof i,this.prototype[n]=t?a(this.parent.prototype,n,i):i;return this},l=function(){var e,t,n,i=this,r=Object.prototype.hasOwnProperty.bind(i);for(!r("_includedCtors")&&!r("_includedPostCtors")&&(i._includedCtors=i._includedCtors.slice(0),i._includedPostCtors=i._includedPostCtors.slice(0)),n=0;n<arguments.length;n++)for(t in(e=arguments[n]).ctor&&i._includedCtors.push(e.ctor),e.postCtor&&i._includedPostCtors.push(e.postCtor),e)"ctor"!==t&&"postCtor"!==t&&"default"!==t&&(i.prototype[t]=e[t]);return i},d=function(e){if(!Object.prototype.hasOwnProperty.bind(this)("parent")&&this.parent){var t=Object.getPrototypeOf(this);return t===e||t.subclassOf(e)}return this.parent===e||!(!this.parent||!this.parent.subclassOf)&&this.parent.subclassOf(e)},c=function(){throw r.Z.Error("E0001")},u=(i=Object.prototype.hasOwnProperty,function(e,t){for(var n in e){if(!i.call(e,n))return;t[n]=e[n]}}),p=function(){};p.inherit=function(e){var t,n=function(){if(!this||(0,o.FJ)(this)||"function"!=typeof this.constructor)throw r.Z.Error("E0003");var e,t=this,n=t.ctor,i=t.constructor._includedCtors,a=t.constructor._includedPostCtors;for(e=0;e<i.length;e++)i[e].call(t);for(n&&n.apply(t,arguments),e=0;e<a.length;e++)a[e].call(t)};return n.prototype=((t=function(){}).prototype=this.prototype,new t),u(this,n),n.inherit=this.inherit,n.abstract=c,n.redefine=s,n.include=l,n.subclassOf=d,n.parent=this,n._includedCtors=this._includedCtors?this._includedCtors.slice(0):[],n._includedPostCtors=this._includedPostCtors?this._includedPostCtors.slice(0):[],n.prototype.constructor=n,n.redefine(e),n},p.abstract=c;const h=p},2295:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});const i=new(n(3815).Z)},4432:(e,t,n)=>{"use strict";n.d(t,{Z:()=>l});var i=n(4099),r=n(3734),o={rtlEnabled:!1,defaultCurrency:"USD",defaultUseCurrencyAccountingStyle:!0,oDataFilterToLower:!0,serverDecimalSeparator:".",decimalSeparator:".",thousandsSeparator:",",forceIsoDateParsing:!0,wrapActionsBeforeExecute:!0,useLegacyStoreResult:!1,useJQuery:void 0,editorStylingMode:void 0,useLegacyVisibleIndex:!1,floatingActionButtonConfig:{icon:"add",closeIcon:"close",label:"",position:{at:"right bottom",my:"right bottom",offset:{x:-16,y:-16}},maxSpeedDialActionCount:5,shading:!1,direction:"auto"},optionsParser:e=>{"{"!==e.trim().charAt(0)&&(e="{"+e+"}");try{return new Function("return "+e)()}catch(t){throw r.Z.Error("E3018",t,e)}}},a=["decimalSeparator","thousandsSeparator"],s=function(){if(!arguments.length)return o;var e=arguments.length<=0?void 0:arguments[0];a.forEach((t=>{if(e[t]){var n="Now, the ".concat(t," is selected based on the specified locale.");r.Z.log("W0003","config",t,"19.2",n)}})),(0,i.l)(o,e)};"undefined"!=typeof DevExpress&&DevExpress.config&&s(DevExpress.config);const l=s},1389:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var i=n(7154),r=n(2622),o=n(9163),a={querySelectorAll:(e,t)=>e.querySelectorAll(t),elementMatches(e,t){var n=e.matches||e.matchesSelector||e.mozMatchesSelector||e.msMatchesSelector||e.oMatchesSelector||e.webkitMatchesSelector||(t=>{var n=e.document||e.ownerDocument;if(!n)return!1;for(var i=this.querySelectorAll(n,t),r=0;r<i.length;r++)if(i[r]===e)return!0});return n.call(e,t)},createElement(e,t){return(t=t||this._document).createElement(e)},createElementNS(e,t,n){return(n=n||this._document).createElementNS(e,t)},createTextNode(e,t){return(t=t||this._document).createTextNode(e)},isNode:e=>e&&"object"==typeof e&&"nodeType"in e&&"nodeName"in e,isElementNode:e=>e&&1===e.nodeType,isTextNode:e=>e&&3===e.nodeType,isDocument:e=>e&&9===e.nodeType,isDocumentFragment:e=>e&&11===e.nodeType,removeElement(e){var t=e&&e.parentNode;t&&t.removeChild(e)},insertElement(e,t,n){e&&t&&e!==t&&(n?e.insertBefore(t,n):e.appendChild(t))},getAttribute:(e,t)=>e.getAttribute(t),setAttribute(e,t,n){e.setAttribute(t,n)},removeAttribute(e,t){e.removeAttribute(t)},setProperty(e,t,n){e[t]=n},setText(e,t){e&&(e.textContent=t)},setClass(e,t,n){1===e.nodeType&&t&&(n?e.classList.add(t):e.classList.remove(t))},setStyle(e,t,n){e.style[t]=n||""},_document:"undefined"==typeof document?void 0:document,getDocument(){return this._document},getActiveElement(e){return this.getRootNode(e).activeElement},getRootNode(e){var t,n;return null!==(t=null==e||null===(n=e.getRootNode)||void 0===n?void 0:n.call(e))&&void 0!==t?t:this._document},getBody(){return this._document.body},createDocumentFragment(){return this._document.createDocumentFragment()},getDocumentElement(){return this._document.documentElement},getLocation(){return this._document.location},getSelection(){return this._document.selection},getReadyState(){return this._document.readyState},getHead(){return this._document.head},hasDocumentProperty(e){return e in this._document},listen:(e,t,n,i)=>e&&"addEventListener"in e?(e.addEventListener(t,n,i),()=>{e.removeEventListener(t,n)}):r.ZT,elementsFromPoint(e,t,n){var i=this.getRootNode(n);return i.host?(0,o.f)(e,t,i):i.elementsFromPoint(e,t)}};const s=(0,i.Z)(a)},1965:(e,t,n)=>{"use strict";n.d(t,{Q:()=>o,u:()=>r});var i=function(e){return e&&e.get(0)};function r(e){return i(e)}function o(e){i=e}},6403:(e,t,n)=>{"use strict";n.d(t,{D9:()=>c,NU:()=>h,WD:()=>p,aT:()=>u,nK:()=>f});var i,r=n(1389),o=n(8628),a=n(3815),s=new WeakMap,l=new a.Z,d=function(){},c=function(e){l.fire(e);var t=(i=e).cleanData;i.cleanData=function(e){return d(e),t.call(this,e)}};function u(){return i.data.apply(this,arguments)}function p(e){d=e}function h(e,t){return i.removeData.call(this,e,t)}function f(e,t){if(r.Z.isElementNode(e)){var n=e.getElementsByTagName("*");i.cleanData(n),t&&i.cleanData([e])}}c({data:function(){var e=arguments[0],t=arguments[1],n=arguments[2];if(e){var i=s.get(e);return i||(i={},s.set(e,i)),void 0===t?i:2===arguments.length?i[t]:(i[t]=n,n)}},removeData:function(e,t){if(e)if(void 0===t)s.delete(e);else{var n=s.get(e);n&&delete n[t]}},cleanData:function(e){for(var t=0;t<e.length;t++)o.Z.off(e[t]),s.delete(e[t])}})},3734:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});const i=(0,n(897).Z)({E0001:"Method is not implemented",E0002:"Member name collision: {0}",E0003:"A class must be instantiated using the 'new' keyword",E0004:"The NAME property of the component is not specified",E0005:"Unknown device",E0006:"Unknown endpoint key is requested",E0007:"'Invalidate' method is called outside the update transaction",E0008:"Type of the option name is not appropriate to create an action",E0009:"Component '{0}' has not been initialized for an element",E0010:"Animation configuration with the '{0}' type requires '{1}' configuration as {2}",E0011:"Unknown animation type '{0}'",E0012:"jQuery version is too old. Please upgrade jQuery to 1.10.0 or later",E0013:"KnockoutJS version is too old. Please upgrade KnockoutJS to 2.3.0 or later",E0014:"The 'release' method shouldn't be called for an unlocked Lock object",E0015:"Queued task returned an unexpected result",E0017:"Event namespace is not defined",E0018:"DevExpress.ui.DevExpressPopup widget is required",E0020:"Template engine '{0}' is not supported",E0021:"Unknown theme is set: {0}",E0022:"LINK[rel=DevExpress-theme] tags must go before DevExpress included scripts",E0023:"Template name is not specified",E0024:"DevExtreme bundle already included",E0025:"Unexpected argument type",E0100:"Unknown validation type is detected",E0101:"Misconfigured range validation rule is detected",E0102:"Misconfigured comparison validation rule is detected",E0103:"validationCallback of an asynchronous rule should return a jQuery or a native promise",E0110:"Unknown validation group is detected",E0120:"Adapter for a DevExpressValidator component cannot be configured",E0121:"The 'customItem' parameter of the 'onCustomItemCreating' function is empty or contains invalid data. Assign a custom object or a Promise that is resolved after the item is created.",W0000:"'{0}' is deprecated in {1}. {2}",W0001:"{0} - '{1}' option is deprecated in {2}. {3}",W0002:"{0} - '{1}' method is deprecated in {2}. {3}",W0003:"{0} - '{1}' property is deprecated in {2}. {3}",W0004:"Timeout for theme loading is over: {0}",W0005:"'{0}' event is deprecated in {1}. {2}",W0006:"Invalid recurrence rule: '{0}'",W0007:"'{0}' Globalize culture is not defined",W0008:"Invalid view name: '{0}'",W0009:"Invalid time zone name: '{0}'",W0010:"{0} is deprecated in {1}. {2}",W0011:"Number parsing is invoked while the parser is not defined",W0012:"Date parsing is invoked while the parser is not defined",W0013:"'{0}' file is deprecated in {1}. {2}",W0014:"{0} - '{1}' type is deprecated in {2}. {3}",W0015:"Instead of returning a value from the '{0}' function, write it into the '{1}' field of the function's parameter.",W0016:'The "{0}" option does not accept the "{1}" value since v{2}. {3}.',W0017:'Setting the "{0}" property with a function is deprecated since v21.2',W0018:'Setting the "position" property with a function is deprecated since v21.2'})},3815:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var i=n(3419),r=n(4795);class o{constructor(){this.memory=[],this.callbacks=(0,r.Z)()}add(e){(0,i.S6)(this.memory,((t,n)=>e.apply(e,n))),this.callbacks.add(e)}remove(e){this.callbacks.remove(e)}fire(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];this.memory.push(t),this.callbacks.fire.apply(this.callbacks,t)}}},5510:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});const i=n(3041).Z.get()},3041:(e,t,n)=>{"use strict";n.d(t,{Z:()=>b});var i,r=n(6403),o=n(1389),a=n(8274),s=n(450),l=n(9071),d=n(57),c=n(8825),u=(0,a.Jj)(),p=function(e,t){return e?"string"==typeof e?"body"===e?(this[0]=t?t.body:o.Z.getBody(),this.length=1,this):(t=t||o.Z.getDocument(),"<"===e[0]?(this[0]=o.Z.createElement(e.slice(1,-1),t),this.length=1,this):([].push.apply(this,o.Z.querySelectorAll(t,e)),this)):o.Z.isNode(e)||(0,s.FJ)(e)?(this[0]=e,this.length=1,this):Array.isArray(e)?([].push.apply(this,e),this):i(e.toArray?e.toArray():[e]):(this.length=0,this)};(i=function(e,t){return new p(e,t)}).fn={dxRenderer:!0},p.prototype=i.fn;var h=function(e,t){for(var n=0;n<this.length;n++){var r=i(this[n]);r[e].apply(r,t)}return this},f=function(e,t,n){null!=n&&!1!==n?o.Z.setAttribute(e,t,n):o.Z.removeAttribute(e,t)};p.prototype.show=function(){return this.toggle(!0)},p.prototype.hide=function(){return this.toggle(!1)},p.prototype.toggle=function(e){return this[0]&&this.toggleClass("dx-state-invisible",!e),this},p.prototype.attr=function(e,t){if(this.length>1&&arguments.length>1)return h.call(this,"attr",arguments);if(!this[0])return(0,s.Kn)(e)||void 0!==t?this:void 0;if(!this[0].getAttribute)return this.prop(e,t);if("string"==typeof e&&1===arguments.length){var n=this[0].getAttribute(e);return null==n?void 0:n}if((0,s.PO)(e))for(var i in e)this.attr(i,e[i]);else f(this[0],e,t);return this},p.prototype.removeAttr=function(e){return this[0]&&o.Z.removeAttribute(this[0],e),this},p.prototype.prop=function(e,t){if(!this[0])return this;if("string"==typeof e&&1===arguments.length)return this[0][e];if((0,s.PO)(e))for(var n in e)this.prop(n,e[n]);else o.Z.setProperty(this[0],e,t);return this},p.prototype.addClass=function(e){return this.toggleClass(e,!0)},p.prototype.removeClass=function(e){return this.toggleClass(e,!1)},p.prototype.hasClass=function(e){if(!this[0]||void 0===this[0].className)return!1;for(var t=e.split(" "),n=0;n<t.length;n++)if(this[0].classList){if(this[0].classList.contains(t[n]))return!0}else if((((0,s.HD)(this[0].className)?this[0].className:o.Z.getAttribute(this[0],"class"))||"").split(" ").indexOf(t[n])>=0)return!0;return!1},p.prototype.toggleClass=function(e,t){if(this.length>1)return h.call(this,"toggleClass",arguments);if(!this[0]||!e)return this;t=void 0===t?!this.hasClass(e):t;for(var n=e.split(" "),i=0;i<n.length;i++)o.Z.setClass(this[0],n[i],t);return this},p.prototype.html=function(e){return arguments.length?(this.empty(),"string"==typeof e&&!(0,c.N)(e)||"number"==typeof e?(this[0].innerHTML=e,this):this.append((0,c.r)(e))):this[0].innerHTML};var m=function(e,t){if(this[0]&&e){"string"==typeof e?e=(0,c.r)(e):e.nodeType?e=[e]:(0,s.kE)(e)&&(e=[o.Z.createTextNode(e)]);for(var n=0;n<e.length;n++){var i=e[n],r=this[0];"TABLE"===r.tagName&&"TR"===i.tagName&&r.tBodies&&r.tBodies.length&&(r=r.tBodies[0]),o.Z.insertElement(r,i.nodeType?i:i[0],t)}}},g=function(e,t){if(this[0]&&this[0].style&&!(null===t||"number"==typeof t&&isNaN(t))){e=(0,l.Hj)(e);for(var n=0;n<this.length;n++)this[n].style[e]=(0,l.bh)(e,t)}};p.prototype.css=function(e,t){if((0,s.HD)(e)){if(2!==arguments.length){if(!this[0])return;e=(0,l.Hj)(e);var n=u.getComputedStyle(this[0])[e]||this[0].style[e];return(0,s.kE)(n)?n.toString():n}g.call(this,e,t)}else if((0,s.PO)(e))for(var i in e)g.call(this,i,e[i]);return this},p.prototype.prepend=function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.prepend(arguments[t]);return this}return m.apply(this,[e,this[0].firstChild]),this},p.prototype.append=function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.append(arguments[t]);return this}return m.apply(this,[e]),this},p.prototype.prependTo=function(e){if(this.length>1){for(var t=this.length-1;t>=0;t--)i(this[t]).prependTo(e);return this}return(e=i(e))[0]&&o.Z.insertElement(e[0],this[0],e[0].firstChild),this},p.prototype.appendTo=function(e){return this.length>1?h.call(this,"appendTo",arguments):(o.Z.insertElement(i(e)[0],this[0]),this)},p.prototype.insertBefore=function(e){return e&&e[0]&&o.Z.insertElement(e[0].parentNode,this[0],e[0]),this},p.prototype.insertAfter=function(e){return e&&e[0]&&o.Z.insertElement(e[0].parentNode,this[0],e[0].nextSibling),this},p.prototype.before=function(e){return this[0]&&o.Z.insertElement(this[0].parentNode,e[0],this[0]),this},p.prototype.after=function(e){return this[0]&&o.Z.insertElement(this[0].parentNode,e[0],this[0].nextSibling),this},p.prototype.wrap=function(e){if(this[0]){var t=i(e);t.insertBefore(this),t.append(this)}return this},p.prototype.wrapInner=function(e){var t=this.contents();return t.length?t.wrap(e):this.append(e),this},p.prototype.replaceWith=function(e){if(e&&e[0])return e.is(this)?this:(e.insertBefore(this),this.remove(),e)},p.prototype.remove=function(){return this.length>1?h.call(this,"remove",arguments):((0,r.nK)(this[0],!0),o.Z.removeElement(this[0]),this)},p.prototype.detach=function(){return this.length>1?h.call(this,"detach",arguments):(o.Z.removeElement(this[0]),this)},p.prototype.empty=function(){return this.length>1?h.call(this,"empty",arguments):((0,r.nK)(this[0]),o.Z.setText(this[0],""),this)},p.prototype.clone=function(){for(var e=[],t=0;t<this.length;t++)e.push(this[t].cloneNode(!0));return i(e)},p.prototype.text=function(e){if(!arguments.length){for(var t="",n=0;n<this.length;n++)t+=this[n]&&this[n].textContent||"";return t}var i=(0,s.mf)(e)?e():e;return(0,r.nK)(this[0],!1),o.Z.setText(this[0],(0,s.$K)(i)?i:""),this},p.prototype.val=function(e){return 1===arguments.length?this.prop("value",(0,s.$K)(e)?e:""):this.prop("value")},p.prototype.contents=function(){if(!this[0])return i();var e=[];return e.push.apply(e,this[0].childNodes),i(e)},p.prototype.find=function(e){var t=i();if(!e)return t;var n,r=[];if("string"==typeof e)for(e=e.trim(),n=0;n<this.length;n++){var a=this[n];if(o.Z.isElementNode(a)){var s=a.getAttribute("id"),l=s||"dx-query-children";s||f(a,"id",l);var d=(l="[id='"+l+"'] ")+e.replace(/([^\\])(,)/g,"$1, "+l);r.push.apply(r,o.Z.querySelectorAll(a,d)),f(a,"id",s)}else(o.Z.isDocument(a)||o.Z.isDocumentFragment(a))&&r.push.apply(r,o.Z.querySelectorAll(a,e))}else for(n=0;n<this.length;n++)e=o.Z.isNode(e)?e:e[0],this[n]!==e&&this[n].contains(e)&&r.push(e);return t.add(r)};var v=function(e,t){var n;return!(t=null!==(n=t.host)&&void 0!==n?n:t).nodeType||!!(t.offsetWidth||t.offsetHeight||t.getClientRects().length)};p.prototype.filter=function(e){if(!e)return i();if(":visible"===e)return this.filter(v);if(":hidden"===e)return this.filter((function(e,t){return!v(0,t)}));for(var t=[],n=0;n<this.length;n++){var r=this[n];if(o.Z.isElementNode(r)&&"string"===(0,s.dt)(e))o.Z.elementMatches(r,e)&&t.push(r);else if(o.Z.isNode(e)||(0,s.FJ)(e))e===r&&t.push(r);else if((0,s.mf)(e))e.call(r,n,r)&&t.push(r);else for(var a=0;a<e.length;a++)e[a]===r&&t.push(r)}return i(t)},p.prototype.not=function(e){for(var t=[],n=this.filter(e).toArray(),r=0;r<this.length;r++)-1===n.indexOf(this[r])&&t.push(this[r]);return i(t)},p.prototype.is=function(e){return!!this.filter(e).length},p.prototype.children=function(e){for(var t=[],n=0;n<this.length;n++)for(var r=this[n]?this[n].childNodes:[],a=0;a<r.length;a++)o.Z.isElementNode(r[a])&&t.push(r[a]);return t=i(t),e?t.filter(e):t},p.prototype.siblings=function(){var e=this[0];if(!e||!e.parentNode)return i();for(var t=[],n=e.parentNode.childNodes||[],r=0;r<n.length;r++){var a=n[r];o.Z.isElementNode(a)&&a!==e&&t.push(a)}return i(t)},p.prototype.each=function(e){for(var t=0;t<this.length&&!1!==e.call(this[t],t,this[t]);t++);},p.prototype.index=function(e){return e?(e=i(e),this.toArray().indexOf(e[0])):this.parent().children().index(this)},p.prototype.get=function(e){return this[e<0?this.length+e:e]},p.prototype.eq=function(e){return e=e<0?this.length+e:e,i(this[e])},p.prototype.first=function(){return this.eq(0)},p.prototype.last=function(){return this.eq(-1)},p.prototype.select=function(){for(var e=0;e<this.length;e+=1)this[e].select&&this[e].select();return this},p.prototype.parent=function(e){if(!this[0])return i();var t=i(this[0].parentNode);return!e||t.is(e)?t:i()},p.prototype.parents=function(e){for(var t=[],n=this.parent();n&&n[0]&&!o.Z.isDocument(n[0]);)o.Z.isElementNode(n[0])&&(e&&!n.is(e)||t.push(n.get(0))),n=n.parent();return i(t)},p.prototype.closest=function(e){if(this.is(e))return this;for(var t=this.parent();t&&t.length;){if(t.is(e))return t;t=t.parent()}return i()},p.prototype.next=function(e){if(!this[0])return i();var t=i(this[0].nextSibling);if(!arguments.length)return t;for(;t&&t.length;){if(t.is(e))return t;t=t.next()}return i()},p.prototype.prev=function(){return this[0]?i(this[0].previousSibling):i()},p.prototype.add=function(e){for(var t=i(e),n=this.toArray(),r=0;r<t.length;r++){var o=t[r];-1===n.indexOf(o)&&n.push(o)}return i(n)};var y=[];p.prototype.splice=function(){return i(y.splice.apply(this,arguments))},p.prototype.slice=function(){return i(y.slice.apply(this,arguments))},p.prototype.toArray=function(){return y.slice.call(this)},p.prototype.offset=function(){if(this[0])return(0,d.os)(this[0])},p.prototype.offsetParent=function(){if(!this[0])return i();for(var e=i(this[0].offsetParent);e[0]&&"static"===e.css("position");)e=i(e[0].offsetParent);return e[0]?e:i(o.Z.getDocumentElement())},p.prototype.position=function(){if(this[0]){var e,t=parseFloat(this.css("marginTop")),n=parseFloat(this.css("marginLeft"));if("fixed"===this.css("position"))return{top:(e=this[0].getBoundingClientRect()).top-t,left:e.left-n};e=this.offset();var i=this.offsetParent(),r={top:0,left:0};return"HTML"!==i[0].nodeName&&(r=i.offset()),r={top:r.top+parseFloat(i.css("borderTopWidth")),left:r.left+parseFloat(i.css("borderLeftWidth"))},{top:e.top-r.top-t,left:e.left-r.left-n}}},[{name:"scrollLeft",offsetProp:"pageXOffset",scrollWindow:function(e,t){e.scrollTo(t,e.pageYOffset)}},{name:"scrollTop",offsetProp:"pageYOffset",scrollWindow:function(e,t){e.scrollTo(e.pageXOffset,t)}}].forEach((function(e){var t=e.name;p.prototype[t]=function(n){if(this[0]){var i=(0,d.C_)(this[0]);return void 0===n?i?i[e.offsetProp]:this[0][t]:(i?e.scrollWindow(i,n):this[0][t]=n,this)}}})),p.prototype.data=function(e,t){if(this[0])return arguments.length<2?r.aT.call(i,this[0],e):(r.aT.call(i,this[0],e,t),this)},p.prototype.removeData=function(e){return this[0]&&(0,r.NU)(this[0],e),this};var x=function(){return i.apply(this,arguments)};Object.defineProperty(x,"fn",{enumerable:!0,configurable:!0,get:function(){return i.fn},set:function(e){i.fn=e}});const b={set:function(e){i=e},get:function(){return x}}},8714:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});const i=function(e){var t,n=function(){return t=e.apply(this,arguments),n=function(){return t},t};return function(){return n.apply(this,arguments)}}},4795:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});var i=function(e){this._options=e||{},this._list=[],this._queue=[],this._firing=!1,this._fired=!1,this._firingIndexes=[]};i.prototype._fireCore=function(e,t){var n=this._firingIndexes,i=this._list,r=this._options.stopOnFalse,o=n.length;for(n[o]=0;n[o]<i.length&&(!1!==i[n[o]].apply(e,t)||!r);n[o]++);n.pop()},i.prototype.add=function(e){return"function"!=typeof e||this._options.unique&&this.has(e)||this._list.push(e),this},i.prototype.remove=function(e){var t=this._list,n=this._firingIndexes,i=t.indexOf(e);if(i>-1&&(t.splice(i,1),this._firing&&n.length))for(var r=0;r<n.length;r++)i<=n[r]&&n[r]--;return this},i.prototype.has=function(e){var t=this._list;return e?t.indexOf(e)>-1:!!t.length},i.prototype.empty=function(e){return this._list=[],this},i.prototype.fireWith=function(e,t){var n=this._queue;if(t=(t=t||[]).slice?t.slice():t,this._options.syncStrategy)this._firing=!0,this._fireCore(e,t);else{if(n.push([e,t]),this._firing)return;for(this._firing=!0;n.length;){var i=n.shift();this._fireCore(i[0],i[1])}}return this._firing=!1,this._fired=!0,this},i.prototype.fire=function(){this.fireWith(this,arguments)},i.prototype.fired=function(){return this._fired};const r=function(e){return new i(e)}},2622:(e,t,n)=>{"use strict";n.d(t,{bY:()=>f,hr:()=>l,U3:()=>a,h3:()=>c,ZT:()=>d}),n(4432),n(9784).Z.inherit({ctor:function(e){e&&(e=String(e)),this._value=this._normalize(e||this._generate())},_normalize:function(e){for(e=e.replace(/[^a-f0-9]/gi,"").toLowerCase();e.length<32;)e+="0";return[e.substr(0,8),e.substr(8,4),e.substr(12,4),e.substr(16,4),e.substr(20,12)].join("-")},_generate:function(){for(var e="",t=0;t<32;t++)e+=Math.round(15*Math.random()).toString(16);return e},toString:function(){return this._value},valueOf:function(){return this._value},toJSON:function(){return this._value}}),n(9303);var i=n(8852),r=n(3419),o=n(450),a=function(e,t,n){var i=[],o=0;return(0,r.S6)(t,((t,a)=>{var l=0,d=n?n(a):a;(0,r.S6)(e,((e,t)=>{var n=d[e];if(void 0!==n){if(!s(n,t))return l=-1,!1;l++}})),l<o||(l>o&&(i.length=0,o=l),i.push(a))})),i},s=function(e,t){if(Array.isArray(e)&&Array.isArray(t)){var n=!1;return(0,r.S6)(e,((e,i)=>{if(i!==t[e])return n=!0,!1})),!n}return e===t},l=function(e){return e.replace(/[[\]{}\-()*+?.\\^$|\s]/g,"\\$&")},d=function(){},c=function(e,t,n){for(var i=[],r=!n,o=0;o<e.length;o++)!!t(e[o],o)===r&&i.push(e[o]);return i},u=function(e,t,n){if(e.length!==t.length)return!1;for(var i=0;i<e.length;i++)if(!f(e[i],t[i],n+1))return!1;return!0},p=function(e,t,n,i){for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)&&!f(e[r],t[r],n+1,i))return!1;for(var o in t)if(!(o in e))return!1;return!0},h=3,f=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];return e=(0,i.Ex)(e,!0),t=(0,i.Ex)(t,!0),!!((r?e===t:e==t)||n>=h)||((0,o.Kn)(e)&&(0,o.Kn)(t)?p(e,t,n,r):!(!Array.isArray(e)||!Array.isArray(t))&&u(e,t,n))}},9915:(e,t,n)=>{"use strict";n.d(t,{k:()=>a});var i=n(450),r=function(){},o=function(e){return"undefined"!=typeof console&&(0,i.mf)(console[e])?console[e].bind(console):r},a={info:o("info"),warn:o("warn"),error:o("error")}},8852:(e,t,n)=>{"use strict";n.d(t,{Ex:()=>x,OM:()=>y,Zw:()=>p,vb:()=>g});var i=n(3734),r=n(9784),o=n(3370),a=n(450),s=n(3419),l=n(2866),d=l.Z.unwrap,c=l.Z.isWrapped,u=l.Z.assign,p=function(e){return(t=e,t.replace(/\[/g,".").replace(/\]/g,"")).split(".");var t},h=function(e,t,n,r){if("this"===t)throw new i.Z.Error("E4016");var o=e[t];r.unwrapObservables&&c(o)?u(o,n):e[t]=n},f=function(e){return(e=e||{}).unwrapObservables=void 0===e.unwrapObservables||e.unwrapObservables,e};function m(e,t){return t.unwrapObservables?d(e):e}var g=function(e){if(arguments.length>1&&(e=[].slice.call(arguments)),!e||"this"===e)return function(e){return e};if("string"==typeof e){var t=p(e);return function(e,n){for(var i=(n=f(n)).functionsAsIs,r=("defaultValue"in n),o=m(e,n),s=0;s<t.length;s++){if(!o){if(null==o&&r)return n.defaultValue;break}var l=t[s];if(r&&(0,a.Kn)(o)&&!(l in o))return n.defaultValue;var d=m(o[l],n);!i&&(0,a.mf)(d)&&(d=d.call(o)),o=d}return o}}return Array.isArray(e)?function(e){for(var t={},n=0,i=e.length;n<i;n++){var r=e[n];t[r]=g(r)}return function(e,n){var i;return(0,s.S6)(t,(function(t){var r=this(e,n);if(void 0!==r){for(var o=i||(i={}),a=t.split("."),s=a.length-1,l=0;l<s;l++){var d=a[l];d in o||(o[d]={}),o=o[d]}o[a[s]]=r}})),i}}(e):(0,a.mf)(e)?e:void 0},v=function(e,t,n,i){if((0,a.$K)(n))return n;var r={};return h(e,t,r,i),r},y=function(e){var t=(e=p(e||"this")).length-1;return function(n,i,r){var s=m(n,r=f(r));e.forEach((function(e,n){var l=function(e,t,n){return n=n||{},m("this"===t?e:e[t],n)}(s,e,r),d=!r.functionsAsIs&&(0,a.mf)(l)&&!c(l);n===t?r.merge&&(0,a.PO)(i)&&(!(0,a.$K)(l)||(0,a.PO)(l))?(l=v(s,e,l,r),(0,o.HR)(l,i,!1,!0)):d?s[e](i):h(s,e,i,r):(l=v(s,e,l,r),d&&(l=l.call(s)),s=l)}))}},x=function(e,t){return e instanceof Date?e.getTime():e&&e instanceof r.Z&&e.valueOf?e.valueOf():t||"string"!=typeof e?e:e.toLowerCase()}},9303:(e,t,n)=>{"use strict";n.d(t,{BH:()=>u,gx:()=>p,p4:()=>l,wU:()=>c});var i=n(450),r=n(4099),o=n(4795),a=[{method:"resolve",handler:"done",state:"resolved"},{method:"reject",handler:"fail",state:"rejected"},{method:"notify",handler:"progress"}],s=function(){var e=this;this._state="pending",this._promise={},a.forEach(function(t){var n=t.method;this[n+"Callbacks"]=(0,o.Z)(),this[n]=function(){return this[n+"With"](this._promise,arguments)}.bind(this),this._promise[t.handler]=function(t){if(!t)return this;var i=e[n+"Callbacks"];return i.fired()?t.apply(e[n+"Context"],e[n+"Args"]):i.add(function(e,n){t.apply(e,n)}.bind(this)),this}}.bind(this)),this._promise.always=function(e){return this.done(e).fail(e)},this._promise.catch=function(e){return this.then(null,e)},this._promise.then=function(e,t){var n=new s;return["done","fail"].forEach(function(r){var o="done"===r?e:t;this[r]((function(){if(o){var e=o&&o.apply(this,arguments);(0,i.EY)(e)?e.done(n.resolve).fail(n.reject):(0,i.tI)(e)?e.then(n.resolve,n.reject):n.resolve.apply(this,(0,i.$K)(e)?[e]:arguments)}else n["done"===r?"resolve":"reject"].apply(this,arguments)}))}.bind(this)),n.promise()},this._promise.state=function(){return e._state},this._promise.promise=function(t){return t?(0,r.l)(t,e._promise):e._promise},this._promise.promise(this)};function l(e,t){if((0,i.EY)(e))return e;if((0,i.tI)(e)){var n=new s;return e.then((function(){n.resolveWith.apply(n,[t].concat([[].slice.call(arguments)]))}),(function(){n.rejectWith.apply(n,[t].concat([[].slice.call(arguments)]))})),n}return(new s).resolveWith(t,[e])}a.forEach((function(e){var t=e.method,n=e.state;s.prototype[t+"With"]=function(e,i){var r=this[t+"Callbacks"];return"pending"===this.state()&&(this[t+"Args"]=i,this[t+"Context"]=e,n&&(this._state=n),r.fire(e,i)),this}}));var d=function(){if(1===arguments.length)return l(arguments[0]);for(var e=[].slice.call(arguments),t=[],n=0,r=new s,o=function(i){return function(o){t[i]=this,e[i]=arguments.length>1?[].slice.call(arguments):o,++n===e.length&&r.resolveWith(t,e)}},a=0;a<e.length;a++)(0,i.EY)(e[a])?e[a].promise().done(o(a)).fail(r.reject):n++;return n===e.length&&r.resolveWith(t,e),r.promise()};function c(e){s=e.Deferred,d=e.when}function u(){return new s}function p(){return d.apply(this,arguments)}},7154:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var i=n(4099),r=n(450),o=n(3419),a=n(9784);function s(e){var t=a.Z.inherit(e),n=t,s=new n(e),l={},d=function(t,n){(0,o.S6)(t,(function(t){(0,r.mf)(s[t])?!n&&e[t]||(e[t]=function(){return s[t].apply(e,arguments)}):(n&&(l[t]=e[t]),e[t]=s[t])}))};return d(e,!0),e.inject=function(e){n=n.inherit(e),s=new n,d(e)},e.resetInjection=function(){(0,i.l)(e,l),n=t,s=new t},e}},897:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var i=n(4099),r=n(9915),o=n(3386),a="http://js.devexpress.com/error/"+"22.2.4".split(".").slice(0,2).join("_")+"/";function s(e,t){var n={ERROR_MESSAGES:(0,i.l)(t,e),Error:function(){return e=[].slice.call(arguments),t=e[0],n=s(t,e=e.slice(1)),r=d(t),o=l(t,n),(0,i.l)(new Error(o),{__id:t,__details:n,url:r});var e,t,n,r,o},log:function(e){var t="log";/^E\d+$/.test(e)?t="error":/^W\d+$/.test(e)&&(t="warn"),r.k[t]("log"===t?e:function(e){var t=e[0];return l(t,s(t,e=e.slice(1)))}([].slice.call(arguments)))}};function s(e,t){return t=[n.ERROR_MESSAGES[e]].concat(t),o.WU.apply(this,t).replace(/\.*\s*?$/,"")}function l(e,t){return o.WU.apply(this,["{0} - {1}. See:\n{2}",e,t,d(e)])}function d(e){return a+e}return n}},4099:(e,t,n)=>{"use strict";n.d(t,{l:()=>o,x:()=>r});var i=n(450),r=function(e,t,n){for(var i in e=e||{},t)if(Object.prototype.hasOwnProperty.call(t,i)){var r=t[i];i in e&&!n||(e[i]=r)}return e},o=function e(t){var n=1,r=!1;for("boolean"==typeof(t=t||{})&&(r=t,t=arguments[1]||{},n++);n<arguments.length;n++){var o=arguments[n];if(null!=o)for(var a in o){var s=t[a],l=o[a],d=!1,c=void 0;"__proto__"!==a&&"constructor"!==a&&t!==l&&(r&&l&&((0,i.PO)(l)||(d=Array.isArray(l)))?(c=d?s&&Array.isArray(s)?s:[]:s&&(0,i.PO)(s)?s:{},t[a]=e(r,c,l)):void 0!==l&&(t[a]=l))}}return t}},8825:(e,t,n)=>{"use strict";n.d(t,{N:()=>s,r:()=>a});var i=n(1389),r=/<([a-z][^/\0>\x20\t\r\n\f]+)/i,o={default:{tagsCount:0,startTags:"",endTags:""},thead:{tagsCount:1,startTags:"<table>",endTags:"</table>"},td:{tagsCount:3,startTags:"<table><tbody><tr>",endTags:"</tr></tbody></table>"},col:{tagsCount:2,startTags:"<table><colgroup>",endTags:"</colgroup></table>"},tr:{tagsCount:2,startTags:"<table><tbody>",endTags:"</tbody></table>"}};o.tbody=o.colgroup=o.caption=o.tfoot=o.thead,o.th=o.td;var a=function(e){if("string"!=typeof e)return null;var t=i.Z.createDocumentFragment().appendChild(i.Z.createElement("div")),n=r.exec(e),a=n&&n[1].toLowerCase(),s=o[a]||o.default;t.innerHTML=s.startTags+e+s.endTags;for(var l=0;l<s.tagsCount;l++)t=t.lastChild;return[...t.childNodes]},s=function(e){var t=r.exec(e);return t&&t[1]in o}},8192:(e,t,n)=>{"use strict";n.d(t,{OI:()=>l,_A:()=>s});var i=n(3419),r=function(e){return null==e?"":String(e)},o=function(e){return r(e).charAt(0).toUpperCase()+e.substr(1)},a=function(e){return r(e).replace(/([a-z\d])([A-Z])/g,"$1 $2").split(/[\s_-]+/)},s=function(e,t){return(0,i.UI)(a(e),(function(e,n){return e=e.toLowerCase(),(t||n>0)&&(e=o(e)),e})).join("")},l=function(e){return o(function(e){return(0,i.UI)(a(e),(function(e){return e.toLowerCase()})).join("-")}(e).replace(/-/g," "))}},3419:(e,t,n)=>{"use strict";n.d(t,{S6:()=>r,UI:()=>i});var i=(e,t)=>{if(Array.isArray(e))return e.map(t);var n=[];for(var i in e)n.push(t(e[i],i));return n},r=(e,t)=>{if(e){if("length"in e)for(var n=0;n<e.length&&!1!==t.call(e[n],n,e[n]);n++);else for(var i in e)if(!1===t.call(e[i],i,e[i]))break;return e}}},3370:(e,t,n)=>{"use strict";n.d(t,{HR:()=>a});var i=n(450),r=n(2866),o=function(e,t,n,i){!i&&r.Z.isWrapped(e[t])?r.Z.assign(e[t],n):e[t]=n},a=function e(t,n,r,a){var s,l;for(var d in n)s=t[d],l=n[d],"__proto__"!==d&&"constructor"!==d&&t!==l&&((0,i.PO)(l)&&(l=e((r?(0,i.Kn)(s):(0,i.PO)(s))?s:{},l,r,a)),void 0!==l&&s!==l&&o(t,d,l,a));return t}},268:(e,t,n)=>{"use strict";n.d(t,{Z:()=>c});var i=n(1389),r=n(7154),o=n(8274),a=n(8714),s=[],l=(0,a.Z)((()=>{var e=i.Z.listen(i.Z.getDocument(),"DOMContentLoaded",(()=>{d.fire(),e()}))})),d={add:e=>{var t=(0,o.Ym)();t&&"loading"!==i.Z.getReadyState()?e():(s.push(e),t&&l())},fire:()=>{s.forEach((e=>e())),s=[]}};const c=(0,r.Z)(d)},9163:(e,t,n)=>{"use strict";n.d(t,{R:()=>l,f:()=>c});var i="dx-",r=null;function o(e){try{return new CSSStyleSheet}catch(n){var t=e.ownerDocument.createElement("style");return e.appendChild(t),t.sheet}}function a(e,t,n){for(var i=0;i<t.length;i++){var r=t[i];try{for(var o=0;o<r.cssRules.length;o++)s(e,r.cssRules[o],n)}catch(e){}}}function s(e,t,n){var r,o,a,s,l,d;(n||(null===(r=t.selectorText)||void 0===r?void 0:r.includes(i))||(null===(o=t.cssRules)||void 0===o||null===(a=o[0])||void 0===a||null===(s=a.selectorText)||void 0===s?void 0:s.includes(i))||(null===(l=t.name)||void 0===l?void 0:l.startsWith(i))||"DXIcons"===(null===(d=t.style)||void 0===d?void 0:d.fontFamily))&&e.insertRule(t.cssText,e.cssRules.length)}function l(e){var t,n=e.get(0),i=null===(t=n.getRootNode)||void 0===t?void 0:t.call(n);if(null!=i&&i.host){r||a(r=o(i),n.ownerDocument.styleSheets,!1);var s=o(i);a(s,i.styleSheets,!0),i.adoptedStyleSheets=[r,s]}}function d(e,t,n){var i=e.getBoundingClientRect();return i&&t>=i.left&&t<i.right&&n>=i.top&&n<i.bottom}function c(e,t,n){for(var i,r,o=(i=0,r=[],{push(e){return r.push(e),this},shift:()=>(i++,r[i-1]),get length(){return r.length-i},get items(){return r}}).push(n);o.length;)for(var a=o.shift(),s=0;s<a.childNodes.length;s++){var l=a.childNodes[s];l.nodeType===Node.ELEMENT_NODE&&d(l,e,t)&&"none"!==getComputedStyle(l).pointerEvents&&o.push(l)}var c=o.items.reverse();return c.pop(),c}},57:(e,t,n)=>{"use strict";n.d(t,{C_:()=>_,Cr:()=>v,Y_:()=>y,dz:()=>g,os:()=>w,zp:()=>x});var i=n(8274),r=n(1389),o=n(450),a=(0,i.Jj)(),s=function(e,t){var n=0;return t.forEach((function(t){n+=parseFloat(e[t])||0})),n},l=function(e,t){var n="width"===e?"Left":"Top",i="width"===e?"Right":"Bottom";return{padding:s(t,["padding"+n,"padding"+i]),border:s(t,["border"+n+"Width","border"+i+"Width"]),margin:s(t,["margin"+n,"margin"+i])}},d=function(e){var t,n=(null==e||null===(t=e.ownerDocument)||void 0===t?void 0:t.defaultView)||a;return n.getComputedStyle&&n.getComputedStyle(e)},c=function(e,t,n,i){var r;return(null==t?void 0:t[n])||(null===(r=e.style)||void 0===r?void 0:r[n])||i},u={content:0,padding:1,border:2,margin:3,"content-box":0,"border-box":2},p={width:["left","right"],height:["top","bottom"]};function h(e,t,n,i){var r=(e,t,n)=>parseFloat(c(e,t,n,"0"))||0,o="border"===n?"-width":"";return r(e,i,"".concat(n,"-").concat(p[t][0]).concat(o))+r(e,i,"".concat(n,"-").concat(p[t][1]).concat(o))}var f=function(e,t,n){var i="width"===t?"offsetWidth":"offsetHeight",r=d(e),o=c(e,r,t);""!==o&&"auto"!==o||(o=e[i]),o=parseFloat(o)||0;var a=c(e,r,"boxSizing","content-box"),s=u[n||a],l=u[a];if(void 0===s||void 0===l)throw new Error;if(l===s)return o;var p=Math.sign(s-l),f=!1,m=!1,g=!1,v=!1;1===p&&(s+=1,l+=1);for(var y=l;y!==s;y+=p)switch(y){case u.content:break;case u.padding:f=p*h(e,t,"padding",r);break;case u.border:m=p*h(e,t,"border",r);break;case u.margin:g=p*h(e,t,"margin",r)}if(f||m){var x=(!1===f?p*h(e,t,"padding",r):f)+(!1===m?p*h(e,t,"border",r):m);v=p*Math.max(0,Math.floor(e[i]-o-p*x))||0}return o+g+f+m+v};function m(e,t,n){return 2===arguments.length?b(t,e):b(t,e,n)}var g=e=>function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return m("width",...t)}(e),v=e=>function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return m("height",...t)}(e),y=(e,t)=>function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return m("outerWidth",...t)}(e,t||!1),x=(e,t)=>function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return m("outerHeight",...t)}(e,t||!1),b=function e(t,n,i){var a=n.toLowerCase().indexOf("width")>=0?"Width":"Height",s=a.toLowerCase(),c=0===n.indexOf("outer"),u=0===n.indexOf("inner"),p=2===arguments.length||"boolean"==typeof i;if((0,o.ZU)(t)){if(t.length>1&&!p){for(var h=0;h<t.length;h++)e(t[h],n,i);return}t=t[0]}if(t){if((0,o.FJ)(t))return c?t["inner"+a]:r.Z.getDocumentElement()["client"+a];if(r.Z.isDocument(t)){var m=r.Z.getDocumentElement(),g=r.Z.getBody();return Math.max(g["scroll"+a],g["offset"+a],m["scroll"+a],m["offset"+a],m["client"+a])}if(p){var v="content";return c&&(v=i?"margin":"border"),u&&(v="padding"),f(t,s,v)}if((0,o.kE)(i)){var y=d(t),x=l(s,y),b="border-box"===y.boxSizing;i=Number(i),c?i-=b?0:x.border+x.padding:u?i+=b?x.border:-x.padding:b&&(i+=x.border+x.padding)}return i+=(0,o.kE)(i)?"px":"",r.Z.setStyle(t,s,i),null}},_=e=>(0,o.FJ)(e)?e:e.defaultView,w=e=>{if(!e.getClientRects().length)return{top:0,left:0};var t=e.getBoundingClientRect(),n=_(e.ownerDocument),i=e.ownerDocument.documentElement;return{top:t.top+n.pageYOffset-i.clientTop,left:t.left+n.pageXOffset-i.clientLeft}}},3386:(e,t,n)=>{"use strict";n.d(t,{WU:()=>r});var i=n(450);function r(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return(0,i.mf)(e)?e(...n):(n.forEach(((t,n)=>{(0,i.HD)(t)&&(t=t.replace(/\$/g,"$$$$"));var r=new RegExp("\\{"+n+"\\}","gm");e=e.replace(r,t)})),e)}new RegExp("&","g"),new RegExp('"',"g"),new RegExp("'","g"),new RegExp("<","g"),new RegExp(">","g")},9071:(e,t,n)=>{"use strict";n.d(t,{Hj:()=>c,bh:()=>h,gC:()=>u});var i=n(8192),r=n(8714),o=n(450),a=n(1389),s=["","Webkit","Moz","O","Ms"],l={"":"",Webkit:"-webkit-",Moz:"-moz-",O:"-o-",ms:"-ms-"},d=(0,r.Z)((function(){return a.Z.createElement("dx").style})),c=function(e){if(e in d())return e;var t=e;e=e.charAt(0).toUpperCase()+e.substr(1);for(var n=1;n<s.length;n++){var i=s[n].toLowerCase()+e;if(i in d())return i}return t},u=function(e){return function(e,t){var n;e=(0,i._A)(e,!0);for(var r=0,o=s.length;r<o;r++){var a=s[r],l=a+e;if(void 0===(n=t((0,i._A)(l),a))&&(n=t(l,a)),void 0!==n)break}return n||""}(e,(function(e,t){if(e in d())return l[t]}))},p=["fillOpacity","columnCount","flexGrow","flexShrink","fontWeight","lineHeight","opacity","zIndex","zoom"],h=function(e,t){return(0,o.kE)(t)&&-1===p.indexOf(e)&&(t+="px"),t}},450:(e,t,n)=>{"use strict";n.d(t,{$K:()=>s,EY:()=>v,FJ:()=>f,HD:()=>d,J_:()=>a,Kn:()=>u,PO:()=>h,Qr:()=>p,ZU:()=>m,dt:()=>r,jn:()=>o,kE:()=>c,mf:()=>l,tI:()=>g});var i={"[object Array]":"array","[object Date]":"date","[object Object]":"object","[object String]":"string","[object Null]":"null"},r=function(e){var t=Object.prototype.toString.call(e);return"object"==typeof e?i[t]||"object":typeof e},o=function(e){return"boolean"==typeof e},a=function(e){return"date"===r(e)},s=function(e){return null!=e},l=function(e){return"function"==typeof e},d=function(e){return"string"==typeof e},c=function(e){return"number"==typeof e&&isFinite(e)||!isNaN(e-parseFloat(e))},u=function(e){return"object"===r(e)},p=function(e){var t;for(t in e)return!1;return!0},h=function(e){if(!e||"[object Object]"!==Object.prototype.toString.call(e))return!1;var t=Object.getPrototypeOf(e),n=Object.hasOwnProperty.call(t,"constructor")&&t.constructor;return"function"==typeof n&&Object.toString.call(n)===Object.toString.call(Object)},f=function(e){return null!=e&&e===e.window},m=function(e){return!(!e||!e.jquery&&!e.dxRenderer)},g=function(e){return!!e&&l(e.then)},v=function(e){return!!e&&l(e.done)&&l(e.fail)}},2866:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});var i=n(9915);const r=(0,n(7154).Z)({isWrapped:function(){return!1},isWritableWrapped:function(){return!1},wrap:function(e){return e},unwrap:function(e){return e},assign:function(){i.k.error("Method 'assign' should not be used for not wrapped variables. Use 'isWrapped' method for ensuring.")}})},8274:(e,t,n)=>{"use strict";n.d(t,{Jj:()=>a,Ym:()=>r,jW:()=>l,l$:()=>s}),n(1389);var i="undefined"!=typeof window,r=()=>i,o=r()?window:void 0;o||((o={}).window=o);var a=()=>o,s=e=>r()&&e in o,l=()=>r()?o.navigator:{userAgent:""}},1709:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var i=n(3419),r=n(968),o=function(e,t){var n={};"noBubble"in t&&(n.noBubble=t.noBubble),"bindType"in t&&(n.bindType=t.bindType),"delegateType"in t&&(n.delegateType=t.delegateType),(0,i.S6)(["setup","teardown","add","remove","trigger","handle","_default","dispose"],(function(e,i){t[i]&&(n[i]=function(){var e=[].slice.call(arguments);return e.unshift(this),t[i].apply(t,e)})})),r.Z.fire(e,n)};o.callbacks=r.Z;const a=o},968:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});const i=new(n(3815).Z)},8628:(e,t,n)=>{"use strict";n.d(t,{Z:()=>j});var i=n(7462),r=n(968),o=n(4099),a=n(1389),s=n(8274),l=n(7154),d=n(450),c=n(4795),u=n(3734),p=n(5709),h=n(8714),f=(0,s.Jj)(),m="dxEmptyEventType",g={mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},v={focusin:"focus",focusout:"blur"},y=["blur","focus","load"],x=["touchmove","wheel","mousewheel","touchstart"];function b(e,t){return!(0,d.FJ)(e)&&"#document"!==e.nodeName&&a.Z.elementMatches(e,t)}var _,w,E,C=new WeakMap,T=0,k=(w={},r.Z.add((function(e,t){w[e]=t})),{getField:function(e,t){return w[e]&&w[e][t]},callMethod:function(e,t,n,i){return w[e]&&w[e][t]&&w[e][t].apply(n,i)}}),S=(0,l.Z)({on:R(U(P((function(e,t,n,i,r){M(e,t).addHandler(r,n,i)})))),one:R(U((function(e,t,n,i,r){S.on(e,t,n,i,(function i(){S.off(e,t,n,i),r.apply(this,arguments)}))}))),off:R((E=P((function(e,t,n,i){M(e,t).removeHandler(i,n)})),function(e,t,n,i){"function"==typeof n&&(i=n,n=void 0),E(e,t,n,i)})),trigger:R(I((function(e,t,n){var i=t.type,r=M(e,t.type);if(k.callMethod(i,"trigger",e,[t,n]),r.callHandlers(t,n),!k.getField(i,"noBubble")&&!t.isPropagationStopped()&&-1===y.indexOf(i)){var a=[];!function e(t){var n,i=null!==(n=t.parentNode)&&void 0!==n?n:t.host;i&&(a.push(i),e(i))}(e),a.push(f);for(var s=0;a[s]&&!t.isPropagationStopped();)M(a[s],t.type).callHandlers((0,o.l)(t,{currentTarget:a[s]}),n),s++}(e.nodeType||(0,d.FJ)(e))&&(k.callMethod(i,"_default",e,[t,n]),function(e,t){var n=v[e]||e;(function(e,t){return"click"===e&&"a"===t.localName})(e,t)||(0,d.mf)(t[n])&&(_=e,t[n](),_=void 0)}(i,e))}))),triggerHandler:R(I((function(e,t,n){M(e,t.type).callHandlers(t,n)})))});function D(e,t){var n=e[0];if(n)if(a.Z.isNode(n)||(0,d.FJ)(n))t.apply(S,e);else{if((0,d.HD)(n)||!("length"in n))throw u.Z.Error("E0025");var i=Array.prototype.slice.call(e,0);Array.prototype.forEach.call(n,(function(e){i[0]=e,D(i,t)}))}}function R(e){return function(){D(arguments,e)}}var A=(0,h.Z)((function(){var e=!1;try{var t=Object.defineProperty({},"passive",{get:function(){return e=!0,!0}});f.addEventListener("test",null,t)}catch(e){}return e})),O=(e,t)=>(0,d.FJ)(e)?O(e.document,t):e.contains?e.contains(t):!!(t.compareDocumentPosition(e)&t.DOCUMENT_POSITION_CONTAINS);function M(e,t){var n=C.get(e),i=(t=t||"").split("."),r=i.slice(1),o=!!i[0];t=i[0]||m,n||(n={},C.set(e,n)),n[t]||(n[t]={handleObjects:[],nativeHandler:null});var s=n[t];return{addHandler:function(n,i,l){var d=function(i,r){var o,a,s=[i],d=i.currentTarget,c=i.relatedTarget;t in g&&(o=c&&d&&(c===d||O(d,c))),void 0!==r&&s.push(r),k.callMethod(t,"handle",e,[i,l]),o||(a=n.apply(d,s)),!1===a&&(i.preventDefault(),i.stopPropagation())},c={handler:n,wrappedHandler:function(t,n){if(!_||t.type!==_)if(t.data=l,t.delegateTarget=e,i)for(var r=t.target;r&&r!==e;)b(r,i)&&(t.currentTarget=r,d(t,n)),r=r.parentNode;else t.currentTarget=t.delegateTarget||t.target,d(t,n)},selector:i,type:t,data:l,namespace:r.join("."),namespaces:r,guid:++T};s.handleObjects.push(c);var u,p,h=1===s.handleObjects.length&&o;h&&(h=!k.callMethod(t,"setup",e,[l,r,n])),h&&(s.nativeHandler=(p=t,function(e,t){var n=M(this,p);e=S.Event(e),n.callHandlers(e,t)}),A()&&x.indexOf(t)>-1&&(u={passive:!1}),s.removeListener=a.Z.listen(e,g[t]||t,s.nativeHandler,u)),k.callMethod(t,"add",e,[c])},removeHandler:function(i,a){var s=function(t){var o,s=n[t];s.handleObjects.length?(s.handleObjects=s.handleObjects.filter((function(n){var s=r.length&&!N(n.namespaces,r)||i&&n.handler!==i||a&&n.selector!==a;return s||(o=n.handler,k.callMethod(t,"remove",e,[n])),s})),!s.handleObjects.length&&t!==m&&(k.callMethod(t,"teardown",e,[r,o]),s.nativeHandler&&s.removeListener(),delete n[t])):delete n[t]};if(o)s(t);else for(var l in n)s(l);0===Object.keys(n).length&&C.delete(e)},callHandlers:function(e,t){var i=!1,o=function(n){i||r.length&&!N(n.namespaces,r)||(n.wrappedHandler(e,t),i=e.isImmediatePropagationStopped())};s.handleObjects.forEach(o),r.length&&n[m]&&n[m].handleObjects.forEach(o)}}}function N(e,t){for(var n=0;n<t.length;n++)if(e.indexOf(t[n])<0)return!1;return!0}function U(e){return function(t,n,i,r,o){o||(o=r,r=void 0),"string"!=typeof i&&(r=i,i=void 0),o||"string"!=typeof n||(o=r||i,i=void 0,r=void 0),e(t,n,i,r,o)}}function I(e){return function(t,n,i){"string"==typeof n&&(n={type:n}),n.target||(n.target=t),n.currentTarget=t,n.delegateTarget||(n.delegateTarget=t),!n.type&&n.originalEvent&&(n.type=n.originalEvent.type),e(t,n instanceof S.Event?n:S.Event(n),i)}}function P(e){var t=function(t,n){if(n&&n.indexOf(" ")>-1){var i=Array.prototype.slice.call(arguments,0);n.split(" ").forEach((function(t){i[1]=t,e.apply(this,i)}))}else e.apply(this,arguments)};return function(e,n){if("object"==typeof n){var i=Array.prototype.slice.call(arguments,0);for(var r in n)i[1]=r,i[i.length-1]=n[r],t.apply(this,i)}else t.apply(this,arguments)}}function L(e){return function(e){return null==e.which&&0===e.type.indexOf("key")}(e)?null!=e.charCode?e.charCode:e.keyCode:function(e){return!e.which&&void 0!==e.button&&/^(?:mouse|pointer|contextmenu|drag|drop)|click/.test(e.type)}(e)?{1:1,2:3,3:1,4:2}[e.button]:e.which}function F(e){e&&(S.Event=e,S.Event.prototype=e.prototype)}function Z(e,t,n){Object.defineProperty(n||S.Event.prototype,e,{enumerable:!0,configurable:!0,get:function(){return this.originalEvent&&t(this.originalEvent)},set:function(t){Object.defineProperty(this,e,{enumerable:!0,configurable:!0,writable:!0,value:t})}})}F(function(e){return S.Event=function(t,n){if(!(this instanceof S.Event))return new S.Event(t,n);t||(t={}),"string"==typeof t&&(t={type:t}),n||(n={}),e.call(this,t,n)},(0,i.Z)(S.Event.prototype,{_propagationStopped:!1,_immediatePropagationStopped:!1,_defaultPrevented:!1,isPropagationStopped:function(){return!!(this._propagationStopped||this.originalEvent&&this.originalEvent.propagationStopped)},stopPropagation:function(){this._propagationStopped=!0,this.originalEvent&&this.originalEvent.stopPropagation()},isImmediatePropagationStopped:function(){return this._immediatePropagationStopped},stopImmediatePropagation:function(){this.stopPropagation(),this._immediatePropagationStopped=!0,this.originalEvent&&this.originalEvent.stopImmediatePropagation()},isDefaultPrevented:function(){return!!(this._defaultPrevented||this.originalEvent&&this.originalEvent.defaultPrevented)},preventDefault:function(){this._defaultPrevented=!0,this.originalEvent&&this.originalEvent.preventDefault()}}),S.Event}((function(e,t){var n;e instanceof S.Event||(0,s.Ym)()&&e instanceof f.Event||(null===(n=e.view)||void 0===n?void 0:n.Event)&&e instanceof e.view.Event?(this.originalEvent=e,this.type=e.type,this.currentTarget=void 0,Object.prototype.hasOwnProperty.call(e,"isTrusted")&&(this.isTrusted=e.isTrusted),this.timeStamp=e.timeStamp||Date.now()):(0,i.Z)(this,e),Z("which",L,this),0===e.type.indexOf("touch")&&(delete t.pageX,delete t.pageY),(0,i.Z)(this,t),this.guid=++T}))),["target","relatedTarget","delegateTarget","altKey","bubbles","cancelable","changedTouches","ctrlKey","detail","eventPhase","metaKey","shiftKey","view","char","code","charCode","key","keyCode","button","buttons","offsetX","offsetY","pointerId","pointerType","targetTouches","toElement","touches"].forEach((e=>Z(e,(t=>t[e])))),(0,p.Z)(Z);var H=(0,c.Z)(),B=(0,c.Z)();S.set=function(e){H.fire(),S.inject(e),F(e.Event),B.fire()},S.subscribeGlobal=function(){D(arguments,U((function(){var e=arguments;S.on.apply(this,e),H.add((function(){var t=Array.prototype.slice.call(e,0);t.splice(3,1),S.off.apply(this,t)})),B.add((function(){S.on.apply(this,e)}))})))},S.forcePassiveFalseEventNames=x,S.passiveEventHandlersSupported=A;const j=S},5709:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var i=["pageX","pageY","screenX","screenY","clientX","clientY"],r=function(e,t){if(t[e]&&!t.touches||!t.touches)return t[e];var n=t.touches.length?t.touches:t.changedTouches;return n.length?n[0][e]:void 0};function o(e){i.forEach((function(t){e(t,(function(e){return r(t,e)}))}),this)}},3825:(e,t,n)=>{"use strict";n.d(t,{V4:()=>A,yM:()=>S,a0:()=>w,hM:()=>E,J6:()=>v,BX:()=>D,G7:()=>C,pR:()=>b,N5:()=>x,z6:()=>_,r1:()=>T,EV:()=>R,jQ:()=>k});var i=n(5510),r=n(3734),o=(e,t)=>{if(!t)throw r.Z.Error("E0017");return Array.isArray(e)?e.map((e=>o(e,t))).join(" "):-1!==e.indexOf(" ")?o(e.split(/\s+/g),t):"".concat(e,".").concat(t)};const a=o;var s=n(8628),l=n(3419),d=n(4099),c=n(1389),u={backspace:"backspace",tab:"tab",enter:"enter",escape:"escape",pageup:"pageUp",pagedown:"pageDown",end:"end",home:"home",arrowleft:"leftArrow",arrowup:"upArrow",arrowright:"rightArrow",arrowdown:"downArrow",delete:"del"," ":"space",f:"F",a:"A","*":"asterisk","-":"minus",alt:"alt",control:"control",shift:"shift"},p={8:"backspace",9:"tab",13:"enter",27:"escape",33:"pageUp",34:"pageDown",35:"end",36:"home",37:"leftArrow",38:"upArrow",39:"rightArrow",40:"downArrow",46:"del",32:"space",70:"F",65:"A",106:"asterisk",109:"minus",189:"minus",173:"minus",16:"shift",17:"control",18:"alt"},h={dx:/^dx/i,mouse:/(mouse|wheel)/i,touch:/^touch/i,keyboard:/^key/i,pointer:/^(ms)?pointer/i},f=e=>e,m=e=>"dx"===v(e),g=e=>"touch"===v(e),v=e=>{var{type:t}=e,n="other";return(0,l.S6)(h,(function(e){if(this.test(t))return n=e,!1})),n},y=e=>"pointer"===v(e),x=e=>(e=>"mouse"===v(e))(e)||(y(e)||m(e))&&"mouse"===e.pointerType,b=e=>e&&"dxmousewheel"===e.type,_=e=>g(e)||(y(e)||m(e))&&"touch"===e.pointerType,w=e=>{var{pageX:t,pageY:n,timeStamp:i}=e;return{x:t,y:n,time:i}},E=(e,t)=>({x:t.x-e.x,y:t.y-e.y,time:t.time-e.time||1}),C=e=>{var{originalEvent:t,pointers:n}=e;return g(e)?(t.touches||[]).length:m(e)?(n||[]).length:0},T=e=>{var t,n,{target:r}=e,o=(0,i.Z)(r),a=(null==r?void 0:r.isContentEditable)||(null==r?void 0:r.hasAttribute("contenteditable")),s=o.is("input, textarea, select")||a;return b(e)?!(o.is("textarea")&&o.hasClass("dx-texteditor-input")||a)&&o.is("input[type='number'], textarea, select")&&o.is(":focus"):x(e)?s||e.which>1:_(e)?s&&(t=o,n=(0,i.Z)(t).get(0),c.Z.getActiveElement(n)===n):void 0},k=e=>f=e,S=(e,t)=>{var n=(e=>f(s.Z.Event(e,e),e))(e);return t&&(0,d.l)(n,t),n},D=e=>{var{originalEvent:t,delegateTarget:n}=e,i=S(t,e);return s.Z.trigger(n||i.target,i),i},R=e=>{var{key:t,which:n}=e,i=u[null==t?void 0:t.toLowerCase()]||t,r=p[n];return r&&i===t?r:!i&&n?String.fromCharCode(n):i},A=a},1057:(e,t,n)=>{"use strict";n.r(t);var i=n(9755),r=n.n(i);function o(e,t,n){function i(e){return"string"==typeof e?e.split("."):"number"==typeof e?[e]:e}e=i(e),t=i(t);var r=Math.max(e.length,t.length);isFinite(n)&&(r=Math.min(r,n));for(var o=0;o<r;o++){var a=parseInt(e[o]||0,10),s=parseInt(t[o]||0,10);if(a<s)return-1;if(a>s)return 1}return 0}var a=n(897),s=n(4432),l=(0,s.Z)().useJQuery;function d(){return r()&&(0,s.Z)().useJQuery}r()&&!1!==l&&(0,s.Z)({useJQuery:!0});var c=n(3041);d()&&c.Z.set(r());var u=n(3419),p=n(450),h=n(3825),f=n(1709),m=n(5709);if(d())if(o(r().fn.jquery,[3])<0){var g={2:"touch",3:"pen",4:"mouse"};(0,u.S6)(["MSPointerDown","MSPointerMove","MSPointerUp","MSPointerCancel","MSPointerOver","MSPointerOut","mouseenter","mouseleave","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave"],(function(){r().event.fixHooks[this]={filter:function(e,t){var n=t.pointerType;return(0,p.kE)(n)&&(e.pointerType=g[n]),e},props:r().event.mouseHooks.props.concat(["pointerId","pointerType","originalTarget","width","height","pressure","result","tiltX","charCode","tiltY","detail","isPrimary","prevValue"])}})),(0,u.S6)(["touchstart","touchmove","touchend","touchcancel"],(function(){r().event.fixHooks[this]={filter:function(e,t){return(0,m.Z)((function(n,i){e[n]=i(t)})),e},props:r().event.mouseHooks.props.concat(["touches","changedTouches","targetTouches","detail","result","originalTarget","charCode","prevValue"])}})),r().event.fixHooks.wheel=r().event.mouseHooks;var v={props:r().event.mouseHooks.props.concat(["pointerType","pointerId","pointers"])};f.Z.callbacks.add((function(e){r().event.fixHooks[e]=v})),(0,h.jQ)((function(e,t){for(var n=r().event.fixHooks[t.type]||r().event.mouseHooks,i=n.props?r().event.props.concat(n.props):r().event.props,o=i.length;o--;){var a=i[o];e[a]=t[a]}return n.filter?n.filter(e,t):e}))}else(0,m.Z)((function(e,t){r().event.addProp(e,t)}));var y=n(9303);if(d()){var x=r().Deferred,b={Deferred:x};b.when=o(r().fn.jquery,[3])<0?r().when:function(e){return 0===arguments.length?(new x).resolve():1===arguments.length?e&&e.then?e:(new x).resolve(e):r().when.apply(r(),arguments)},(0,y.wU)(b)}var _=n(8824),w=n(268);if(r()&&!_.t.fired()){var E=r().holdReady||r().fn.holdReady;E(!0),_.t.add((function(){w.Z.add((function(){E(!1)}))}))}var C=n(8628),T=n(968),k=n(1389);d()&&(T.Z.add((function(e,t){r().event.special[e]=t})),C.Z.passiveEventHandlersSupported()&&C.Z.forcePassiveFalseEventNames.forEach((function(e){r().event.special[e]={setup:function(t,n,i){k.Z.listen(this,e,i,{passive:!1})}}})),C.Z.set({on:function(e){r()(e).on.apply(r()(e),Array.prototype.slice.call(arguments,1))},one:function(e){r()(e).one.apply(r()(e),Array.prototype.slice.call(arguments,1))},off:function(e){r()(e).off.apply(r()(e),Array.prototype.slice.call(arguments,1))},trigger:function(e){r()(e).trigger.apply(r()(e),Array.prototype.slice.call(arguments,1))},triggerHandler:function(e){r()(e).triggerHandler.apply(r()(e),Array.prototype.slice.call(arguments,1))},Event:r().Event})),r()&&r().easing;var S=n(6403);d()&&(0,S.D9)(r());var D=n(1965);d()&&(0,D.Q)((function(e){return e}));var R=n(2295),A=n(3734);r()&&R.Z.add((function(e,t){r().fn[e]=function(n){var i;if("string"==typeof n){var r=n,o=[].slice.call(arguments).slice(1);this.each((function(){var n=t.getInstance(this);if(!n)throw A.Z.Error("E0009",e);var a=n[r].apply(n,o);void 0===i&&(i=a)}))}else this.each((function(){var e=t.getInstance(this);e?e.option(n):new t(this,n)})),i=this;return i}}));var O=n(8274),M=n(7154),N=(0,O.Jj)(),U={getXhr:function(){return new N.XMLHttpRequest}};const I=(0,M.Z)(U);var P=n(4099),L=(0,O.Jj)(),F="success",Z="error",H=function(e){var t=k.Z.createElement("script");for(var n in e)t[n]=e[n];return t},B=function(e){e.parentNode.removeChild(e)},j=function(e){return k.Z.getHead().appendChild(e)},z=function(e){var t=H({text:e});j(t),B(t)};function G(e){return(e.method||"GET").toUpperCase()}const V=(0,M.Z)({sendRequest:function(e){var t,n=I.getXhr(),i=new y.BH,r=i.promise(),o=!(0,p.$K)(e.async)||e.async,a=e.dataType,s=e.timeout||0;e.crossDomain=function(e){if(!(0,O.Ym)())return!0;var t=!1,n=k.Z.createElement("a"),i=k.Z.createElement("a");n.href=L.location.href;try{i.href=e,i.href=i.href,t=n.protocol+"//"+n.host!=i.protocol+"//"+i.host}catch(e){t=!0}return t}(e.url);var l="jsonp"===a||"script"===a;void 0===e.cache&&(e.cache=!l);var d=function(e){if("jsonp"===e.dataType){var t=Math.random().toString().replace(/\D/g,""),n=e.jsonpCallback||"dxCallback"+Date.now()+"_"+t,i=e.jsonp||"callback";return e.data=e.data||{},e.data[i]=n,n}}(e),c=function(e){var t=e.headers||{};return t["Content-Type"]=t["Content-Type"]||function(e){var t;return e.data&&!e.upload&&"GET"!==G(e)&&(t="application/x-www-form-urlencoded;charset=utf-8"),e.contentType||t}(e),t.Accept=t.Accept||function(e){var t=e.dataType||"*",n="text/javascript, application/javascript, application/ecmascript, application/x-ecmascript",i={"*":"*/*",text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript",jsonp:n,script:n};return(0,P.x)(i,e.accepts,!0),i[t]?i[t]+("*"!==t?", */*; q=0.01":""):i["*"]}(e),e.crossDomain||t["X-Requested-With"]||(t["X-Requested-With"]="XMLHttpRequest"),t}(e),u=function(e,t){var n=e.data,i="string"==typeof n,r=e.url||L.location.href;return i||e.cache||((n=n||{})._=Date.now()),n&&!e.upload&&(i||(n=function(e){var t=[];for(var n in e){var i=e[n];void 0!==i&&(null===i&&(i=""),"function"==typeof i&&(i=i()),t.push(encodeURIComponent(n)+"="+encodeURIComponent(i)))}return t.join("&")}(n)),"GET"===G(e)?(""!==n&&(r+=(r.indexOf("?")>-1?"&":"?")+n),n=null):t["Content-Type"]&&t["Content-Type"].indexOf("application/x-www-form-urlencoded")>-1&&(n=n.replace(/%20/g,"+"))),{url:r,parameters:n}}(e,c),h=u.url,f=u.parameters;if(d&&(L[d]=function(e){i.resolve(e,F,n)}),e.crossDomain&&l)return function(e){var t=H({src:e});return new Promise((function(e,n){var i={load:e,error:n},r=function(e){i[e.type](),B(t)};for(var o in i)k.Z.listen(t,o,r);j(t)}))}(h).then((function(){"jsonp"!==a&&i.resolve(null,F,n)}),(function(){i.reject(n,Z)})),r;if(e.crossDomain&&!("withCredentials"in n))return i.reject(n,Z),r;if(n.open(G(e),h,o,e.username,e.password),o&&(n.timeout=s,t=function(e,t){return e&&setTimeout((function(){t.customStatus="timeout",t.abort()}),e)}(s,n)),n.onreadystatechange=function(e){var r;4===n.readyState&&(clearTimeout(t),200<=(r=n.status)&&r<300?function(e){return 204!==e}(n.status)?function(e,t,n){var i=function(e){return e.responseType&&"text"!==e.responseType||"string"!=typeof e.responseText?e.response:e.responseText}(t);switch(n){case"jsonp":z(i);break;case"script":z(i),e.resolve(i,F,t);break;case"json":try{e.resolve(JSON.parse(i),F,t)}catch(n){e.reject(t,"parsererror",n)}break;default:e.resolve(i,F,t)}}(i,n,a):i.resolve(null,"nocontent",n):i.reject(n,n.customStatus||Z))},e.upload&&(n.upload.onprogress=e.upload.onprogress,n.upload.onloadstart=e.upload.onloadstart,n.upload.onabort=e.upload.onabort),e.xhrFields)for(var m in e.xhrFields)n[m]=e.xhrFields[m];for(var g in"arraybuffer"===e.responseType&&(n.responseType=e.responseType),c)Object.prototype.hasOwnProperty.call(c,g)&&(0,p.$K)(c[g])&&n.setRequestHeader(g,c[g]);return e.beforeSend&&e.beforeSend(n),n.send(f),r.abort=function(){n.abort()},r}});if(d()&&V.inject({sendRequest:function(e){return e.responseType||e.upload?this.callBase.apply(this,[e]):r().ajax(e)}}),d()&&o(r().fn.jquery,[1,10])<0)throw a.Z.Error("E0012")},9506:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>ks});var i={};n.r(i),n.d(i,{animation:()=>Oo,inputType:()=>To,nativeScrolling:()=>Mo,pointerEvents:()=>So,styleProp:()=>_o.Hj,stylePropPrefix:()=>_o.gC,supportProp:()=>Co,touch:()=>Do,touchEvents:()=>ko,transition:()=>Ro,transitionEndEventName:()=>Ao});var r=n(5510),o=n(2295),a=n(3734),s=n(6403),l=n(8628),d=n(450),c=n(1709),u="dxremove",p="dxRemoveEvent";(0,s.WD)((function(e){e=[].slice.call(e);for(var t=0;t<e.length;t++){var n=(0,r.Z)(e[t]);n.prop(p)&&(n[0][p]=null,l.Z.triggerHandler(n,u))}})),(0,c.Z)(u,{noBubble:!0,setup:function(e){(0,r.Z)(e).prop(p,!0)}});var h="dxComponents",f=new WeakMap,m=0,g=function(e,t){if(!(0,d.$K)(t)){if(!f.has(e)){var n="dxPrivateComponent"+m++;return f.set(e,n),n}return f.get(e)}f.set(e,t)};o.Z.add((function(e,t){r.Z.fn[e]=function(n){var i;if("string"==typeof n){var r=n,o=[].slice.call(arguments).slice(1);this.each((function(){var n=t.getInstance(this);if(!n)throw a.Z.Error("E0009",e);var s=n[r].apply(n,o);void 0===i&&(i=s)}))}else this.each((function(){var e=t.getInstance(this);e?e.option(n):new t(this,n)})),i=this;return i}}));var v=n(7462),y=n(9784),x=n(4099),b=n(3419),w=n(4795);class E{constructor(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this._events={},this._owner=e,this._options=t}static create(e,t){return t?(0,d.mf)(t)?t(e):t:new E(e)}hasEvent(e){var t=this._events[e];return!!t&&t.has()}fireEvent(e,t){var n=this._events[e];return n&&n.fireWith(this._owner,t),this._owner}on(e,t){if((0,d.PO)(e))(0,b.S6)(e,((e,t)=>{this.on(e,t)}));else{var n=this._events[e];n||(n=(0,w.Z)({syncStrategy:this._options.syncStrategy}),this._events[e]=n),(n.originalAdd||n.add).call(n,t)}}off(e,t){var n=this._events[e];n&&((0,d.mf)(t)?n.remove(t):n.empty())}dispose(){(0,b.S6)(this._events,((e,t)=>{t.empty()}))}}var C=n(2622),T=n(7154),k=function(e){return 0===e?0:e/Math.abs(e)};function S(e,t){var n=function(e){var t=e.toExponential().split("e"),n=parseFloat(t[0]);return{exponent:parseInt(t[1]),mantissa:n}}(e);return parseFloat("".concat(n.mantissa,"e").concat(n.exponent+t))}var D=10;function R(e,t){var n=t||0;return(n>0?function(e,t){var n=Math.pow(D,t);return function(e){return k(e)*Math.round(Math.abs(e))}(S(e,t))/n}(...arguments):e).toFixed(n)}var A={thousandsSeparator:",",decimalSeparator:"."},O="'";function M(e){return e.toString().split("").reverse().join("")}function N(e){return e.replace(/'.+'/g,"")}function U(e){if(!e)return 0;var t=N(e);return t.length-t.replace(/[#]/g,"").length}function I(e){if(!e)return 0;var t=N(e);return t.length-t.replace(/[0]/g,"").length}function P(e,t,n){if(!e)return"";for(e.length>n&&(e=e.substr(0,n));e.length>t&&"0"===e.slice(-1);)e=e.substr(0,e.length-1);for(;e.length<t;)e+="0";return e}function L(e,t){return e.split(O).map((function(e,n){var i=n%2;return!e&&i?O:i?e:e.replace(/[,#0]+/,t)})).join("")}var F=n(4432);const Z={_formatNumberCore:function(e,t,n){if("currency"===t){n.precision=n.precision||0;var i=this.format(e,(0,x.l)({},n,{type:"fixedpoint"})),r=this.getCurrencySymbol().symbol.replace(/\$/g,"$$$$");return i.replace(/^(\D*)(\d.*)/,"$1"+r+"$2")}return this.callBase.apply(this,arguments)},getCurrencySymbol:function(){return{symbol:"$"}},getOpenXmlCurrencyFormat:function(){return"$#,##0{0}_);\\($#,##0{0}\\)"}},H={"en-150":"en-001","en-AG":"en-001","en-AI":"en-001","en-AU":"en-001","en-BB":"en-001","en-BM":"en-001","en-BS":"en-001","en-BW":"en-001","en-BZ":"en-001","en-CC":"en-001","en-CK":"en-001","en-CM":"en-001","en-CX":"en-001","en-CY":"en-001","en-DG":"en-001","en-DM":"en-001","en-ER":"en-001","en-FJ":"en-001","en-FK":"en-001","en-FM":"en-001","en-GB":"en-001","en-GD":"en-001","en-GG":"en-001","en-GH":"en-001","en-GI":"en-001","en-GM":"en-001","en-GY":"en-001","en-HK":"en-001","en-IE":"en-001","en-IL":"en-001","en-IM":"en-001","en-IN":"en-001","en-IO":"en-001","en-JE":"en-001","en-JM":"en-001","en-KE":"en-001","en-KI":"en-001","en-KN":"en-001","en-KY":"en-001","en-LC":"en-001","en-LR":"en-001","en-LS":"en-001","en-MG":"en-001","en-MO":"en-001","en-MS":"en-001","en-MT":"en-001","en-MU":"en-001","en-MV":"en-001","en-MW":"en-001","en-MY":"en-001","en-NA":"en-001","en-NF":"en-001","en-NG":"en-001","en-NR":"en-001","en-NU":"en-001","en-NZ":"en-001","en-PG":"en-001","en-PK":"en-001","en-PN":"en-001","en-PW":"en-001","en-RW":"en-001","en-SB":"en-001","en-SC":"en-001","en-SD":"en-001","en-SG":"en-001","en-SH":"en-001","en-SL":"en-001","en-SS":"en-001","en-SX":"en-001","en-SZ":"en-001","en-TC":"en-001","en-TK":"en-001","en-TO":"en-001","en-TT":"en-001","en-TV":"en-001","en-TZ":"en-001","en-UG":"en-001","en-VC":"en-001","en-VG":"en-001","en-VU":"en-001","en-WS":"en-001","en-ZA":"en-001","en-ZM":"en-001","en-ZW":"en-001","en-AT":"en-150","en-BE":"en-150","en-CH":"en-150","en-DE":"en-150","en-DK":"en-150","en-FI":"en-150","en-NL":"en-150","en-SE":"en-150","en-SI":"en-150","hi-Latn":"en-IN","es-AR":"es-419","es-BO":"es-419","es-BR":"es-419","es-BZ":"es-419","es-CL":"es-419","es-CO":"es-419","es-CR":"es-419","es-CU":"es-419","es-DO":"es-419","es-EC":"es-419","es-GT":"es-419","es-HN":"es-419","es-MX":"es-419","es-NI":"es-419","es-PA":"es-419","es-PE":"es-419","es-PR":"es-419","es-PY":"es-419","es-SV":"es-419","es-US":"es-419","es-UY":"es-419","es-VE":"es-419",nb:"no",nn:"no","pt-AO":"pt-PT","pt-CH":"pt-PT","pt-CV":"pt-PT","pt-FR":"pt-PT","pt-GQ":"pt-PT","pt-GW":"pt-PT","pt-LU":"pt-PT","pt-MO":"pt-PT","pt-MZ":"pt-PT","pt-ST":"pt-PT","pt-TL":"pt-PT","az-Arab":"und","az-Cyrl":"und","bal-Latn":"und","blt-Latn":"und","bm-Nkoo":"und","bs-Cyrl":"und","byn-Latn":"und","cu-Glag":"und","dje-Arab":"und","dyo-Arab":"und","en-Dsrt":"und","en-Shaw":"und","ff-Adlm":"und","ff-Arab":"und","ha-Arab":"und","iu-Latn":"und","kk-Arab":"und","ks-Deva":"und","ku-Arab":"und","ky-Arab":"und","ky-Latn":"und","ml-Arab":"und","mn-Mong":"und","mni-Mtei":"und","ms-Arab":"und","pa-Arab":"und","sat-Deva":"und","sd-Deva":"und","sd-Khoj":"und","sd-Sind":"und","shi-Latn":"und","so-Arab":"und","sr-Latn":"und","sw-Arab":"und","tg-Arab":"und","ug-Cyrl":"und","uz-Arab":"und","uz-Cyrl":"und","vai-Latn":"und","wo-Arab":"und","yo-Arab":"und","yue-Hans":"und","zh-Hant":"und","zh-Hant-MO":"zh-Hant-HK"},B=(e,t)=>{var n=e[t];return n?"root"!==n&&n:t.substr(0,t.lastIndexOf("-"))};var j="en";const z=(0,T.Z)({locale:(G=j,e=>{if(!e)return G;G=e}),getValueByClosestLocale:function(e){for(var t,n=this.locale(),i=e(n);!i&&!t;)(n=B(H,n))?i=e(n):t=!0;return void 0===i&&n!==j?e(j):i}});var G;const V={af:"¤#,##0.00;(¤#,##0.00)","af-NA":"¤#,##0.00;(¤#,##0.00)",agq:"#,##0.00¤",ak:"¤#,##0.00",am:"¤#,##0.00;(¤#,##0.00)",ar:"¤#,##0.00;(¤#,##0.00)","ar-AE":"¤#,##0.00;(¤#,##0.00)","ar-BH":"¤#,##0.00;(¤#,##0.00)","ar-DJ":"¤#,##0.00;(¤#,##0.00)","ar-DZ":"¤#,##0.00;(¤#,##0.00)","ar-EG":"¤#,##0.00;(¤#,##0.00)","ar-EH":"¤#,##0.00;(¤#,##0.00)","ar-ER":"¤#,##0.00;(¤#,##0.00)","ar-IL":"¤#,##0.00;(¤#,##0.00)","ar-IQ":"¤#,##0.00;(¤#,##0.00)","ar-JO":"¤#,##0.00;(¤#,##0.00)","ar-KM":"¤#,##0.00;(¤#,##0.00)","ar-KW":"¤#,##0.00;(¤#,##0.00)","ar-LB":"¤#,##0.00;(¤#,##0.00)","ar-LY":"¤#,##0.00;(¤#,##0.00)","ar-MA":"¤#,##0.00;(¤#,##0.00)","ar-MR":"¤#,##0.00;(¤#,##0.00)","ar-OM":"¤#,##0.00;(¤#,##0.00)","ar-PS":"¤#,##0.00;(¤#,##0.00)","ar-QA":"¤#,##0.00;(¤#,##0.00)","ar-SA":"¤#,##0.00;(¤#,##0.00)","ar-SD":"¤#,##0.00;(¤#,##0.00)","ar-SO":"¤#,##0.00;(¤#,##0.00)","ar-SS":"¤#,##0.00;(¤#,##0.00)","ar-SY":"¤#,##0.00;(¤#,##0.00)","ar-TD":"¤#,##0.00;(¤#,##0.00)","ar-TN":"¤#,##0.00;(¤#,##0.00)","ar-YE":"¤#,##0.00;(¤#,##0.00)",as:"¤ #,##,##0.00",asa:"#,##0.00 ¤",ast:"#,##0.00 ¤",az:"#,##0.00 ¤","az-Cyrl":"#,##0.00 ¤","az-Latn":"#,##0.00 ¤",bas:"#,##0.00 ¤",be:"#,##0.00 ¤","be-tarask":"#,##0.00 ¤",bem:"¤#,##0.00;(¤#,##0.00)",bez:"#,##0.00¤",bg:"0.00 ¤;(0.00 ¤)",bm:"¤#,##0.00;(¤#,##0.00)",bn:"#,##,##0.00¤;(#,##,##0.00¤)","bn-IN":"#,##,##0.00¤;(#,##,##0.00¤)",bo:"¤ #,##0.00","bo-IN":"¤ #,##0.00",br:"#,##0.00 ¤",brx:"¤ #,##,##0.00",bs:"#,##0.00 ¤","bs-Cyrl":"#,##0.00 ¤","bs-Latn":"#,##0.00 ¤",ca:"#,##0.00 ¤;(#,##0.00 ¤)","ca-AD":"#,##0.00 ¤;(#,##0.00 ¤)","ca-ES-valencia":"#,##0.00 ¤;(#,##0.00 ¤)","ca-FR":"#,##0.00 ¤;(#,##0.00 ¤)","ca-IT":"#,##0.00 ¤;(#,##0.00 ¤)",ccp:"#,##,##0.00¤;(#,##,##0.00¤)","ccp-IN":"#,##,##0.00¤;(#,##,##0.00¤)",ce:"#,##0.00 ¤",ceb:"¤#,##0.00;(¤#,##0.00)",cgg:"¤#,##0.00",chr:"¤#,##0.00;(¤#,##0.00)",ckb:"¤ #,##0.00","ckb-IR":"¤ #,##0.00",cs:"#,##0.00 ¤",cy:"¤#,##0.00;(¤#,##0.00)",da:"#,##0.00 ¤","da-GL":"#,##0.00 ¤",dav:"¤#,##0.00;(¤#,##0.00)",de:"#,##0.00 ¤","de-AT":"#,##0.00 ¤","de-BE":"#,##0.00 ¤","de-CH":"#,##0.00 ¤","de-IT":"#,##0.00 ¤","de-LI":"#,##0.00 ¤","de-LU":"#,##0.00 ¤",dje:"#,##0.00¤",doi:"¤#,##0.00",dsb:"#,##0.00 ¤",dua:"#,##0.00 ¤",dyo:"#,##0.00 ¤",dz:"¤#,##,##0.00",ebu:"¤#,##0.00;(¤#,##0.00)",ee:"¤#,##0.00;(¤#,##0.00)","ee-TG":"¤#,##0.00;(¤#,##0.00)",el:"#,##0.00 ¤","el-CY":"#,##0.00 ¤",en:"¤#,##0.00;(¤#,##0.00)","en-001":"¤#,##0.00;(¤#,##0.00)","en-150":"#,##0.00 ¤","en-AE":"¤#,##0.00;(¤#,##0.00)","en-AG":"¤#,##0.00;(¤#,##0.00)","en-AI":"¤#,##0.00;(¤#,##0.00)","en-AS":"¤#,##0.00;(¤#,##0.00)","en-AT":"¤ #,##0.00","en-AU":"¤#,##0.00;(¤#,##0.00)","en-BB":"¤#,##0.00;(¤#,##0.00)","en-BE":"#,##0.00 ¤","en-BI":"¤#,##0.00;(¤#,##0.00)","en-BM":"¤#,##0.00;(¤#,##0.00)","en-BS":"¤#,##0.00;(¤#,##0.00)","en-BW":"¤#,##0.00;(¤#,##0.00)","en-BZ":"¤#,##0.00;(¤#,##0.00)","en-CA":"¤#,##0.00;(¤#,##0.00)","en-CC":"¤#,##0.00;(¤#,##0.00)","en-CH":"¤ #,##0.00;¤-#,##0.00","en-CK":"¤#,##0.00;(¤#,##0.00)","en-CM":"¤#,##0.00;(¤#,##0.00)","en-CX":"¤#,##0.00;(¤#,##0.00)","en-CY":"¤#,##0.00;(¤#,##0.00)","en-DE":"#,##0.00 ¤","en-DG":"¤#,##0.00;(¤#,##0.00)","en-DK":"#,##0.00 ¤","en-DM":"¤#,##0.00;(¤#,##0.00)","en-ER":"¤#,##0.00;(¤#,##0.00)","en-FI":"#,##0.00 ¤","en-FJ":"¤#,##0.00;(¤#,##0.00)","en-FK":"¤#,##0.00;(¤#,##0.00)","en-FM":"¤#,##0.00;(¤#,##0.00)","en-GB":"¤#,##0.00;(¤#,##0.00)","en-GD":"¤#,##0.00;(¤#,##0.00)","en-GG":"¤#,##0.00;(¤#,##0.00)","en-GH":"¤#,##0.00;(¤#,##0.00)","en-GI":"¤#,##0.00;(¤#,##0.00)","en-GM":"¤#,##0.00;(¤#,##0.00)","en-GU":"¤#,##0.00;(¤#,##0.00)","en-GY":"¤#,##0.00;(¤#,##0.00)","en-HK":"¤#,##0.00;(¤#,##0.00)","en-IE":"¤#,##0.00;(¤#,##0.00)","en-IL":"¤#,##0.00;(¤#,##0.00)","en-IM":"¤#,##0.00;(¤#,##0.00)","en-IN":"¤#,##0.00;(¤#,##0.00)","en-IO":"¤#,##0.00;(¤#,##0.00)","en-JE":"¤#,##0.00;(¤#,##0.00)","en-JM":"¤#,##0.00;(¤#,##0.00)","en-KE":"¤#,##0.00;(¤#,##0.00)","en-KI":"¤#,##0.00;(¤#,##0.00)","en-KN":"¤#,##0.00;(¤#,##0.00)","en-KY":"¤#,##0.00;(¤#,##0.00)","en-LC":"¤#,##0.00;(¤#,##0.00)","en-LR":"¤#,##0.00;(¤#,##0.00)","en-LS":"¤#,##0.00;(¤#,##0.00)","en-MG":"¤#,##0.00;(¤#,##0.00)","en-MH":"¤#,##0.00;(¤#,##0.00)","en-MO":"¤#,##0.00;(¤#,##0.00)","en-MP":"¤#,##0.00;(¤#,##0.00)","en-MS":"¤#,##0.00;(¤#,##0.00)","en-MT":"¤#,##0.00;(¤#,##0.00)","en-MU":"¤#,##0.00;(¤#,##0.00)","en-MV":"¤ #,##0.00","en-MW":"¤#,##0.00;(¤#,##0.00)","en-MY":"¤#,##0.00;(¤#,##0.00)","en-NA":"¤#,##0.00;(¤#,##0.00)","en-NF":"¤#,##0.00;(¤#,##0.00)","en-NG":"¤#,##0.00;(¤#,##0.00)","en-NL":"¤ #,##0.00;(¤ #,##0.00)","en-NR":"¤#,##0.00;(¤#,##0.00)","en-NU":"¤#,##0.00;(¤#,##0.00)","en-NZ":"¤#,##0.00;(¤#,##0.00)","en-PG":"¤#,##0.00;(¤#,##0.00)","en-PH":"¤#,##0.00;(¤#,##0.00)","en-PK":"¤#,##0.00;(¤#,##0.00)","en-PN":"¤#,##0.00;(¤#,##0.00)","en-PR":"¤#,##0.00;(¤#,##0.00)","en-PW":"¤#,##0.00;(¤#,##0.00)","en-RW":"¤#,##0.00;(¤#,##0.00)","en-SB":"¤#,##0.00;(¤#,##0.00)","en-SC":"¤#,##0.00;(¤#,##0.00)","en-SD":"¤#,##0.00;(¤#,##0.00)","en-SE":"#,##0.00 ¤","en-SG":"¤#,##0.00;(¤#,##0.00)","en-SH":"¤#,##0.00;(¤#,##0.00)","en-SI":"#,##0.00 ¤;(#,##0.00 ¤)","en-SL":"¤#,##0.00;(¤#,##0.00)","en-SS":"¤#,##0.00;(¤#,##0.00)","en-SX":"¤#,##0.00;(¤#,##0.00)","en-SZ":"¤#,##0.00;(¤#,##0.00)","en-TC":"¤#,##0.00;(¤#,##0.00)","en-TK":"¤#,##0.00;(¤#,##0.00)","en-TO":"¤#,##0.00;(¤#,##0.00)","en-TT":"¤#,##0.00;(¤#,##0.00)","en-TV":"¤#,##0.00;(¤#,##0.00)","en-TZ":"¤#,##0.00;(¤#,##0.00)","en-UG":"¤#,##0.00;(¤#,##0.00)","en-UM":"¤#,##0.00;(¤#,##0.00)","en-VC":"¤#,##0.00;(¤#,##0.00)","en-VG":"¤#,##0.00;(¤#,##0.00)","en-VI":"¤#,##0.00;(¤#,##0.00)","en-VU":"¤#,##0.00;(¤#,##0.00)","en-WS":"¤#,##0.00;(¤#,##0.00)","en-ZA":"¤#,##0.00;(¤#,##0.00)","en-ZM":"¤#,##0.00;(¤#,##0.00)","en-ZW":"¤#,##0.00;(¤#,##0.00)",eo:"¤ #,##0.00",es:"#,##0.00 ¤","es-419":"¤#,##0.00","es-AR":"¤ #,##0.00;(¤ #,##0.00)","es-BO":"¤#,##0.00","es-BR":"¤#,##0.00","es-BZ":"¤#,##0.00","es-CL":"¤#,##0.00","es-CO":"¤#,##0.00","es-CR":"¤#,##0.00","es-CU":"¤#,##0.00","es-DO":"¤#,##0.00;(¤#,##0.00)","es-EA":"#,##0.00 ¤","es-EC":"¤#,##0.00","es-GQ":"#,##0.00 ¤","es-GT":"¤#,##0.00","es-HN":"¤#,##0.00","es-IC":"#,##0.00 ¤","es-MX":"¤#,##0.00","es-NI":"¤#,##0.00","es-PA":"¤#,##0.00","es-PE":"¤#,##0.00","es-PH":"#,##0.00 ¤","es-PR":"¤#,##0.00","es-PY":"¤#,##0.00","es-SV":"¤#,##0.00","es-US":"¤#,##0.00","es-UY":"¤ #,##0.00;(¤ #,##0.00)","es-VE":"¤#,##0.00",et:"#,##0.00 ¤;(#,##0.00 ¤)",eu:"#,##0.00 ¤;(#,##0.00 ¤)",ewo:"#,##0.00 ¤",fa:"‎¤ #,##0.00;‎(¤ #,##0.00)","fa-AF":"¤ #,##0.00;‎(¤ #,##0.00)",ff:"#,##0.00 ¤","ff-Adlm":"¤ #,##0.00","ff-Adlm-BF":"¤ #,##0.00","ff-Adlm-CM":"¤ #,##0.00","ff-Adlm-GH":"¤ #,##0.00","ff-Adlm-GM":"¤ #,##0.00","ff-Adlm-GW":"¤ #,##0.00","ff-Adlm-LR":"¤ #,##0.00","ff-Adlm-MR":"¤ #,##0.00","ff-Adlm-NE":"¤ #,##0.00","ff-Adlm-NG":"¤ #,##0.00","ff-Adlm-SL":"¤ #,##0.00","ff-Adlm-SN":"¤ #,##0.00","ff-Latn":"#,##0.00 ¤","ff-Latn-BF":"#,##0.00 ¤","ff-Latn-CM":"#,##0.00 ¤","ff-Latn-GH":"#,##0.00 ¤","ff-Latn-GM":"#,##0.00 ¤","ff-Latn-GN":"#,##0.00 ¤","ff-Latn-GW":"#,##0.00 ¤","ff-Latn-LR":"#,##0.00 ¤","ff-Latn-MR":"#,##0.00 ¤","ff-Latn-NE":"#,##0.00 ¤","ff-Latn-NG":"#,##0.00 ¤","ff-Latn-SL":"#,##0.00 ¤",fi:"#,##0.00 ¤",fil:"¤#,##0.00;(¤#,##0.00)",fo:"#,##0.00 ¤;(#,##0.00 ¤)","fo-DK":"#,##0.00 ¤;(#,##0.00 ¤)",fr:"#,##0.00 ¤;(#,##0.00 ¤)","fr-BE":"#,##0.00 ¤;(#,##0.00 ¤)","fr-BF":"#,##0.00 ¤;(#,##0.00 ¤)","fr-BI":"#,##0.00 ¤;(#,##0.00 ¤)","fr-BJ":"#,##0.00 ¤;(#,##0.00 ¤)","fr-BL":"#,##0.00 ¤;(#,##0.00 ¤)","fr-CA":"#,##0.00 ¤;(#,##0.00 ¤)","fr-CD":"#,##0.00 ¤;(#,##0.00 ¤)","fr-CF":"#,##0.00 ¤;(#,##0.00 ¤)","fr-CG":"#,##0.00 ¤;(#,##0.00 ¤)","fr-CH":"#,##0.00 ¤;(#,##0.00 ¤)","fr-CI":"#,##0.00 ¤;(#,##0.00 ¤)","fr-CM":"#,##0.00 ¤;(#,##0.00 ¤)","fr-DJ":"#,##0.00 ¤;(#,##0.00 ¤)","fr-DZ":"#,##0.00 ¤;(#,##0.00 ¤)","fr-GA":"#,##0.00 ¤;(#,##0.00 ¤)","fr-GF":"#,##0.00 ¤;(#,##0.00 ¤)","fr-GN":"#,##0.00 ¤;(#,##0.00 ¤)","fr-GP":"#,##0.00 ¤;(#,##0.00 ¤)","fr-GQ":"#,##0.00 ¤;(#,##0.00 ¤)","fr-HT":"#,##0.00 ¤;(#,##0.00 ¤)","fr-KM":"#,##0.00 ¤;(#,##0.00 ¤)","fr-LU":"#,##0.00 ¤;(#,##0.00 ¤)","fr-MA":"#,##0.00 ¤;(#,##0.00 ¤)","fr-MC":"#,##0.00 ¤;(#,##0.00 ¤)","fr-MF":"#,##0.00 ¤;(#,##0.00 ¤)","fr-MG":"#,##0.00 ¤;(#,##0.00 ¤)","fr-ML":"#,##0.00 ¤;(#,##0.00 ¤)","fr-MQ":"#,##0.00 ¤;(#,##0.00 ¤)","fr-MR":"#,##0.00 ¤;(#,##0.00 ¤)","fr-MU":"#,##0.00 ¤;(#,##0.00 ¤)","fr-NC":"#,##0.00 ¤;(#,##0.00 ¤)","fr-NE":"#,##0.00 ¤;(#,##0.00 ¤)","fr-PF":"#,##0.00 ¤;(#,##0.00 ¤)","fr-PM":"#,##0.00 ¤;(#,##0.00 ¤)","fr-RE":"#,##0.00 ¤;(#,##0.00 ¤)","fr-RW":"#,##0.00 ¤;(#,##0.00 ¤)","fr-SC":"#,##0.00 ¤;(#,##0.00 ¤)","fr-SN":"#,##0.00 ¤;(#,##0.00 ¤)","fr-SY":"#,##0.00 ¤;(#,##0.00 ¤)","fr-TD":"#,##0.00 ¤;(#,##0.00 ¤)","fr-TG":"#,##0.00 ¤;(#,##0.00 ¤)","fr-TN":"#,##0.00 ¤;(#,##0.00 ¤)","fr-VU":"#,##0.00 ¤;(#,##0.00 ¤)","fr-WF":"#,##0.00 ¤;(#,##0.00 ¤)","fr-YT":"#,##0.00 ¤;(#,##0.00 ¤)",fur:"¤ #,##0.00",fy:"¤ #,##0.00;(¤ #,##0.00)",ga:"¤#,##0.00;(¤#,##0.00)","ga-GB":"¤#,##0.00;(¤#,##0.00)",gd:"¤#,##0.00;(¤#,##0.00)",gl:"#,##0.00 ¤",gsw:"#,##0.00 ¤","gsw-FR":"#,##0.00 ¤","gsw-LI":"#,##0.00 ¤",gu:"¤#,##,##0.00;(¤#,##,##0.00)",guz:"¤#,##0.00;(¤#,##0.00)",gv:"¤#,##0.00",ha:"¤ #,##0.00","ha-GH":"¤ #,##0.00","ha-NE":"¤ #,##0.00",haw:"¤#,##0.00;(¤#,##0.00)",he:"#,##0.00 ¤",hi:"¤#,##,##0.00","hi-Latn":"¤#,##,##0.00",hr:"#,##0.00 ¤","hr-BA":"#,##0.00 ¤",hsb:"#,##0.00 ¤",hu:"#,##0.00 ¤",hy:"#,##0.00 ¤",ia:"¤ #,##0.00;(¤ #,##0.00)",id:"¤#,##0.00",ig:"¤#,##0.00;(¤#,##0.00)",ii:"¤ #,##0.00",is:"#,##0.00 ¤",it:"#,##0.00 ¤","it-CH":"#,##0.00 ¤","it-SM":"#,##0.00 ¤","it-VA":"#,##0.00 ¤",ja:"¤#,##0.00;(¤#,##0.00)",jgo:"¤ #,##0.00",jmc:"¤#,##0.00",jv:"¤ #,##0.00",ka:"#,##0.00 ¤",kab:"#,##0.00¤",kam:"¤#,##0.00;(¤#,##0.00)",kde:"¤#,##0.00;(¤#,##0.00)",kea:"#,##0.00 ¤;(#,##0.00 ¤)",kgp:"¤ #,##0.00",khq:"#,##0.00¤",ki:"¤#,##0.00;(¤#,##0.00)",kk:"#,##0.00 ¤",kkj:"¤ #,##0.00",kl:"¤#,##0.00;¤-#,##0.00",kln:"¤#,##0.00;(¤#,##0.00)",km:"#,##0.00¤;(#,##0.00¤)",kn:"¤#,##0.00;(¤#,##0.00)",ko:"¤#,##0.00;(¤#,##0.00)","ko-KP":"¤#,##0.00;(¤#,##0.00)",kok:"¤#,##0.00;(¤#,##0.00)",ks:"¤#,##0.00","ks-Arab":"¤#,##0.00","ks-Deva":"¤ #,##0.00",ksb:"#,##0.00¤",ksf:"#,##0.00 ¤",ksh:"#,##0.00 ¤",ku:"#,##0.00 ¤;(#,##0.00 ¤)",kw:"¤#,##0.00",ky:"#,##0.00 ¤",lag:"¤ #,##0.00",lb:"#,##0.00 ¤",lg:"#,##0.00¤",lkt:"¤ #,##0.00",ln:"#,##0.00 ¤","ln-AO":"#,##0.00 ¤","ln-CF":"#,##0.00 ¤","ln-CG":"#,##0.00 ¤",lo:"¤#,##0.00;¤-#,##0.00",lrc:"¤ #,##0.00","lrc-IQ":"¤ #,##0.00",lt:"#,##0.00 ¤",lu:"#,##0.00¤",luo:"#,##0.00¤",luy:"¤#,##0.00;¤- #,##0.00",lv:"#,##0.00 ¤",mai:"¤ #,##0.00",mas:"¤#,##0.00;(¤#,##0.00)","mas-TZ":"¤#,##0.00;(¤#,##0.00)",mer:"¤#,##0.00;(¤#,##0.00)",mfe:"¤ #,##0.00",mg:"¤#,##0.00",mgh:"¤ #,##0.00",mgo:"¤ #,##0.00",mi:"¤ #,##0.00",mk:"#,##0.00 ¤",ml:"¤#,##0.00;(¤#,##0.00)",mn:"¤ #,##0.00",mni:"¤ #,##0.00","mni-Beng":"¤ #,##0.00",mr:"¤#,##0.00;(¤#,##0.00)",ms:"¤#,##0.00;(¤#,##0.00)","ms-BN":"¤#,##0.00;(¤#,##0.00)","ms-ID":"¤#,##0.00","ms-SG":"¤#,##0.00;(¤#,##0.00)",mt:"¤#,##0.00",mua:"¤#,##0.00;(¤#,##0.00)",my:"¤ #,##0.00",mzn:"¤ #,##0.00",naq:"¤#,##0.00",nb:"¤ #,##0.00;(¤ #,##0.00)","nb-SJ":"¤ #,##0.00;(¤ #,##0.00)",nd:"¤#,##0.00;(¤#,##0.00)",nds:"¤ #,##0.00","nds-NL":"¤ #,##0.00",ne:"¤ #,##,##0.00","ne-IN":"¤ #,##,##0.00",nl:"¤ #,##0.00;(¤ #,##0.00)","nl-AW":"¤ #,##0.00;(¤ #,##0.00)","nl-BE":"¤ #,##0.00;(¤ #,##0.00)","nl-BQ":"¤ #,##0.00;(¤ #,##0.00)","nl-CW":"¤ #,##0.00;(¤ #,##0.00)","nl-SR":"¤ #,##0.00;(¤ #,##0.00)","nl-SX":"¤ #,##0.00;(¤ #,##0.00)",nmg:"#,##0.00 ¤",nn:"#,##0.00 ¤",nnh:"¤ #,##0.00",no:"¤ #,##0.00;(¤ #,##0.00)",nus:"¤#,##0.00;(¤#,##0.00)",nyn:"¤#,##0.00",om:"¤#,##0.00","om-KE":"¤#,##0.00",or:"¤#,##0.00;(¤#,##0.00)",os:"¤ #,##0.00","os-RU":"¤ #,##0.00",pa:"¤ #,##0.00","pa-Arab":"¤ #,##0.00","pa-Guru":"¤ #,##0.00",pcm:"¤#,##0.00",pl:"#,##0.00 ¤;(#,##0.00 ¤)",ps:"¤#,##0.00;(¤#,##0.00)","ps-PK":"¤#,##0.00;(¤#,##0.00)",pt:"¤ #,##0.00","pt-AO":"#,##0.00 ¤;(#,##0.00 ¤)","pt-CH":"#,##0.00 ¤;(#,##0.00 ¤)","pt-CV":"#,##0.00 ¤;(#,##0.00 ¤)","pt-GQ":"#,##0.00 ¤;(#,##0.00 ¤)","pt-GW":"#,##0.00 ¤;(#,##0.00 ¤)","pt-LU":"#,##0.00 ¤;(#,##0.00 ¤)","pt-MO":"#,##0.00 ¤;(#,##0.00 ¤)","pt-MZ":"#,##0.00 ¤;(#,##0.00 ¤)","pt-PT":"#,##0.00 ¤;(#,##0.00 ¤)","pt-ST":"#,##0.00 ¤;(#,##0.00 ¤)","pt-TL":"#,##0.00 ¤;(#,##0.00 ¤)",qu:"¤ #,##0.00","qu-BO":"¤ #,##0.00","qu-EC":"¤ #,##0.00",rm:"#,##0.00 ¤",rn:"#,##0.00¤",ro:"#,##0.00 ¤;(#,##0.00 ¤)","ro-MD":"#,##0.00 ¤;(#,##0.00 ¤)",rof:"¤#,##0.00",ru:"#,##0.00 ¤","ru-BY":"#,##0.00 ¤","ru-KG":"#,##0.00 ¤","ru-KZ":"#,##0.00 ¤","ru-MD":"#,##0.00 ¤","ru-UA":"#,##0.00 ¤",rw:"¤ #,##0.00",rwk:"#,##0.00¤",sa:"¤ #,##0.00",sah:"#,##0.00 ¤",saq:"¤#,##0.00;(¤#,##0.00)",sat:"¤ #,##0.00","sat-Olck":"¤ #,##0.00",sbp:"#,##0.00¤",sc:"#,##0.00 ¤",sd:"¤ #,##0.00","sd-Arab":"¤ #,##0.00","sd-Deva":"¤ #,##0.00",se:"#,##0.00 ¤","se-FI":"#,##0.00 ¤","se-SE":"#,##0.00 ¤",seh:"#,##0.00¤",ses:"#,##0.00¤",sg:"¤#,##0.00;¤-#,##0.00",shi:"#,##0.00¤","shi-Latn":"#,##0.00¤","shi-Tfng":"#,##0.00¤",si:"¤#,##0.00;(¤#,##0.00)",sk:"#,##0.00 ¤;(#,##0.00 ¤)",sl:"#,##0.00 ¤;(#,##0.00 ¤)",smn:"#,##0.00 ¤",sn:"¤#,##0.00;(¤#,##0.00)",so:"¤#,##0.00;(¤#,##0.00)","so-DJ":"¤#,##0.00;(¤#,##0.00)","so-ET":"¤#,##0.00;(¤#,##0.00)","so-KE":"¤#,##0.00;(¤#,##0.00)",sq:"#,##0.00 ¤;(#,##0.00 ¤)","sq-MK":"#,##0.00 ¤;(#,##0.00 ¤)","sq-XK":"#,##0.00 ¤;(#,##0.00 ¤)",sr:"#,##0.00 ¤;(#,##0.00 ¤)","sr-Cyrl":"#,##0.00 ¤;(#,##0.00 ¤)","sr-Cyrl-BA":"#,##0.00 ¤;(#,##0.00 ¤)","sr-Cyrl-ME":"#,##0.00 ¤;(#,##0.00 ¤)","sr-Cyrl-XK":"#,##0.00 ¤;(#,##0.00 ¤)","sr-Latn":"#,##0.00 ¤;(#,##0.00 ¤)","sr-Latn-BA":"#,##0.00 ¤;(#,##0.00 ¤)","sr-Latn-ME":"#,##0.00 ¤;(#,##0.00 ¤)","sr-Latn-XK":"#,##0.00 ¤;(#,##0.00 ¤)",su:"¤#,##0.00","su-Latn":"¤#,##0.00",sv:"#,##0.00 ¤","sv-AX":"#,##0.00 ¤","sv-FI":"#,##0.00 ¤",sw:"¤ #,##0.00","sw-CD":"¤ #,##0.00","sw-KE":"¤ #,##0.00","sw-UG":"¤ #,##0.00",ta:"¤#,##0.00;(¤#,##0.00)","ta-LK":"¤#,##0.00;(¤#,##0.00)","ta-MY":"¤#,##0.00;(¤#,##0.00)","ta-SG":"¤#,##0.00;(¤#,##0.00)",te:"¤#,##0.00;(¤#,##0.00)",teo:"¤#,##0.00;(¤#,##0.00)","teo-KE":"¤#,##0.00;(¤#,##0.00)",tg:"#,##0.00 ¤",th:"¤#,##0.00;(¤#,##0.00)",ti:"¤#,##0.00","ti-ER":"¤#,##0.00",tk:"#,##0.00 ¤",to:"¤ #,##0.00",tr:"¤#,##0.00;(¤#,##0.00)","tr-CY":"¤#,##0.00;(¤#,##0.00)",tt:"#,##0.00 ¤",twq:"#,##0.00¤",tzm:"#,##0.00 ¤",ug:"¤#,##0.00;(¤#,##0.00)",uk:"#,##0.00 ¤",und:"¤ #,##0.00",ur:"¤#,##0.00;(¤#,##0.00)","ur-IN":"¤#,##0.00;(¤#,##0.00)",uz:"#,##0.00 ¤","uz-Arab":"¤ #,##0.00","uz-Cyrl":"#,##0.00 ¤","uz-Latn":"#,##0.00 ¤",vai:"¤#,##0.00;(¤#,##0.00)","vai-Latn":"¤#,##0.00;(¤#,##0.00)","vai-Vaii":"¤#,##0.00;(¤#,##0.00)",vi:"#,##0.00 ¤",vun:"¤#,##0.00",wae:"¤ #,##0.00",wo:"¤ #,##0.00",xh:"¤#,##0.00",xog:"#,##0.00 ¤",yav:"#,##0.00 ¤;(#,##0.00 ¤)",yi:"¤ #,##0.00",yo:"¤#,##0.00;(¤#,##0.00)","yo-BJ":"¤#,##0.00;(¤#,##0.00)",yrl:"¤ #,##0.00","yrl-CO":"¤ #,##0.00","yrl-VE":"¤ #,##0.00",yue:"¤#,##0.00;(¤#,##0.00)","yue-Hans":"¤#,##0.00;(¤#,##0.00)","yue-Hant":"¤#,##0.00;(¤#,##0.00)",zgh:"#,##0.00¤",zh:"¤#,##0.00;(¤#,##0.00)","zh-Hans":"¤#,##0.00;(¤#,##0.00)","zh-Hans-HK":"¤#,##0.00;(¤#,##0.00)","zh-Hans-MO":"¤#,##0.00;(¤#,##0.00)","zh-Hans-SG":"¤#,##0.00;(¤#,##0.00)","zh-Hant":"¤#,##0.00;(¤#,##0.00)","zh-Hant-HK":"¤#,##0.00;(¤#,##0.00)","zh-Hant-MO":"¤#,##0.00;(¤#,##0.00)",zu:"¤#,##0.00;(¤#,##0.00)"};var W=["standard","accounting"],$=/([^\s0]+)?(\s*)0*[.,]*0*(\s*)([^\s0]+)?/,K={},q=e=>{var t=z.locale()+"/"+JSON.stringify(e);return K[t]||(K[t]=new Intl.NumberFormat(z.locale(),e).format),K[t]};const Y={engine:function(){return"intl"},_formatNumberCore:function(e,t,n){return"exponential"===t?this.callBase.apply(this,arguments):q(this._normalizeFormatConfig(t,n,e))(e)},_normalizeFormatConfig:function(e,t,n){var i;if("decimal"===e){var r=String(n).split(".")[1];i={minimumIntegerDigits:t.precision||void 0,useGrouping:!1,maximumFractionDigits:r&&r.length,round:n<0?"ceil":"floor"}}else i=this._getPrecisionConfig(t.precision);if("percent"===e)i.style="percent";else if("currency"===e){var o,a=null!==(o=t.useCurrencyAccountingStyle)&&void 0!==o?o:(0,F.Z)().defaultUseCurrencyAccountingStyle;i.style="currency",i.currency=t.currency||(0,F.Z)().defaultCurrency,i.currencySign=W[+a]}return i},_getPrecisionConfig:function(e){return null===e?{minimumFractionDigits:0,maximumFractionDigits:20}:{minimumFractionDigits:e||0,maximumFractionDigits:e||0}},format:function(e,t){return"number"!=typeof e?e:("default"===(t=this._normalizeFormat(t)).currency&&(t.currency=(0,F.Z)().defaultCurrency),t&&("function"==typeof t||t.type||t.formatter)?this.callBase.apply(this,arguments):q(t)(e))},_getCurrencySymbolInfo:function(e){var t=(e=>new Intl.NumberFormat(z.locale(),{style:"currency",currency:e}))(e);return this._extractCurrencySymbolInfo(t.format(0))},_extractCurrencySymbolInfo:function(e){var t=$.exec(e)||[];return{position:t[1]?"before":"after",symbol:t[1]||t[4]||"",delimiter:t[2]||t[3]||""}},getCurrencySymbol:function(e){return e||(e=(0,F.Z)().defaultCurrency),{symbol:this._getCurrencySymbolInfo(e).symbol}},getOpenXmlCurrencyFormat:function(e){var t=e||(0,F.Z)().defaultCurrency;return((e,t)=>{if(t){var n=e;if("string"==typeof e){n="";for(var i=0;i<e.length;i++)"$"!==e[i]&&(n+="\\"),n+=e[i]}for(var r={".00":"{0}","'":"\\'","\\(":"\\(","\\)":"\\)"," ":"\\ ",'"':"&quot;","\\¤":n},o=t.split(";"),a=0;a<o.length;a++)for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(o[a]=o[a].replace(new RegExp(s,"g"),r[s]));return 2===o.length?o[0]+"_);"+o[1]:o[0]}})(this._getCurrencySymbolInfo(t).symbol,z.getValueByClosestLocale((e=>V[e])))}};var X="undefined"!=typeof Intl,J=["currency","fixedpoint","exponential","percent","decimal"],Q={1:"K",2:"M",3:"B",4:"T"},ee={largenumber:"auto",thousands:1,millions:2,billions:3,trillions:4},te=(0,T.Z)({engine:function(){return"base"},numericFormats:J,defaultLargeNumberFormatPostfixes:Q,_parseNumberFormatString:function(e){var t={};if(e&&"string"==typeof e){var n=e.toLowerCase().split(" ");return(0,b.S6)(n,((e,n)=>{J.includes(n)?t.formatType=n:n in ee&&(t.power=ee[n])})),t.power&&!t.formatType&&(t.formatType="fixedpoint"),t.formatType?t:void 0}},_calculateNumberPower:function(e,t,n,i){var r=Math.abs(e),o=0;if(r>1)for(;r&&r>=t&&(void 0===i||o<i);)o++,r/=t;else if(r>0&&r<1)for(;r<1&&(void 0===n||o>n);)o--,r*=t;return o},_getNumberByPower:function(e,t,n){for(var i=e;t>0;)i/=n,t--;for(;t<0;)i*=n,t++;return i},_formatNumber:function(e,t,n){"auto"===t.power&&(t.power=this._calculateNumberPower(e,1e3,0,4)),t.power&&(e=this._getNumberByPower(e,t.power,1e3));var i=this.defaultLargeNumberFormatPostfixes[t.power]||"",r=this._formatNumberCore(e,t.formatType,n);return r.replace(/(\d|.$)(\D*)$/,"$1"+i+"$2")},_formatNumberExponential:function(e,t){var n=this._calculateNumberPower(e,10),i=this._getNumberByPower(e,n,10);void 0===t.precision&&(t.precision=1),i.toFixed(t.precision||0)>=10&&(n++,i/=10);var r=(n>=0?"+":"")+n.toString();return this._formatNumberCore(i,"fixedpoint",t)+"E"+r},_addZeroes:function(e,t){for(var n=Math.pow(10,t),i=e<0?"-":"",r=(e=(Math.abs(e)*n>>>0)/n).toString();r.length<t;)r="0"+r;return i+r},_addGroupSeparators:function(e){var t=e.toString().split(".");return t[0].replace(/\B(?=(\d{3})+(?!\d))/g,(0,F.Z)().thousandsSeparator)+(t[1]?(0,F.Z)().decimalSeparator+t[1]:"")},_formatNumberCore:function(e,t,n){return"exponential"===t?this._formatNumberExponential(e,n):("decimal"!==t&&null!==n.precision&&(n.precision=n.precision||0),"percent"===t&&(e*=100),void 0!==n.precision&&(e="decimal"===t?this._addZeroes(e,n.precision):null===n.precision?e.toPrecision():R(e,n.precision)),e="decimal"!==t?this._addGroupSeparators(e):e.toString().replace(".",(0,F.Z)().decimalSeparator),"percent"===t&&(e+="%"),e)},_normalizeFormat:function(e){return e?("function"==typeof e||(0,d.PO)(e)||(e={type:e}),e):{}},_getSeparators:function(){return{decimalSeparator:this.getDecimalSeparator(),thousandsSeparator:this.getThousandsSeparator()}},getThousandsSeparator:function(){return this.format(1e4,"fixedPoint")[2]},getDecimalSeparator:function(){return this.format(1.2,{type:"fixedPoint",precision:1})[1]},convertDigits:function(e,t){var n=this.format(90,"decimal");if("string"!=typeof e||"0"===n[1])return e;var i=t?n[1]:"0",r=t?"0":n[1],o=t?n[0]:"9",a=new RegExp("["+i+"-"+o+"]","g");return e.replace(a,(e=>String.fromCharCode(e.charCodeAt(0)+(r.charCodeAt(0)-i.charCodeAt(0)))))},getNegativeEtalonRegExp:function(e){var t=this._getSeparators(),n=new RegExp("[0-9"+(0,C.hr)(t.decimalSeparator+t.thousandsSeparator)+"]+","g"),i=this.format(-1,e).replace(n,"1");return["\\","(",")","[","]","*","+","$","^","?","|","{","}"].forEach((e=>{i=i.replace(new RegExp("\\".concat(e),"g"),"\\".concat(e))})),i=(i=i.replace(/ /g,"\\s")).replace(/1/g,".*"),new RegExp(i,"g")},getSign:function(e,t){if(!t)return"-"===e.replace(/[^0-9-]/g,"").charAt(0)?-1:1;var n=this.getNegativeEtalonRegExp(t);return e.match(n)?-1:1},format:function(e,t){if("number"!=typeof e)return e;if("number"==typeof t)return e;if("function"==typeof(t=t&&t.formatter||t))return t(e);(t=this._normalizeFormat(t)).type||(t.type="decimal");var n,i,r=this._parseNumberFormatString(t.type);if(!r){var o=this._getSeparators();return o.unlimitedIntegerDigits=t.unlimitedIntegerDigits,this.convertDigits((n=t.type,i=(i=o)||A,function(e){if("number"!=typeof e||isNaN(e))return"";var t=function(e){var t=e.split(";");return 1===t.length&&t.push("-"+t[0]),t}(n),r=e>0||1/e==1/0,o=t[r?0:1],a=function(e){for(var t=!1,n=0;n<e.length;n++)if("'"===e[n]&&(t=!t),"."===e[n]&&!t)return n;return e.length}(o),s=[o.substr(0,a),o.substr(a+1)],l=I(s[1]),d=l+U(s[1]);(function(e){return-1!==e.indexOf("%")&&!e.match(/'[^']*%[^']*'/g)})(o)&&(e=S(e,2)),r||(e=-e);var c,u=I(s[0]),p=U(s[0])||i.unlimitedIntegerDigits?void 0:u,h=function(e,t,n){var i=!t&&0!==t,r=!n&&0!==n;return i&&(t=r?e:Math.min(e,n)),r&&(n=i?e:Math.max(e,t)),Math.min(Math.max(e,t),n)}(d,0,15-Math.floor(e).toString().length),f=(c=s[0],c.split(",").slice(1).map((function(e){var t=0;return e.split("").filter((function(e,n){return t+="'"===e,!("#"!==e&&"0"!==e||t%2)})).length}))).reverse(),m=R(e,h<0?0:h).split("."),g=P(M(m[0]),u,p),v=P(m[1],l,d);g=function(e,t,n){if(!t.length)return e;for(var i=[],r=0;e;){var o=t[r];if(!o)break;i.push(e.slice(0,o)),e=e.slice(o),r<t.length-1&&r++}return i.join(n)}(g,f,i.thousandsSeparator);var y=M(L(M(s[0]),g)),x=d?L(s[1],v):"";return y+(x.match(/\d/)?i.decimalSeparator:"")+x})(e))}return this._formatNumber(e,r,t)},parse:function(e,t){if(e){if(t&&t.parser)return t.parser(e);e=this.convertDigits(e,!0),t&&"string"!=typeof t&&a.Z.log("W0011");var n=this.getDecimalSeparator(),i=new RegExp("[^0-9"+(0,C.hr)(n)+"]","g"),r=e.replace(i,"").replace(n,".").replace(/\.$/g,"");if("."===r||""===r)return null;if(this._calcSignificantDigits(r)>15)return NaN;var o=+r*this.getSign(e,t);t=this._normalizeFormat(t);var s=this._parseNumberFormatString(t.type),l=null==s?void 0:s.power;if(l){if("auto"===l){var d=e.match(/\d(K|M|B|T)/);d&&(l=Object.keys(Q).find((e=>Q[e]===d[1])))}o*=Math.pow(10,3*l)}return"percent"===(null==s?void 0:s.formatType)&&(o/=100),o}},_calcSignificantDigits:function(e){var[t,n]=e.split("."),i=e=>{for(var t=-1,n=0;n<e.length;n++)if("0"!==e[n]){t=n;break}return t>-1?e.length-t:0},r=0;return t&&(r+=i(t.split(""))),n&&(r+=i(n.split("").reverse())),r}});te.inject(Z),X&&te.inject(Y);const ne=te;var ie=n(3386),re=n(8192),oe=(0,x.l)(!0,{},{en:{Yes:"Yes",No:"No",Cancel:"Cancel",Close:"Close",Clear:"Clear",Done:"Done",Loading:"Loading...",Select:"Select...",Search:"Search",Back:"Back",OK:"OK","dxCollectionWidget-noDataText":"No data to display","dxDropDownEditor-selectLabel":"Select","validation-required":"Required","validation-required-formatted":"{0} is required","validation-numeric":"Value must be a number","validation-numeric-formatted":"{0} must be a number","validation-range":"Value is out of range","validation-range-formatted":"{0} is out of range","validation-stringLength":"The length of the value is not correct","validation-stringLength-formatted":"The length of {0} is not correct","validation-custom":"Value is invalid","validation-custom-formatted":"{0} is invalid","validation-async":"Value is invalid","validation-async-formatted":"{0} is invalid","validation-compare":"Values do not match","validation-compare-formatted":"{0} does not match","validation-pattern":"Value does not match pattern","validation-pattern-formatted":"{0} does not match pattern","validation-email":"Email is invalid","validation-email-formatted":"{0} is invalid","validation-mask":"Value is invalid","dxLookup-searchPlaceholder":"Minimum character number: {0}","dxList-pullingDownText":"Pull down to refresh...","dxList-pulledDownText":"Release to refresh...","dxList-refreshingText":"Refreshing...","dxList-pageLoadingText":"Loading...","dxList-nextButtonText":"More","dxList-selectAll":"Select All","dxListEditDecorator-delete":"Delete","dxListEditDecorator-more":"More","dxScrollView-pullingDownText":"Pull down to refresh...","dxScrollView-pulledDownText":"Release to refresh...","dxScrollView-refreshingText":"Refreshing...","dxScrollView-reachBottomText":"Loading...","dxDateBox-simulatedDataPickerTitleTime":"Select time","dxDateBox-simulatedDataPickerTitleDate":"Select date","dxDateBox-simulatedDataPickerTitleDateTime":"Select date and time","dxDateBox-validation-datetime":"Value must be a date or time","dxFileUploader-selectFile":"Select a file","dxFileUploader-dropFile":"or Drop a file here","dxFileUploader-bytes":"bytes","dxFileUploader-kb":"kb","dxFileUploader-Mb":"Mb","dxFileUploader-Gb":"Gb","dxFileUploader-upload":"Upload","dxFileUploader-uploaded":"Uploaded","dxFileUploader-readyToUpload":"Ready to upload","dxFileUploader-uploadAbortedMessage":"Upload cancelled","dxFileUploader-uploadFailedMessage":"Upload failed","dxFileUploader-invalidFileExtension":"File type is not allowed","dxFileUploader-invalidMaxFileSize":"File is too large","dxFileUploader-invalidMinFileSize":"File is too small","dxRangeSlider-ariaFrom":"From","dxRangeSlider-ariaTill":"Till","dxSwitch-switchedOnText":"ON","dxSwitch-switchedOffText":"OFF","dxForm-optionalMark":"optional","dxForm-requiredMessage":"{0} is required","dxNumberBox-invalidValueMessage":"Value must be a number","dxNumberBox-noDataText":"No data","dxDataGrid-columnChooserTitle":"Column Chooser","dxDataGrid-columnChooserEmptyText":"Drag a column here to hide it","dxDataGrid-groupContinuesMessage":"Continues on the next page","dxDataGrid-groupContinuedMessage":"Continued from the previous page","dxDataGrid-groupHeaderText":"Group by This Column","dxDataGrid-ungroupHeaderText":"Ungroup","dxDataGrid-ungroupAllText":"Ungroup All","dxDataGrid-editingEditRow":"Edit","dxDataGrid-editingSaveRowChanges":"Save","dxDataGrid-editingCancelRowChanges":"Cancel","dxDataGrid-editingDeleteRow":"Delete","dxDataGrid-editingUndeleteRow":"Undelete","dxDataGrid-editingConfirmDeleteMessage":"Are you sure you want to delete this record?","dxDataGrid-validationCancelChanges":"Cancel changes","dxDataGrid-groupPanelEmptyText":"Drag a column header here to group by that column","dxDataGrid-noDataText":"No data","dxDataGrid-searchPanelPlaceholder":"Search...","dxDataGrid-filterRowShowAllText":"(All)","dxDataGrid-filterRowResetOperationText":"Reset","dxDataGrid-filterRowOperationEquals":"Equals","dxDataGrid-filterRowOperationNotEquals":"Does not equal","dxDataGrid-filterRowOperationLess":"Less than","dxDataGrid-filterRowOperationLessOrEquals":"Less than or equal to","dxDataGrid-filterRowOperationGreater":"Greater than","dxDataGrid-filterRowOperationGreaterOrEquals":"Greater than or equal to","dxDataGrid-filterRowOperationStartsWith":"Starts with","dxDataGrid-filterRowOperationContains":"Contains","dxDataGrid-filterRowOperationNotContains":"Does not contain","dxDataGrid-filterRowOperationEndsWith":"Ends with","dxDataGrid-filterRowOperationBetween":"Between","dxDataGrid-filterRowOperationBetweenStartText":"Start","dxDataGrid-filterRowOperationBetweenEndText":"End","dxDataGrid-applyFilterText":"Apply filter","dxDataGrid-trueText":"true","dxDataGrid-falseText":"false","dxDataGrid-sortingAscendingText":"Sort Ascending","dxDataGrid-sortingDescendingText":"Sort Descending","dxDataGrid-sortingClearText":"Clear Sorting","dxDataGrid-editingSaveAllChanges":"Save changes","dxDataGrid-editingCancelAllChanges":"Discard changes","dxDataGrid-editingAddRow":"Add a row","dxDataGrid-summaryMin":"Min: {0}","dxDataGrid-summaryMinOtherColumn":"Min of {1} is {0}","dxDataGrid-summaryMax":"Max: {0}","dxDataGrid-summaryMaxOtherColumn":"Max of {1} is {0}","dxDataGrid-summaryAvg":"Avg: {0}","dxDataGrid-summaryAvgOtherColumn":"Avg of {1} is {0}","dxDataGrid-summarySum":"Sum: {0}","dxDataGrid-summarySumOtherColumn":"Sum of {1} is {0}","dxDataGrid-summaryCount":"Count: {0}","dxDataGrid-columnFixingFix":"Fix","dxDataGrid-columnFixingUnfix":"Unfix","dxDataGrid-columnFixingLeftPosition":"To the left","dxDataGrid-columnFixingRightPosition":"To the right","dxDataGrid-exportTo":"Export","dxDataGrid-exportToExcel":"Export to Excel file","dxDataGrid-exporting":"Exporting...","dxDataGrid-excelFormat":"Excel file","dxDataGrid-selectedRows":"Selected rows","dxDataGrid-exportSelectedRows":"Export selected rows to {0}","dxDataGrid-exportAll":"Export all data to {0}","dxDataGrid-headerFilterLabel":"Filter options","dxDataGrid-headerFilterIndicatorLabel":"Show filter options for column '{0}'","dxDataGrid-headerFilterEmptyValue":"(Blanks)","dxDataGrid-headerFilterOK":"OK","dxDataGrid-headerFilterCancel":"Cancel","dxDataGrid-ariaAdaptiveCollapse":"Hide additional data","dxDataGrid-ariaAdaptiveExpand":"Display additional data","dxDataGrid-ariaColumn":"Column","dxDataGrid-ariaValue":"Value","dxDataGrid-ariaFilterCell":"Filter cell","dxDataGrid-ariaCollapse":"Collapse","dxDataGrid-ariaExpand":"Expand","dxDataGrid-ariaDataGrid":"Data grid","dxDataGrid-ariaSearchInGrid":"Search in the data grid","dxDataGrid-ariaSelectAll":"Select all","dxDataGrid-ariaSelectRow":"Select row","dxDataGrid-ariaToolbar":"Data grid toolbar","dxDataGrid-filterBuilderPopupTitle":"Filter Builder","dxDataGrid-filterPanelCreateFilter":"Create Filter","dxDataGrid-filterPanelClearFilter":"Clear","dxDataGrid-filterPanelFilterEnabledHint":"Enable the filter","dxTreeList-ariaTreeList":"Tree list","dxTreeList-ariaSearchInGrid":"Search in the tree list","dxTreeList-ariaToolbar":"Tree list toolbar","dxTreeList-editingAddRowToNode":"Add","dxPager-infoText":"Page {0} of {1} ({2} items)","dxPager-pagesCountText":"of","dxPager-pageSize":"Items per page: {0}","dxPager-pageSizesAllText":"All","dxPager-page":"Page {0}","dxPager-prevPage":"Previous Page","dxPager-nextPage":"Next Page","dxPager-ariaLabel":"Page Navigation","dxPivotGrid-grandTotal":"Grand Total","dxPivotGrid-total":"{0} Total","dxPivotGrid-fieldChooserTitle":"Field Chooser","dxPivotGrid-showFieldChooser":"Show Field Chooser","dxPivotGrid-expandAll":"Expand All","dxPivotGrid-collapseAll":"Collapse All","dxPivotGrid-sortColumnBySummary":'Sort "{0}" by This Column',"dxPivotGrid-sortRowBySummary":'Sort "{0}" by This Row',"dxPivotGrid-removeAllSorting":"Remove All Sorting","dxPivotGrid-dataNotAvailable":"N/A","dxPivotGrid-rowFields":"Row Fields","dxPivotGrid-columnFields":"Column Fields","dxPivotGrid-dataFields":"Data Fields","dxPivotGrid-filterFields":"Filter Fields","dxPivotGrid-allFields":"All Fields","dxPivotGrid-columnFieldArea":"Drop Column Fields Here","dxPivotGrid-dataFieldArea":"Drop Data Fields Here","dxPivotGrid-rowFieldArea":"Drop Row Fields Here","dxPivotGrid-filterFieldArea":"Drop Filter Fields Here","dxScheduler-editorLabelTitle":"Subject","dxScheduler-editorLabelStartDate":"Start Date","dxScheduler-editorLabelEndDate":"End Date","dxScheduler-editorLabelDescription":"Description","dxScheduler-editorLabelRecurrence":"Repeat","dxScheduler-openAppointment":"Open appointment","dxScheduler-recurrenceNever":"Never","dxScheduler-recurrenceMinutely":"Every minute","dxScheduler-recurrenceHourly":"Hourly","dxScheduler-recurrenceDaily":"Daily","dxScheduler-recurrenceWeekly":"Weekly","dxScheduler-recurrenceMonthly":"Monthly","dxScheduler-recurrenceYearly":"Yearly","dxScheduler-recurrenceRepeatEvery":"Repeat Every","dxScheduler-recurrenceRepeatOn":"Repeat On","dxScheduler-recurrenceEnd":"End repeat","dxScheduler-recurrenceAfter":"After","dxScheduler-recurrenceOn":"On","dxScheduler-recurrenceRepeatMinutely":"minute(s)","dxScheduler-recurrenceRepeatHourly":"hour(s)","dxScheduler-recurrenceRepeatDaily":"day(s)","dxScheduler-recurrenceRepeatWeekly":"week(s)","dxScheduler-recurrenceRepeatMonthly":"month(s)","dxScheduler-recurrenceRepeatYearly":"year(s)","dxScheduler-switcherDay":"Day","dxScheduler-switcherWeek":"Week","dxScheduler-switcherWorkWeek":"Work Week","dxScheduler-switcherMonth":"Month","dxScheduler-switcherAgenda":"Agenda","dxScheduler-switcherTimelineDay":"Timeline Day","dxScheduler-switcherTimelineWeek":"Timeline Week","dxScheduler-switcherTimelineWorkWeek":"Timeline Work Week","dxScheduler-switcherTimelineMonth":"Timeline Month","dxScheduler-recurrenceRepeatOnDate":"on date","dxScheduler-recurrenceRepeatCount":"occurrence(s)","dxScheduler-allDay":"All day","dxScheduler-confirmRecurrenceEditMessage":"Do you want to edit only this appointment or the whole series?","dxScheduler-confirmRecurrenceDeleteMessage":"Do you want to delete only this appointment or the whole series?","dxScheduler-confirmRecurrenceEditSeries":"Edit series","dxScheduler-confirmRecurrenceDeleteSeries":"Delete series","dxScheduler-confirmRecurrenceEditOccurrence":"Edit appointment","dxScheduler-confirmRecurrenceDeleteOccurrence":"Delete appointment","dxScheduler-noTimezoneTitle":"No timezone","dxScheduler-moreAppointments":"{0} more","dxCalendar-todayButtonText":"Today","dxCalendar-ariaWidgetName":"Calendar","dxColorView-ariaRed":"Red","dxColorView-ariaGreen":"Green","dxColorView-ariaBlue":"Blue","dxColorView-ariaAlpha":"Transparency","dxColorView-ariaHex":"Color code","dxTagBox-selected":"{0} selected","dxTagBox-allSelected":"All selected ({0})","dxTagBox-moreSelected":"{0} more","vizExport-printingButtonText":"Print","vizExport-titleMenuText":"Exporting/Printing","vizExport-exportButtonText":"{0} file","dxFilterBuilder-and":"And","dxFilterBuilder-or":"Or","dxFilterBuilder-notAnd":"Not And","dxFilterBuilder-notOr":"Not Or","dxFilterBuilder-addCondition":"Add Condition","dxFilterBuilder-addGroup":"Add Group","dxFilterBuilder-enterValueText":"<enter a value>","dxFilterBuilder-filterOperationEquals":"Equals","dxFilterBuilder-filterOperationNotEquals":"Does not equal","dxFilterBuilder-filterOperationLess":"Is less than","dxFilterBuilder-filterOperationLessOrEquals":"Is less than or equal to","dxFilterBuilder-filterOperationGreater":"Is greater than","dxFilterBuilder-filterOperationGreaterOrEquals":"Is greater than or equal to","dxFilterBuilder-filterOperationStartsWith":"Starts with","dxFilterBuilder-filterOperationContains":"Contains","dxFilterBuilder-filterOperationNotContains":"Does not contain","dxFilterBuilder-filterOperationEndsWith":"Ends with","dxFilterBuilder-filterOperationIsBlank":"Is blank","dxFilterBuilder-filterOperationIsNotBlank":"Is not blank","dxFilterBuilder-filterOperationBetween":"Is between","dxFilterBuilder-filterOperationAnyOf":"Is any of","dxFilterBuilder-filterOperationNoneOf":"Is none of","dxHtmlEditor-dialogColorCaption":"Change Font Color","dxHtmlEditor-dialogBackgroundCaption":"Change Background Color","dxHtmlEditor-dialogLinkCaption":"Add Link","dxHtmlEditor-dialogLinkUrlField":"URL","dxHtmlEditor-dialogLinkTextField":"Text","dxHtmlEditor-dialogLinkTargetField":"Open link in new window","dxHtmlEditor-dialogImageCaption":"Add Image","dxHtmlEditor-dialogImageUrlField":"URL","dxHtmlEditor-dialogImageAltField":"Alternate text","dxHtmlEditor-dialogImageWidthField":"Width (px)","dxHtmlEditor-dialogImageHeightField":"Height (px)","dxHtmlEditor-dialogInsertTableRowsField":"Rows","dxHtmlEditor-dialogInsertTableColumnsField":"Columns","dxHtmlEditor-dialogInsertTableCaption":"Insert Table","dxHtmlEditor-dialogUpdateImageCaption":"Update Image","dxHtmlEditor-dialogImageUpdateButton":"Update","dxHtmlEditor-dialogImageAddButton":"Add","dxHtmlEditor-dialogImageSpecifyUrl":"From the Web","dxHtmlEditor-dialogImageSelectFile":"From This Device","dxHtmlEditor-dialogImageKeepAspectRatio":"Keep Aspect Ratio","dxHtmlEditor-dialogImageEncodeToBase64":"Encode to Base64","dxHtmlEditor-heading":"Heading","dxHtmlEditor-normalText":"Normal text","dxHtmlEditor-background":"Background Color","dxHtmlEditor-bold":"Bold","dxHtmlEditor-color":"Font Color","dxHtmlEditor-font":"Font","dxHtmlEditor-italic":"Italic","dxHtmlEditor-link":"Add Link","dxHtmlEditor-image":"Add Image","dxHtmlEditor-size":"Size","dxHtmlEditor-strike":"Strikethrough","dxHtmlEditor-subscript":"Subscript","dxHtmlEditor-superscript":"Superscript","dxHtmlEditor-underline":"Underline","dxHtmlEditor-blockquote":"Blockquote","dxHtmlEditor-header":"Header","dxHtmlEditor-increaseIndent":"Increase Indent","dxHtmlEditor-decreaseIndent":"Decrease Indent","dxHtmlEditor-orderedList":"Ordered List","dxHtmlEditor-bulletList":"Bullet List","dxHtmlEditor-alignLeft":"Align Left","dxHtmlEditor-alignCenter":"Align Center","dxHtmlEditor-alignRight":"Align Right","dxHtmlEditor-alignJustify":"Align Justify","dxHtmlEditor-codeBlock":"Code Block","dxHtmlEditor-variable":"Add Variable","dxHtmlEditor-undo":"Undo","dxHtmlEditor-redo":"Redo","dxHtmlEditor-clear":"Clear Formatting","dxHtmlEditor-insertTable":"Insert Table","dxHtmlEditor-insertHeaderRow":"Insert Header Row","dxHtmlEditor-insertRowAbove":"Insert Row Above","dxHtmlEditor-insertRowBelow":"Insert Row Below","dxHtmlEditor-insertColumnLeft":"Insert Column Left","dxHtmlEditor-insertColumnRight":"Insert Column Right","dxHtmlEditor-deleteColumn":"Delete Column","dxHtmlEditor-deleteRow":"Delete Row","dxHtmlEditor-deleteTable":"Delete Table","dxHtmlEditor-cellProperties":"Cell Properties","dxHtmlEditor-tableProperties":"Table Properties","dxHtmlEditor-insert":"Insert","dxHtmlEditor-delete":"Delete","dxHtmlEditor-border":"Border","dxHtmlEditor-style":"Style","dxHtmlEditor-width":"Width","dxHtmlEditor-height":"Height","dxHtmlEditor-borderColor":"Color","dxHtmlEditor-tableBackground":"Background","dxHtmlEditor-dimensions":"Dimensions","dxHtmlEditor-alignment":"Alignment","dxHtmlEditor-horizontal":"Horizontal","dxHtmlEditor-vertical":"Vertical","dxHtmlEditor-paddingVertical":"Vertical Padding","dxHtmlEditor-paddingHorizontal":"Horizontal Padding","dxHtmlEditor-pixels":"Pixels","dxHtmlEditor-list":"List","dxHtmlEditor-ordered":"Ordered","dxHtmlEditor-bullet":"Bullet","dxHtmlEditor-align":"Align","dxHtmlEditor-center":"Center","dxHtmlEditor-left":"Left","dxHtmlEditor-right":"Right","dxHtmlEditor-indent":"Indent","dxHtmlEditor-justify":"Justify","dxFileManager-newDirectoryName":"Untitled directory","dxFileManager-rootDirectoryName":"Files","dxFileManager-errorNoAccess":"Access Denied. Operation could not be completed.","dxFileManager-errorDirectoryExistsFormat":"Directory '{0}' already exists.","dxFileManager-errorFileExistsFormat":"File '{0}' already exists.","dxFileManager-errorFileNotFoundFormat":"File '{0}' not found.","dxFileManager-errorDirectoryNotFoundFormat":"Directory '{0}' not found.","dxFileManager-errorWrongFileExtension":"File extension is not allowed.","dxFileManager-errorMaxFileSizeExceeded":"File size exceeds the maximum allowed size.","dxFileManager-errorInvalidSymbols":"This name contains invalid characters.","dxFileManager-errorDefault":"Unspecified error.","dxFileManager-errorDirectoryOpenFailed":"The directory cannot be opened","dxFileManager-commandCreate":"New directory","dxFileManager-commandRename":"Rename","dxFileManager-commandMove":"Move to","dxFileManager-commandCopy":"Copy to","dxFileManager-commandDelete":"Delete","dxFileManager-commandDownload":"Download","dxFileManager-commandUpload":"Upload files","dxFileManager-commandRefresh":"Refresh","dxFileManager-commandThumbnails":"Thumbnails View","dxFileManager-commandDetails":"Details View","dxFileManager-commandClearSelection":"Clear selection","dxFileManager-commandShowNavPane":"Toggle navigation pane","dxFileManager-dialogDirectoryChooserMoveTitle":"Move to","dxFileManager-dialogDirectoryChooserMoveButtonText":"Move","dxFileManager-dialogDirectoryChooserCopyTitle":"Copy to","dxFileManager-dialogDirectoryChooserCopyButtonText":"Copy","dxFileManager-dialogRenameItemTitle":"Rename","dxFileManager-dialogRenameItemButtonText":"Save","dxFileManager-dialogCreateDirectoryTitle":"New directory","dxFileManager-dialogCreateDirectoryButtonText":"Create","dxFileManager-dialogDeleteItemTitle":"Delete","dxFileManager-dialogDeleteItemButtonText":"Delete","dxFileManager-dialogDeleteItemSingleItemConfirmation":"Are you sure you want to delete {0}?","dxFileManager-dialogDeleteItemMultipleItemsConfirmation":"Are you sure you want to delete {0} items?","dxFileManager-dialogButtonCancel":"Cancel","dxFileManager-editingCreateSingleItemProcessingMessage":"Creating a directory inside {0}","dxFileManager-editingCreateSingleItemSuccessMessage":"Created a directory inside {0}","dxFileManager-editingCreateSingleItemErrorMessage":"Directory was not created","dxFileManager-editingCreateCommonErrorMessage":"Directory was not created","dxFileManager-editingRenameSingleItemProcessingMessage":"Renaming an item inside {0}","dxFileManager-editingRenameSingleItemSuccessMessage":"Renamed an item inside {0}","dxFileManager-editingRenameSingleItemErrorMessage":"Item was not renamed","dxFileManager-editingRenameCommonErrorMessage":"Item was not renamed","dxFileManager-editingDeleteSingleItemProcessingMessage":"Deleting an item from {0}","dxFileManager-editingDeleteMultipleItemsProcessingMessage":"Deleting {0} items from {1}","dxFileManager-editingDeleteSingleItemSuccessMessage":"Deleted an item from {0}","dxFileManager-editingDeleteMultipleItemsSuccessMessage":"Deleted {0} items from {1}","dxFileManager-editingDeleteSingleItemErrorMessage":"Item was not deleted","dxFileManager-editingDeleteMultipleItemsErrorMessage":"{0} items were not deleted","dxFileManager-editingDeleteCommonErrorMessage":"Some items were not deleted","dxFileManager-editingMoveSingleItemProcessingMessage":"Moving an item to {0}","dxFileManager-editingMoveMultipleItemsProcessingMessage":"Moving {0} items to {1}","dxFileManager-editingMoveSingleItemSuccessMessage":"Moved an item to {0}","dxFileManager-editingMoveMultipleItemsSuccessMessage":"Moved {0} items to {1}","dxFileManager-editingMoveSingleItemErrorMessage":"Item was not moved","dxFileManager-editingMoveMultipleItemsErrorMessage":"{0} items were not moved","dxFileManager-editingMoveCommonErrorMessage":"Some items were not moved","dxFileManager-editingCopySingleItemProcessingMessage":"Copying an item to {0}","dxFileManager-editingCopyMultipleItemsProcessingMessage":"Copying {0} items to {1}","dxFileManager-editingCopySingleItemSuccessMessage":"Copied an item to {0}","dxFileManager-editingCopyMultipleItemsSuccessMessage":"Copied {0} items to {1}","dxFileManager-editingCopySingleItemErrorMessage":"Item was not copied","dxFileManager-editingCopyMultipleItemsErrorMessage":"{0} items were not copied","dxFileManager-editingCopyCommonErrorMessage":"Some items were not copied","dxFileManager-editingUploadSingleItemProcessingMessage":"Uploading an item to {0}","dxFileManager-editingUploadMultipleItemsProcessingMessage":"Uploading {0} items to {1}","dxFileManager-editingUploadSingleItemSuccessMessage":"Uploaded an item to {0}","dxFileManager-editingUploadMultipleItemsSuccessMessage":"Uploaded {0} items to {1}","dxFileManager-editingUploadSingleItemErrorMessage":"Item was not uploaded","dxFileManager-editingUploadMultipleItemsErrorMessage":"{0} items were not uploaded","dxFileManager-editingUploadCanceledMessage":"Canceled","dxFileManager-editingDownloadSingleItemErrorMessage":"Item was not downloaded","dxFileManager-editingDownloadMultipleItemsErrorMessage":"{0} items were not downloaded","dxFileManager-listDetailsColumnCaptionName":"Name","dxFileManager-listDetailsColumnCaptionDateModified":"Date Modified","dxFileManager-listDetailsColumnCaptionFileSize":"File Size","dxFileManager-listThumbnailsTooltipTextSize":"Size","dxFileManager-listThumbnailsTooltipTextDateModified":"Date Modified","dxFileManager-notificationProgressPanelTitle":"Progress","dxFileManager-notificationProgressPanelEmptyListText":"No operations","dxFileManager-notificationProgressPanelOperationCanceled":"Canceled","dxDiagram-categoryGeneral":"General","dxDiagram-categoryFlowchart":"Flowchart","dxDiagram-categoryOrgChart":"Org Chart","dxDiagram-categoryContainers":"Containers","dxDiagram-categoryCustom":"Custom","dxDiagram-commandExportToSvg":"Export to SVG","dxDiagram-commandExportToPng":"Export to PNG","dxDiagram-commandExportToJpg":"Export to JPEG","dxDiagram-commandUndo":"Undo","dxDiagram-commandRedo":"Redo","dxDiagram-commandFontName":"Font Name","dxDiagram-commandFontSize":"Font Size","dxDiagram-commandBold":"Bold","dxDiagram-commandItalic":"Italic","dxDiagram-commandUnderline":"Underline","dxDiagram-commandTextColor":"Font Color","dxDiagram-commandLineColor":"Line Color","dxDiagram-commandLineWidth":"Line Width","dxDiagram-commandLineStyle":"Line Style","dxDiagram-commandLineStyleSolid":"Solid","dxDiagram-commandLineStyleDotted":"Dotted","dxDiagram-commandLineStyleDashed":"Dashed","dxDiagram-commandFillColor":"Fill Color","dxDiagram-commandAlignLeft":"Align Left","dxDiagram-commandAlignCenter":"Align Center","dxDiagram-commandAlignRight":"Align Right","dxDiagram-commandConnectorLineType":"Connector Line Type","dxDiagram-commandConnectorLineStraight":"Straight","dxDiagram-commandConnectorLineOrthogonal":"Orthogonal","dxDiagram-commandConnectorLineStart":"Connector Line Start","dxDiagram-commandConnectorLineEnd":"Connector Line End","dxDiagram-commandConnectorLineNone":"None","dxDiagram-commandConnectorLineArrow":"Arrow","dxDiagram-commandFullscreen":"Full Screen","dxDiagram-commandUnits":"Units","dxDiagram-commandPageSize":"Page Size","dxDiagram-commandPageOrientation":"Page Orientation","dxDiagram-commandPageOrientationLandscape":"Landscape","dxDiagram-commandPageOrientationPortrait":"Portrait","dxDiagram-commandPageColor":"Page Color","dxDiagram-commandShowGrid":"Show Grid","dxDiagram-commandSnapToGrid":"Snap to Grid","dxDiagram-commandGridSize":"Grid Size","dxDiagram-commandZoomLevel":"Zoom Level","dxDiagram-commandAutoZoom":"Auto Zoom","dxDiagram-commandFitToContent":"Fit to Content","dxDiagram-commandFitToWidth":"Fit to Width","dxDiagram-commandAutoZoomByContent":"Auto Zoom by Content","dxDiagram-commandAutoZoomByWidth":"Auto Zoom by Width","dxDiagram-commandSimpleView":"Simple View","dxDiagram-commandCut":"Cut","dxDiagram-commandCopy":"Copy","dxDiagram-commandPaste":"Paste","dxDiagram-commandSelectAll":"Select All","dxDiagram-commandDelete":"Delete","dxDiagram-commandBringToFront":"Bring to Front","dxDiagram-commandSendToBack":"Send to Back","dxDiagram-commandLock":"Lock","dxDiagram-commandUnlock":"Unlock","dxDiagram-commandInsertShapeImage":"Insert Image...","dxDiagram-commandEditShapeImage":"Change Image...","dxDiagram-commandDeleteShapeImage":"Delete Image","dxDiagram-commandLayoutLeftToRight":"Left-to-right","dxDiagram-commandLayoutRightToLeft":"Right-to-left","dxDiagram-commandLayoutTopToBottom":"Top-to-bottom","dxDiagram-commandLayoutBottomToTop":"Bottom-to-top","dxDiagram-unitIn":"in","dxDiagram-unitCm":"cm","dxDiagram-unitPx":"px","dxDiagram-dialogButtonOK":"OK","dxDiagram-dialogButtonCancel":"Cancel","dxDiagram-dialogInsertShapeImageTitle":"Insert Image","dxDiagram-dialogEditShapeImageTitle":"Change Image","dxDiagram-dialogEditShapeImageSelectButton":"Select image","dxDiagram-dialogEditShapeImageLabelText":"or drop a file here","dxDiagram-uiExport":"Export","dxDiagram-uiProperties":"Properties","dxDiagram-uiSettings":"Settings","dxDiagram-uiShowToolbox":"Show Toolbox","dxDiagram-uiSearch":"Search","dxDiagram-uiStyle":"Style","dxDiagram-uiLayout":"Layout","dxDiagram-uiLayoutTree":"Tree","dxDiagram-uiLayoutLayered":"Layered","dxDiagram-uiDiagram":"Diagram","dxDiagram-uiText":"Text","dxDiagram-uiObject":"Object","dxDiagram-uiConnector":"Connector","dxDiagram-uiPage":"Page","dxDiagram-shapeText":"Text","dxDiagram-shapeRectangle":"Rectangle","dxDiagram-shapeEllipse":"Ellipse","dxDiagram-shapeCross":"Cross","dxDiagram-shapeTriangle":"Triangle","dxDiagram-shapeDiamond":"Diamond","dxDiagram-shapeHeart":"Heart","dxDiagram-shapePentagon":"Pentagon","dxDiagram-shapeHexagon":"Hexagon","dxDiagram-shapeOctagon":"Octagon","dxDiagram-shapeStar":"Star","dxDiagram-shapeArrowLeft":"Left Arrow","dxDiagram-shapeArrowUp":"Up Arrow","dxDiagram-shapeArrowRight":"Right Arrow","dxDiagram-shapeArrowDown":"Down Arrow","dxDiagram-shapeArrowUpDown":"Up Down Arrow","dxDiagram-shapeArrowLeftRight":"Left Right Arrow","dxDiagram-shapeProcess":"Process","dxDiagram-shapeDecision":"Decision","dxDiagram-shapeTerminator":"Terminator","dxDiagram-shapePredefinedProcess":"Predefined Process","dxDiagram-shapeDocument":"Document","dxDiagram-shapeMultipleDocuments":"Multiple Documents","dxDiagram-shapeManualInput":"Manual Input","dxDiagram-shapePreparation":"Preparation","dxDiagram-shapeData":"Data","dxDiagram-shapeDatabase":"Database","dxDiagram-shapeHardDisk":"Hard Disk","dxDiagram-shapeInternalStorage":"Internal Storage","dxDiagram-shapePaperTape":"Paper Tape","dxDiagram-shapeManualOperation":"Manual Operation","dxDiagram-shapeDelay":"Delay","dxDiagram-shapeStoredData":"Stored Data","dxDiagram-shapeDisplay":"Display","dxDiagram-shapeMerge":"Merge","dxDiagram-shapeConnector":"Connector","dxDiagram-shapeOr":"Or","dxDiagram-shapeSummingJunction":"Summing Junction","dxDiagram-shapeContainerDefaultText":"Container","dxDiagram-shapeVerticalContainer":"Vertical Container","dxDiagram-shapeHorizontalContainer":"Horizontal Container","dxDiagram-shapeCardDefaultText":"Person's Name","dxDiagram-shapeCardWithImageOnLeft":"Card with Image on the Left","dxDiagram-shapeCardWithImageOnTop":"Card with Image on the Top","dxDiagram-shapeCardWithImageOnRight":"Card with Image on the Right","dxGantt-dialogTitle":"Title","dxGantt-dialogStartTitle":"Start","dxGantt-dialogEndTitle":"End","dxGantt-dialogProgressTitle":"Progress","dxGantt-dialogResourcesTitle":"Resources","dxGantt-dialogResourceManagerTitle":"Resource Manager","dxGantt-dialogTaskDetailsTitle":"Task Details","dxGantt-dialogEditResourceListHint":"Edit Resource List","dxGantt-dialogEditNoResources":"No resources","dxGantt-dialogButtonAdd":"Add","dxGantt-contextMenuNewTask":"New Task","dxGantt-contextMenuNewSubtask":"New Subtask","dxGantt-contextMenuDeleteTask":"Delete Task","dxGantt-contextMenuDeleteDependency":"Delete Dependency","dxGantt-dialogTaskDeleteConfirmation":"Deleting a task also deletes all its dependencies and subtasks. Are you sure you want to delete this task?","dxGantt-dialogDependencyDeleteConfirmation":"Are you sure you want to delete the dependency from the task?","dxGantt-dialogResourcesDeleteConfirmation":"Deleting a resource also deletes it from tasks to which this resource is assigned. Are you sure you want to delete these resources? Resources: {0}","dxGantt-dialogConstraintCriticalViolationMessage":"The task you are attempting to move is linked to a second task by a dependency relation. This change would conflict with dependency rules. How would you like to proceed?","dxGantt-dialogConstraintViolationMessage":"The task you are attempting to move is linked to a second task by a dependency relation. How would you like to proceed?","dxGantt-dialogCancelOperationMessage":"Cancel the operation","dxGantt-dialogDeleteDependencyMessage":"Delete the dependency","dxGantt-dialogMoveTaskAndKeepDependencyMessage":"Move the task and keep the dependency","dxGantt-dialogConstraintCriticalViolationSeveralTasksMessage":"The task you are attempting to move is linked to another tasks by dependency relations. This change would conflict with dependency rules. How would you like to proceed?","dxGantt-dialogConstraintViolationSeveralTasksMessage":"The task you are attempting to move is linked to another tasks by dependency relations. How would you like to proceed?","dxGantt-dialogDeleteDependenciesMessage":"Delete the dependency relations","dxGantt-dialogMoveTaskAndKeepDependenciesMessage":"Move the task and keep the dependencies","dxGantt-undo":"Undo","dxGantt-redo":"Redo","dxGantt-expandAll":"Expand All","dxGantt-collapseAll":"Collapse All","dxGantt-addNewTask":"Add New Task","dxGantt-deleteSelectedTask":"Delete Selected Task","dxGantt-zoomIn":"Zoom In","dxGantt-zoomOut":"Zoom Out","dxGantt-fullScreen":"Full Screen","dxGantt-quarter":"Q{0}","dxGantt-sortingAscendingText":"Sort Ascending","dxGantt-sortingDescendingText":"Sort Descending","dxGantt-sortingClearText":"Clear Sorting","dxGantt-showResources":"Show Resources","dxGantt-showDependencies":"Show Dependencies","dxGantt-dialogStartDateValidation":"Start date must be after {0}","dxGantt-dialogEndDateValidation":"End date must be after {0}"}}),ae={},se=(0,T.Z)({engine:function(){return"base"},_dictionary:oe,load:function(e){(0,x.l)(!0,this._dictionary,e)},_localizablePrefix:"@",setup:function(e){this._localizablePrefix=e},localizeString:function(e){var t=this,n=new RegExp("(^|[^a-zA-Z_0-9"+t._localizablePrefix+"-]+)("+t._localizablePrefix+"{1,2})([a-zA-Z_0-9-]+)","g"),i=t._localizablePrefix+t._localizablePrefix;return e.replace(n,((e,n,r,o)=>{var a,s=t._localizablePrefix+o;return r!==i&&(a=t.format(o)),a||(ae[o]=(0,re.OI)(o)),n+(a||s)}))},getMessagesByLocales:function(){return this._dictionary},getDictionary:function(e){return e?ae:(0,x.l)({},ae,this.getMessagesByLocales()[z.locale()])},getFormatter:function(e){return this._getFormatterBase(e)||this._getFormatterBase(e,"en")},_getFormatterBase:function(e,t){var n=z.getValueByClosestLocale((t=>((e,t)=>e[t]||{})(this._dictionary,t)[e]));if(n)return function(){var e=1===arguments.length&&Array.isArray(arguments[0])?arguments[0].slice(0):Array.prototype.slice.call(arguments,0);return e.unshift(n),ie.WU.apply(this,e)}},format:function(e){var t=this.getFormatter(e),n=Array.prototype.slice.call(arguments,1);return t&&t.apply(this,n)||""}});const le=se;var de=n(9303),ce="valid",ue="invalid",pe="pending";class he{constructor(){this.NAME="base"}defaultMessage(e){return le.getFormatter("validation-".concat(this.NAME))(e)}defaultFormattedMessage(e){return le.getFormatter("validation-".concat(this.NAME,"-formatted"))(e)}_isValueEmpty(e){return!me.required.validate(e,{})}validate(e,t){var n=Array.isArray(e)?e:[e],i=!0;return n.length?n.every((e=>i=this._validate(e,t))):i=this._validate(null,t),i}}class fe extends he{constructor(){super(),this.NAME="custom"}validate(e,t){if(t.ignoreEmptyValue&&this._isValueEmpty(e))return!0;var n=t.validator,i=n&&(0,d.mf)(n.option)&&n.option("dataGetter"),r=(0,d.mf)(i)&&i(),o={value:e,validator:n,rule:t};return r&&(0,x.l)(o,r),t.validationCallback(o)}}var me={required:new class extends he{constructor(){super(),this.NAME="required"}_validate(e,t){return!!(0,d.$K)(e)&&!1!==e&&(e=String(e),!t.trim&&(0,d.$K)(t.trim)||(e=e.trim()),""!==e)}},numeric:new class extends he{constructor(){super(),this.NAME="numeric"}_validate(e,t){return!(!1===t.ignoreEmptyValue||!this._isValueEmpty(e))||(t.useCultureSettings&&(0,d.HD)(e)?!isNaN(ne.parse(e)):(0,d.kE)(e))}},range:new class extends he{constructor(){super(),this.NAME="range"}_validate(e,t){if(!1!==t.ignoreEmptyValue&&this._isValueEmpty(e))return!0;var n=me.numeric.validate(e,t),i=(0,d.$K)(e)&&""!==e,r=n?parseFloat(e):i&&e.valueOf(),o=t.min,s=t.max;if(!n&&!(0,d.J_)(e)&&!i)return!1;if((0,d.$K)(o))return(0,d.$K)(s)?r>=o&&r<=s:r>=o;if((0,d.$K)(s))return r<=s;throw a.Z.Error("E0101")}},stringLength:new class extends he{constructor(){super(),this.NAME="stringLength"}_validate(e,t){var n;return e=String(null!==(n=e)&&void 0!==n?n:""),!t.trim&&(0,d.$K)(t.trim)||(e=e.trim()),!(!t.ignoreEmptyValue||!this._isValueEmpty(e))||me.range.validate(e.length,(0,x.l)({},t))}},custom:new fe,async:new class extends fe{constructor(){super(),this.NAME="async"}validate(e,t){if((0,d.$K)(t.reevaluate)||(0,x.l)(t,{reevaluate:!0}),t.ignoreEmptyValue&&this._isValueEmpty(e))return!0;var n=t.validator,i=n&&(0,d.mf)(n.option)&&n.option("dataGetter"),r=(0,d.mf)(i)&&i(),o={value:e,validator:n,rule:t};r&&(0,x.l)(o,r);var s=t.validationCallback(o);if(!(0,d.tI)(s))throw a.Z.Error("E0103");return this._getWrappedPromise((0,de.p4)(s).promise())}_getWrappedPromise(e){var t=new de.BH;return e.then((function(e){t.resolve(e)}),(function(e){var n={isValid:!1};(0,d.$K)(e)&&((0,d.HD)(e)?n.message=e:(0,d.Kn)(e)&&(0,d.$K)(e.message)&&(0,d.HD)(e.message)&&(n.message=e.message)),t.resolve(n)})),t.promise()}},compare:new class extends he{constructor(){super(),this.NAME="compare"}_validate(e,t){if(!t.comparisonTarget)throw a.Z.Error("E0102");if(t.ignoreEmptyValue&&this._isValueEmpty(e))return!0;(0,x.l)(t,{reevaluate:!0});var n=t.comparisonTarget();switch(t.comparisonType||"=="){case"==":return e==n;case"!=":return e!=n;case"===":return e===n;case"!==":return e!==n;case">":return e>n;case">=":return e>=n;case"<":return e<n;case"<=":return e<=n}}},pattern:new class extends he{constructor(){super(),this.NAME="pattern"}_validate(e,t){if(!1!==t.ignoreEmptyValue&&this._isValueEmpty(e))return!0;var n=t.pattern;return(0,d.HD)(n)&&(n=new RegExp(n)),n.test(e)}},email:new class extends he{constructor(){super(),this.NAME="email"}_validate(e,t){return!(!1===t.ignoreEmptyValue||!this._isValueEmpty(e))||me.pattern.validate(e,(0,x.l)({},t,{pattern:/^[\d\w._-]+@[\d\w._-]+\.[\w]+$/i}))}}},ge=y.Z.inherit({ctor(e){this.group=e,this.validators=[],this._pendingValidators=[],this._onValidatorStatusChanged=this._onValidatorStatusChanged.bind(this),this._resetValidationInfo(),this._eventsStrategy=new E(this)},validate(){var e={isValid:!0,brokenRules:[],validators:[],status:ce,complete:null};return this._unsubscribeFromAllChangeEvents(),this._pendingValidators=[],this._resetValidationInfo(),(0,b.S6)(this.validators,((t,n)=>{var i=n.validate();e.isValid=e.isValid&&i.isValid,i.brokenRules&&(e.brokenRules=e.brokenRules.concat(i.brokenRules)),e.validators.push(n),i.status===pe&&this._addPendingValidator(n),this._subscribeToChangeEvents(n)})),this._pendingValidators.length?e.status=pe:(e.status=e.isValid?ce:ue,this._unsubscribeFromAllChangeEvents(),this._raiseValidatedEvent(e)),this._updateValidationInfo(e),(0,x.l)({},this._validationInfo.result)},_subscribeToChangeEvents(e){e.on("validating",this._onValidatorStatusChanged),e.on("validated",this._onValidatorStatusChanged)},_unsubscribeFromChangeEvents(e){e.off("validating",this._onValidatorStatusChanged),e.off("validated",this._onValidatorStatusChanged)},_unsubscribeFromAllChangeEvents(){(0,b.S6)(this.validators,((e,t)=>{this._unsubscribeFromChangeEvents(t)}))},_updateValidationInfo(e){this._validationInfo.result=e,e.status===pe&&(this._validationInfo.deferred||(this._validationInfo.deferred=new de.BH,this._validationInfo.result.complete=this._validationInfo.deferred.promise()))},_addPendingValidator(e){(0,C.h3)(this._pendingValidators,(function(t){return t===e}))[0]||this._pendingValidators.push(e)},_removePendingValidator(e){var t=this._pendingValidators.indexOf(e);t>=0&&this._pendingValidators.splice(t,1)},_orderBrokenRules(e){var t=[];return(0,b.S6)(this.validators,(function(n,i){var r=(0,C.h3)(e,(function(e){return e.validator===i}));r.length&&(t=t.concat(r))})),t},_updateBrokenRules(e){if(this._validationInfo.result){var t=this._validationInfo.result.brokenRules,n=(0,C.h3)(t,(function(t){return t.validator!==e.validator}));e.brokenRules&&(t=n.concat(e.brokenRules)),this._validationInfo.result.brokenRules=this._orderBrokenRules(t)}},_onValidatorStatusChanged(e){e.status!==pe?this._resolveIfComplete(e):this._addPendingValidator(e.validator)},_resolveIfComplete(e){if(this._removePendingValidator(e.validator),this._updateBrokenRules(e),!this._pendingValidators.length){if(this._unsubscribeFromAllChangeEvents(),!this._validationInfo.result)return;this._validationInfo.result.status=0===this._validationInfo.result.brokenRules.length?ce:ue,this._validationInfo.result.isValid=this._validationInfo.result.status===ce;var t=(0,x.l)({},this._validationInfo.result,{complete:null}),n=this._validationInfo.deferred;this._validationInfo.deferred=null,this._raiseValidatedEvent(t),n&&setTimeout((()=>{n.resolve(t)}))}},_raiseValidatedEvent(e){this._eventsStrategy.fireEvent("validated",[e])},_resetValidationInfo(){this._validationInfo={result:null,deferred:null}},_synchronizeValidationInfo(){this._validationInfo.result&&(this._validationInfo.result.validators=this.validators)},removeRegisteredValidator(e){var t=this.validators.indexOf(e);t>-1&&(this.validators.splice(t,1),this._synchronizeValidationInfo(),this._resolveIfComplete({validator:e}))},registerValidator(e){this.validators.includes(e)||(this.validators.push(e),this._synchronizeValidationInfo())},reset(){(0,b.S6)(this.validators,(function(e,t){t.reset()})),this._pendingValidators=[],this._resetValidationInfo()},on(e,t){return this._eventsStrategy.on(e,t),this},off(e,t){return this._eventsStrategy.off(e,t),this}}),ve={groups:[],getGroupConfig(e){var t=(0,C.h3)(this.groups,(function(t){return t.group===e}));if(t.length)return t[0]},findGroup(e,t){var n,i,r=(null===(n=e.data())||void 0===n||null===(i=n.dxComponents)||void 0===i?void 0:i.includes("dxValidationGroup"))&&e.dxValidationGroup("instance");if(r)return r;var o=e.parents(".dx-validationgroup").first();return o.length?o.dxValidationGroup("instance"):t},initGroups(){this.groups=[],this.addGroup()},addGroup(e){var t=this.getGroupConfig(e);return t||(t=new ge(e),this.groups.push(t)),t},removeGroup(e){var t=this.getGroupConfig(e),n=this.groups.indexOf(t);return n>-1&&this.groups.splice(n,1),t},_setDefaultMessage(e){var{rule:t,validator:n,name:i}=e;(0,d.$K)(t.message)||(n.defaultFormattedMessage&&(0,d.$K)(i)?t.message=n.defaultFormattedMessage(i):t.message=n.defaultMessage())},_addBrokenRule(e){var{result:t,rule:n}=e;t.brokenRule||(t.brokenRule=n),t.brokenRules||(t.brokenRules=[]),t.brokenRules.push(n)},validate(e,t,n){var i,r={name:n,value:e,brokenRule:null,brokenRules:null,isValid:!0,validationRules:t,pendingRules:null,status:ce,complete:null},o=null==t||null===(i=t[0])||void 0===i?void 0:i.validator,s=[];return(0,b.S6)(t||[],((t,i)=>{var o,l=me[i.type];if(!l)throw a.Z.Error("E0100");return(0,d.$K)(i.isValid)&&i.value===e&&!i.reevaluate?!!i.isValid||(r.isValid=!1,this._addBrokenRule({result:r,rule:i}),!1):(i.value=e,"async"===i.type?(s.push({rule:i,ruleValidator:l}),!0):(o=l.validate(e,i),i.isValid=o,o||(r.isValid=!1,this._setDefaultMessage({rule:i,validator:l,name:n}),this._addBrokenRule({result:r,rule:i})),!!i.isValid&&void 0))})),r.isValid&&!r.brokenRules&&s.length&&(r=this._validateAsyncRules({value:e,items:s,result:r,name:n})),this._synchronizeGroupValidationInfo(o,r),r.status=r.pendingRules?pe:r.isValid?ce:ue,r},_synchronizeGroupValidationInfo(e,t){var n;if(e){var i=ve.getGroupConfig(e._validationGroup);i._updateBrokenRules.call(i,{validator:e,brokenRules:null!==(n=t.brokenRules)&&void 0!==n?n:[]})}},_validateAsyncRules(e){var{result:t,value:n,items:i,name:r}=e,o=[];return(0,b.S6)(i,((e,i)=>{var a=i.ruleValidator.validate(n,i.rule);if((0,d.tI)(a)){t.pendingRules||(t.pendingRules=[]),t.pendingRules.push(i.rule);var s=a.then((e=>{var t=this._getPatchedRuleResult(e);return this._updateRuleConfig({rule:i.rule,ruleResult:t,validator:i.ruleValidator,name:r}),t}));o.push(s)}else this._updateRuleConfig({rule:i.rule,ruleResult:this._getPatchedRuleResult(a),validator:i.ruleValidator,name:r})})),o.length&&(t.complete=Promise.all(o).then((e=>this._getAsyncRulesResult({result:t,values:e})))),t},_updateRuleConfig(e){var{rule:t,ruleResult:n,validator:i,name:r}=e;t.isValid=n.isValid,n.isValid||((0,d.$K)(n.message)&&(0,d.HD)(n.message)&&n.message.length?t.message=n.message:this._setDefaultMessage({rule:t,validator:i,name:r}))},_getPatchedRuleResult(e){var t;return(0,d.Kn)(e)?(t=(0,x.l)({},e),(0,d.$K)(t.isValid)||(t.isValid=!0)):t={isValid:!(0,d.jn)(e)||e},t},_getAsyncRulesResult(e){var{values:t,result:n}=e;return(0,b.S6)(t,((e,t)=>{if(!1===t.isValid){n.isValid=t.isValid;var i=n.pendingRules[e];this._addBrokenRule({result:n,rule:i})}})),n.pendingRules=null,n.complete=null,n.status=n.isValid?ce:ue,n},registerValidatorInGroup(e,t){var n=ve.addGroup(e);n.registerValidator.call(n,t)},_shouldRemoveGroup(e,t){var n=void 0===e,i=e&&"dxValidationGroup"===e.NAME;return!n&&!i&&!t.length},removeRegisteredValidator(e,t){var n=ve.getGroupConfig(e);if(n){n.removeRegisteredValidator.call(n,t);var i=n.validators;this._shouldRemoveGroup(e,i)&&this.removeGroup(e)}},initValidationOptions(e){var t={};return e&&["isValid","validationStatus","validationError","validationErrors"].forEach((n=>{n in e&&(0,x.l)(t,this.synchronizeValidationOptions({name:n,value:e[n]},e))})),t},synchronizeValidationOptions(e,t){var{name:n,value:i}=e;switch(n){case"validationStatus":var r=i===ce||i===pe;return t.isValid!==r?{isValid:r}:{};case"isValid":var{validationStatus:o}=t,a=o;return i&&o===ue?a=ce:i||o===ue||(a=ue),a!==o?{validationStatus:a}:{};case"validationErrors":var s=i&&i.length?i[0]:null;return t.validationError!==s?{validationError:s}:{};case"validationError":var{validationErrors:l}=t;if(!i&&l)return{validationErrors:null};if(i&&!l)return{validationErrors:[i]};if(i&&l&&i!==l[0])return l[0]=i,{validationErrors:l.slice()}}return{}},validateGroup(e){var t=ve.getGroupConfig(e);if(!t)throw a.Z.Error("E0110");return t.validate()},resetGroup(e){var t=ve.getGroupConfig(e);if(!t)throw a.Z.Error("E0110");return t.reset()}};ve.initGroups();const ye=ve;var xe=Array.isArray;function be(e){var t=typeof e;return"string"===t||"number"===t}function _e(e){return null==e}function we(e){return null===e||!1===e||!0===e||void 0===e}function Ee(e){return"function"==typeof e}function Ce(e){return"string"==typeof e}function Te(e){return null===e}function ke(e,t){var n={};if(e)for(var i in e)n[i]=e[i];if(t)for(var r in t)n[r]=t[r];return n}function Se(e){return!Te(e)&&"object"==typeof e}var De={},Re="$F";function Ae(e){return e.substr(2).toLowerCase()}function Oe(e,t){e.appendChild(t)}function Me(e,t,n){Te(n)?Oe(e,t):e.insertBefore(t,n)}function Ne(e,t){e.removeChild(t)}function Ue(e){for(var t=0;t<e.length;t++)e[t]()}function Ie(e,t,n){var i=e.children;return 4&n?i.$LI:8192&n?2===e.childFlags?i:i[t?0:i.length-1]:i}function Pe(e,t){for(var n;e;){if(2033&(n=e.flags))return e.dom;e=Ie(e,t,n)}return null}function Le(e,t){do{var n=e.flags;if(2033&n)return void Ne(t,e.dom);var i=e.children;if(4&n&&(e=i.$LI),8&n&&(e=i),8192&n){if(2!==e.childFlags){for(var r=0,o=i.length;r<o;++r)Le(i[r],t);return}e=i}}while(e)}function Fe(e,t,n){do{var i=e.flags;if(2033&i)return void Me(t,e.dom,n);var r=e.children;if(4&i&&(e=r.$LI),8&i&&(e=r),8192&i){if(2!==e.childFlags){for(var o=0,a=r.length;o<a;++o)Fe(r[o],t,n);return}e=r}}while(e)}function Ze(e,t,n){return e.constructor.getDerivedStateFromProps?ke(n,e.constructor.getDerivedStateFromProps(t,n)):n}var He={v:!1},Be={componentComparator:null,createVNode:null,renderComplete:null};function je(e,t){e.textContent=t}function ze(e,t){return Se(e)&&e.event===t.event&&e.data===t.data}function Ge(e,t){for(var n in t)void 0===e[n]&&(e[n]=t[n]);return e}function Ve(e,t){return!!Ee(e)&&(e(t),!0)}var We="$";function $e(e,t,n,i,r,o,a,s){this.childFlags=e,this.children=t,this.className=n,this.dom=null,this.flags=i,this.key=void 0===r?null:r,this.props=void 0===o?null:o,this.ref=void 0===a?null:a,this.type=s}function Ke(e,t,n,i,r,o,a,s){var l=void 0===r?1:r,d=new $e(l,i,n,e,a,o,s,t);return Be.createVNode&&Be.createVNode(d),0===l&&nt(d,d.children),d}function qe(e,t,n,i,r){e=function(e,t){return 12&e?e:t.prototype&&t.prototype.render?4:t.render?32776:8}(e,t);var o=new $e(1,null,null,e,i,function(e,t,n){var i=(32768&e?t.render:t).defaultProps;return _e(i)?n:_e(n)?ke(i,null):Ge(n,i)}(e,t,n),function(e,t,n){if(4&e)return n;var i=(32768&e?t.render:t).defaultHooks;return _e(i)?n:_e(n)?i:Ge(n,i)}(e,t,r),t);return Be.createVNode&&Be.createVNode(o),o}function Ye(e,t){return new $e(1,_e(e)||!0===e||!1===e?"":e,null,16,t,null,null,null)}function Xe(e,t,n){var i=Ke(8192,8192,null,e,t,null,n,null);switch(i.childFlags){case 1:i.children=et(),i.childFlags=2;break;case 16:i.children=[Ye(e)],i.childFlags=4}return i}function Je(e){var t=e.props;if(t){var n=e.flags;481&n&&(void 0!==t.children&&_e(e.children)&&nt(e,t.children),void 0!==t.className&&(_e(e.className)&&(e.className=t.className||null),t.className=void 0)),void 0!==t.key&&(e.key=t.key,t.key=void 0),void 0!==t.ref&&(e.ref=8&n?ke(e.ref,t.ref):t.ref,t.ref=void 0)}return e}function Qe(e){var t=-16385&e.flags,n=e.props;if(14&t&&!Te(n)){var i=n;for(var r in n={},i)n[r]=i[r]}return 0==(8192&t)?new $e(e.childFlags,e.children,e.className,t,e.key,n,e.ref,e.type):function(e){var t=e.children,n=e.childFlags;return Xe(2===n?Qe(t):t.map(Qe),n,e.key)}(e)}function et(){return Ye("",null)}function tt(e,t,n,i){for(var r=e.length;n<r;n++){var o=e[n];if(!we(o)){var a=i+We+n;if(xe(o))tt(o,t,0,a);else{if(be(o))o=Ye(o,a);else{var s=o.key,l=Ce(s)&&s[0]===We;(81920&o.flags||l)&&(o=Qe(o)),o.flags|=65536,l?s.substring(0,i.length)!==i&&(o.key=i+s):Te(s)?o.key=a:o.key=i+s}t.push(o)}}}}function nt(e,t){var n,i=1;if(we(t))n=t;else if(be(t))i=16,n=t;else if(xe(t)){for(var r=t.length,o=0;o<r;++o){var a=t[o];if(we(a)||xe(a)){n=n||t.slice(0,o),tt(t,n,o,"");break}if(be(a))(n=n||t.slice(0,o)).push(Ye(a,We+o));else{var s=a.key,l=(81920&a.flags)>0,d=Te(s),c=Ce(s)&&s[0]===We;l||d||c?(n=n||t.slice(0,o),(l||c)&&(a=Qe(a)),(d||c)&&(a.key=We+o),n.push(a)):n&&n.push(a),a.flags|=65536}}i=0===(n=n||t).length?1:8}else(n=t).flags|=65536,81920&t.flags&&(n=Qe(t)),i=2;return e.children=n,e.childFlags=i,e}function it(e){return we(e)||be(e)?Ye(e,null):xe(e)?Xe(e,0,null):16384&e.flags?Qe(e):e}var rt="http://www.w3.org/1999/xlink",ot="http://www.w3.org/XML/1998/namespace",at={"xlink:actuate":rt,"xlink:arcrole":rt,"xlink:href":rt,"xlink:role":rt,"xlink:show":rt,"xlink:title":rt,"xlink:type":rt,"xml:base":ot,"xml:lang":ot,"xml:space":ot};function st(e){return{onClick:e,onDblClick:e,onFocusIn:e,onFocusOut:e,onKeyDown:e,onKeyPress:e,onKeyUp:e,onMouseDown:e,onMouseMove:e,onMouseUp:e,onTouchEnd:e,onTouchMove:e,onTouchStart:e}}var lt=st(0),dt=st(null),ct=st(!0);function ut(e,t){var n=t.$EV;return n||(n=t.$EV=st(null)),n[e]||1==++lt[e]&&(dt[e]=function(e){var t="onClick"===e||"onDblClick"===e?function(e){return function(t){0===t.button?ht(t,!0,e,vt(t)):t.stopPropagation()}}(e):function(e){return function(t){ht(t,!1,e,vt(t))}}(e);return document.addEventListener(Ae(e),t),t}(e)),n}function pt(e,t){var n=t.$EV;n&&n[e]&&(0==--lt[e]&&(document.removeEventListener(Ae(e),dt[e]),dt[e]=null),n[e]=null)}function ht(e,t,n,i){var r=function(e){return Ee(e.composedPath)?e.composedPath()[0]:e.target}(e);do{if(t&&r.disabled)return;var o=r.$EV;if(o){var a=o[n];if(a&&(i.dom=r,a.event?a.event(a.data,e):a(e),e.cancelBubble))return}r=r.parentNode}while(!Te(r))}function ft(){this.cancelBubble=!0,this.immediatePropagationStopped||this.stopImmediatePropagation()}function mt(){return this.defaultPrevented}function gt(){return this.cancelBubble}function vt(e){var t={dom:document};return e.isDefaultPrevented=mt,e.isPropagationStopped=gt,e.stopPropagation=ft,Object.defineProperty(e,"currentTarget",{configurable:!0,get:function(){return t.dom}}),t}function yt(e,t,n){if(e[t]){var i=e[t];i.event?i.event(i.data,n):i(n)}else{var r=t.toLowerCase();e[r]&&e[r](n)}}function xt(e,t){var n=function(n){var i=this.$V;if(i){var r=i.props||De,o=i.dom;if(Ce(e))yt(r,e,n);else for(var a=0;a<e.length;++a)yt(r,e[a],n);if(Ee(t)){var s=this.$V,l=s.props||De;t(l,o,!1,s)}}};return Object.defineProperty(n,"wrapped",{configurable:!1,enumerable:!1,value:!0,writable:!1}),n}function bt(e,t,n){var i="$"+t,r=e[i];if(r){if(r[1].wrapped)return;e.removeEventListener(r[0],r[1]),e[i]=null}Ee(n)&&(e.addEventListener(t,n),e[i]=[t,n])}function _t(e){return"checkbox"===e||"radio"===e}var wt=xt("onInput",Tt),Et=xt(["onClick","onChange"],Tt);function Ct(e){e.stopPropagation()}function Tt(e,t){var n=e.type,i=e.value,r=e.checked,o=e.multiple,a=e.defaultValue,s=!_e(i);n&&n!==t.type&&t.setAttribute("type",n),_e(o)||o===t.multiple||(t.multiple=o),_e(a)||s||(t.defaultValue=a+""),_t(n)?(s&&(t.value=i),_e(r)||(t.checked=r)):s&&t.value!==i?(t.defaultValue=i,t.value=i):_e(r)||(t.checked=r)}function kt(e,t){if("option"===e.type)!function(e,t){var n=e.props||De,i=e.dom;i.value=n.value,n.value===t||xe(t)&&-1!==t.indexOf(n.value)?i.selected=!0:_e(t)&&_e(n.selected)||(i.selected=n.selected||!1)}(e,t);else{var n=e.children,i=e.flags;if(4&i)kt(n.$LI,t);else if(8&i)kt(n,t);else if(2===e.childFlags)kt(n,t);else if(12&e.childFlags)for(var r=0,o=n.length;r<o;++r)kt(n[r],t)}}Ct.wrapped=!0;var St=xt("onChange",Dt);function Dt(e,t,n,i){var r=Boolean(e.multiple);_e(e.multiple)||r===t.multiple||(t.multiple=r);var o=e.selectedIndex;if(-1===o&&(t.selectedIndex=-1),1!==i.childFlags){var a=e.value;"number"==typeof o&&o>-1&&t.options[o]&&(a=t.options[o].value),n&&_e(a)&&(a=e.defaultValue),kt(i,a)}}var Rt,At,Ot=xt("onInput",Nt),Mt=xt("onChange");function Nt(e,t,n){var i=e.value,r=t.value;if(_e(i)){if(n){var o=e.defaultValue;_e(o)||o===r||(t.defaultValue=o,t.value=o)}}else r!==i&&(t.defaultValue=i,t.value=i)}function Ut(e,t,n,i,r,o){64&e?Tt(i,n):256&e?Dt(i,n,r,t):128&e&&Nt(i,n,r),o&&(n.$V=t)}function It(e){return e.type&&_t(e.type)?!_e(e.checked):!_e(e.value)}function Pt(e){e&&!Ve(e,null)&&e.current&&(e.current=null)}function Lt(e,t,n){e&&(Ee(e)||void 0!==e.current)&&n.push((function(){Ve(e,t)||void 0===e.current||(e.current=t)}))}function Ft(e,t){Zt(e),Le(e,t)}function Zt(e){var t,n=e.flags,i=e.children;if(481&n){t=e.ref;var r=e.props;Pt(t);var o=e.childFlags;if(!Te(r))for(var a=Object.keys(r),s=0,l=a.length;s<l;s++){var d=a[s];ct[d]&&pt(d,e.dom)}12&o?Ht(i):2===o&&Zt(i)}else i&&(4&n?(Ee(i.componentWillUnmount)&&i.componentWillUnmount(),Pt(e.ref),i.$UN=!0,Zt(i.$LI)):8&n?(!_e(t=e.ref)&&Ee(t.onComponentWillUnmount)&&t.onComponentWillUnmount(Pe(e,!0),e.props||De),Zt(i)):1024&n?Ft(i,e.ref):8192&n&&12&e.childFlags&&Ht(i))}function Ht(e){for(var t=0,n=e.length;t<n;++t)Zt(e[t])}function Bt(e){e.textContent=""}function jt(e,t,n){Ht(n),8192&t.flags?Le(t,e):Bt(e)}function zt(e,t,n,i,r,o,a){switch(e){case"children":case"childrenType":case"className":case"defaultValue":case"key":case"multiple":case"ref":case"selectedIndex":break;case"autoFocus":i.autofocus=!!n;break;case"allowfullscreen":case"autoplay":case"capture":case"checked":case"controls":case"default":case"disabled":case"hidden":case"indeterminate":case"loop":case"muted":case"novalidate":case"open":case"readOnly":case"required":case"reversed":case"scoped":case"seamless":case"selected":i[e]=!!n;break;case"defaultChecked":case"value":case"volume":if(o&&"value"===e)break;var s=_e(n)?"":n;i[e]!==s&&(i[e]=s);break;case"style":!function(e,t,n){if(_e(t))n.removeAttribute("style");else{var i,r,o=n.style;if(Ce(t))o.cssText=t;else if(_e(e)||Ce(e))for(i in t)r=t[i],o.setProperty(i,r);else{for(i in t)(r=t[i])!==e[i]&&o.setProperty(i,r);for(i in e)_e(t[i])&&o.removeProperty(i)}}}(t,n,i);break;case"dangerouslySetInnerHTML":!function(e,t,n,i){var r=e&&e.__html||"",o=t&&t.__html||"";r!==o&&(_e(o)||function(e,t){var n=document.createElement("i");return n.innerHTML=t,n.innerHTML===e.innerHTML}(i,o)||(Te(n)||(12&n.childFlags?Ht(n.children):2===n.childFlags&&Zt(n.children),n.children=null,n.childFlags=1),i.innerHTML=o))}(t,n,a,i);break;default:ct[e]?function(e,t,n,i){if(Ee(n))ut(e,i)[e]=n;else if(Se(n)){if(ze(t,n))return;ut(e,i)[e]=n}else pt(e,i)}(e,t,n,i):111===e.charCodeAt(0)&&110===e.charCodeAt(1)?function(e,t,n,i){if(Se(n)){if(ze(t,n))return;n=function(e){var t=e.event;return function(n){t(e.data,n)}}(n)}bt(i,Ae(e),n)}(e,t,n,i):_e(n)?i.removeAttribute(e):r&&at[e]?i.setAttributeNS(at[e],e,n):i.setAttribute(e,n)}}function Gt(e,t,n,i,r){var o=!1,a=(448&t)>0;for(var s in a&&(o=It(n))&&function(e,t,n){64&e?function(e,t){_t(t.type)?(bt(e,"change",Et),bt(e,"click",Ct)):bt(e,"input",wt)}(t,n):256&e?function(e){bt(e,"change",St)}(t):128&e&&function(e,t){bt(e,"input",Ot),t.onChange&&bt(e,"change",Mt)}(t,n)}(t,i,n),n)zt(s,null,n[s],i,r,o,null);a&&Ut(t,e,i,n,!0,o)}function Vt(e,t,n){var i=it(e.render(t,e.state,n)),r=n;return Ee(e.getChildContext)&&(r=ke(n,e.getChildContext())),e.$CX=r,i}function Wt(e,t,n,i,r,o){var a=new t(n,i),s=a.$N=Boolean(t.getDerivedStateFromProps||a.getSnapshotBeforeUpdate);if(a.$SVG=r,a.$L=o,e.children=a,a.$BS=!1,a.context=i,a.props===De&&(a.props=n),s)a.state=Ze(a,n,a.state);else if(Ee(a.componentWillMount)){a.$BR=!0,a.componentWillMount();var l=a.$PS;if(!Te(l)){var d=a.state;if(Te(d))a.state=l;else for(var c in l)d[c]=l[c];a.$PS=null}a.$BR=!1}return a.$LI=Vt(a,n,i),a}function $t(e,t){var n=e.props||De;return 32768&e.flags?e.type.render(n,e.ref,t):e.type(n,t)}function Kt(e,t,n,i,r,o){var a=e.flags|=16384;481&a?Yt(e,t,n,i,r,o):4&a?function(e,t,n,i,r,o){var a=Wt(e,e.type,e.props||De,n,i,o);Kt(a.$LI,t,a.$CX,i,r,o),Jt(e.ref,a,o)}(e,t,n,i,r,o):8&a?(function(e,t,n,i,r,o){Kt(e.children=it($t(e,n)),t,n,i,r,o)}(e,t,n,i,r,o),Qt(e,o)):512&a||16&a?qt(e,t,r):8192&a?function(e,t,n,i,r,o){var a=e.children,s=e.childFlags;12&s&&0===a.length&&(s=e.childFlags=2,a=e.children=et()),2===s?Kt(a,n,t,i,r,o):Xt(a,n,t,i,r,o)}(e,n,t,i,r,o):1024&a&&function(e,t,n,i,r){Kt(e.children,e.ref,t,!1,null,r);var o=et();qt(o,n,i),e.dom=o.dom}(e,n,t,r,o)}function qt(e,t,n){var i=e.dom=document.createTextNode(e.children);Te(t)||Me(t,i,n)}function Yt(e,t,n,i,r,o){var a=e.flags,s=e.props,l=e.className,d=e.childFlags,c=e.dom=function(e,t){return t?document.createElementNS("http://www.w3.org/2000/svg",e):document.createElement(e)}(e.type,i=i||(32&a)>0),u=e.children;if(_e(l)||""===l||(i?c.setAttribute("class",l):c.className=l),16===d)je(c,u);else if(1!==d){var p=i&&"foreignObject"!==e.type;2===d?(16384&u.flags&&(e.children=u=Qe(u)),Kt(u,c,n,p,null,o)):8!==d&&4!==d||Xt(u,c,n,p,null,o)}Te(t)||Me(t,c,r),Te(s)||Gt(e,a,s,c,i),Lt(e.ref,c,o)}function Xt(e,t,n,i,r,o){for(var a=0;a<e.length;++a){var s=e[a];16384&s.flags&&(e[a]=s=Qe(s)),Kt(s,t,n,i,r,o)}}function Jt(e,t,n){Lt(e,t,n),Ee(t.componentDidMount)&&n.push(function(e){return function(){e.componentDidMount()}}(t))}function Qt(e,t){var n=e.ref;_e(n)||(Ve(n.onComponentWillMount,e.props||De),Ee(n.onComponentDidMount)&&t.push(function(e,t){return function(){e.onComponentDidMount(Pe(t,!0),t.props||De)}}(n,e)))}function en(e,t,n,i,r,o,a){var s=t.flags|=16384;e.flags!==s||e.type!==t.type||e.key!==t.key||2048&s?16384&e.flags?function(e,t,n,i,r,o){Zt(e),0!=(t.flags&e.flags&2033)?(Kt(t,null,i,r,null,o),function(e,t,n){e.replaceChild(t,n)}(n,t.dom,e.dom)):(Kt(t,n,i,r,Pe(e,!0),o),Le(e,n))}(e,t,n,i,r,a):Kt(t,n,i,r,o,a):481&s?function(e,t,n,i,r,o){var a,s=t.dom=e.dom,l=e.props,d=t.props,c=!1,u=!1;if(i=i||(32&r)>0,l!==d){var p=l||De;if((a=d||De)!==De)for(var h in(c=(448&r)>0)&&(u=It(a)),a){var f=p[h],m=a[h];f!==m&&zt(h,f,m,s,i,u,e)}if(p!==De)for(var g in p)_e(a[g])&&!_e(p[g])&&zt(g,p[g],null,s,i,u,e)}var v=t.children,y=t.className;e.className!==y&&(_e(y)?s.removeAttribute("class"):i?s.setAttribute("class",y):s.className=y),4096&r?function(e,t){e.textContent!==t&&(e.textContent=t)}(s,v):tn(e.childFlags,t.childFlags,e.children,v,s,n,i&&"foreignObject"!==t.type,null,e,o),c&&Ut(r,t,s,a,!1,u);var x=t.ref,b=e.ref;b!==x&&(Pt(b),Lt(x,s,o))}(e,t,i,r,s,a):4&s?function(e,t,n,i,r,o,a){var s=t.children=e.children;if(!Te(s)){s.$L=a;var l=t.props||De,d=t.ref,c=e.ref,u=s.state;if(!s.$N){if(Ee(s.componentWillReceiveProps)){if(s.$BR=!0,s.componentWillReceiveProps(l,i),s.$UN)return;s.$BR=!1}Te(s.$PS)||(u=ke(u,s.$PS),s.$PS=null)}nn(s,u,l,n,i,r,!1,o,a),c!==d&&(Pt(c),Lt(d,s,a))}}(e,t,n,i,r,o,a):8&s?function(e,t,n,i,r,o,a){var s=!0,l=t.props||De,d=t.ref,c=e.props,u=!_e(d),p=e.children;if(u&&Ee(d.onComponentShouldUpdate)&&(s=d.onComponentShouldUpdate(c,l)),!1!==s){u&&Ee(d.onComponentWillUpdate)&&d.onComponentWillUpdate(c,l);var h=it($t(t,i));en(p,h,n,i,r,o,a),t.children=h,u&&Ee(d.onComponentDidUpdate)&&d.onComponentDidUpdate(c,l)}else t.children=p}(e,t,n,i,r,o,a):16&s?function(e,t){var n=t.children,i=t.dom=e.dom;n!==e.children&&(i.nodeValue=n)}(e,t):512&s?t.dom=e.dom:8192&s?function(e,t,n,i,r,o){var a=e.children,s=t.children,l=e.childFlags,d=t.childFlags,c=null;12&d&&0===s.length&&(d=t.childFlags=2,s=t.children=et());var u=0!=(2&d);if(12&l){var p=a.length;(8&l&&8&d||u||!u&&s.length>p)&&(c=Pe(a[p-1],!1).nextSibling)}tn(l,d,a,s,n,i,r,c,e,o)}(e,t,n,i,r,a):function(e,t,n,i){var r=e.ref,o=t.ref,a=t.children;if(tn(e.childFlags,t.childFlags,e.children,a,r,n,!1,null,e,i),t.dom=e.dom,r!==o&&!we(a)){var s=a.dom;Ne(r,s),Oe(o,s)}}(e,t,i,a)}function tn(e,t,n,i,r,o,a,s,l,d){switch(e){case 2:switch(t){case 2:en(n,i,r,o,a,s,d);break;case 1:Ft(n,r);break;case 16:Zt(n),je(r,i);break;default:!function(e,t,n,i,r,o){Zt(e),Xt(t,n,i,r,Pe(e,!0),o),Le(e,n)}(n,i,r,o,a,d)}break;case 1:switch(t){case 2:Kt(i,r,o,a,s,d);break;case 1:break;case 16:je(r,i);break;default:Xt(i,r,o,a,s,d)}break;case 16:switch(t){case 16:!function(e,t,n){e!==t&&(""!==e?n.firstChild.nodeValue=t:je(n,t))}(n,i,r);break;case 2:Bt(r),Kt(i,r,o,a,s,d);break;case 1:Bt(r);break;default:Bt(r),Xt(i,r,o,a,s,d)}break;default:switch(t){case 16:Ht(n),je(r,i);break;case 2:jt(r,l,n),Kt(i,r,o,a,s,d);break;case 1:jt(r,l,n);break;default:var c=0|n.length,u=0|i.length;0===c?u>0&&Xt(i,r,o,a,s,d):0===u?jt(r,l,n):8===t&&8===e?function(e,t,n,i,r,o,a,s,l,d){var c,u,p=o-1,h=a-1,f=0,m=e[f],g=t[f];e:{for(;m.key===g.key;){if(16384&g.flags&&(t[f]=g=Qe(g)),en(m,g,n,i,r,s,d),e[f]=g,++f>p||f>h)break e;m=e[f],g=t[f]}for(m=e[p],g=t[h];m.key===g.key;){if(16384&g.flags&&(t[h]=g=Qe(g)),en(m,g,n,i,r,s,d),e[p]=g,h--,f>--p||f>h)break e;m=e[p],g=t[h]}}if(f>p){if(f<=h)for(u=(c=h+1)<a?Pe(t[c],!0):s;f<=h;)16384&(g=t[f]).flags&&(t[f]=g=Qe(g)),++f,Kt(g,n,i,r,u,d)}else if(f>h)for(;f<=p;)Ft(e[f++],n);else!function(e,t,n,i,r,o,a,s,l,d,c,u,p){var h,f,m,g=0,v=s,y=s,x=o-s+1,b=a-s+1,_=new Int32Array(b+1),w=x===i,E=!1,C=0,T=0;if(r<4||(x|b)<32)for(g=v;g<=o;++g)if(h=e[g],T<b){for(s=y;s<=a;s++)if(f=t[s],h.key===f.key){if(_[s-y]=g+1,w)for(w=!1;v<g;)Ft(e[v++],l);C>s?E=!0:C=s,16384&f.flags&&(t[s]=f=Qe(f)),en(h,f,l,n,d,c,p),++T;break}!w&&s>a&&Ft(h,l)}else w||Ft(h,l);else{var k={};for(g=y;g<=a;++g)k[t[g].key]=g;for(g=v;g<=o;++g)if(h=e[g],T<b)if(void 0!==(s=k[h.key])){if(w)for(w=!1;g>v;)Ft(e[v++],l);_[s-y]=g+1,C>s?E=!0:C=s,16384&(f=t[s]).flags&&(t[s]=f=Qe(f)),en(h,f,l,n,d,c,p),++T}else w||Ft(h,l);else w||Ft(h,l)}if(w)jt(l,u,e),Xt(t,l,n,d,c,p);else if(E){var S=function(e){var t=0,n=0,i=0,r=0,o=0,a=0,s=0,l=e.length;for(l>rn&&(rn=l,Rt=new Int32Array(l),At=new Int32Array(l));n<l;++n)if(0!==(t=e[n])){if(e[i=Rt[r]]<t){At[n]=i,Rt[++r]=n;continue}for(o=0,a=r;o<a;)e[Rt[s=o+a>>1]]<t?o=s+1:a=s;t<e[Rt[o]]&&(o>0&&(At[n]=Rt[o-1]),Rt[o]=n)}o=r+1;var d=new Int32Array(o);for(a=Rt[o-1];o-- >0;)d[o]=a,a=At[a],Rt[o]=0;return d}(_);for(s=S.length-1,g=b-1;g>=0;g--)0===_[g]?(16384&(f=t[C=g+y]).flags&&(t[C]=f=Qe(f)),Kt(f,l,n,d,(m=C+1)<r?Pe(t[m],!0):c,p)):s<0||g!==S[s]?Fe(f=t[C=g+y],l,(m=C+1)<r?Pe(t[m],!0):c):s--}else if(T!==b)for(g=b-1;g>=0;g--)0===_[g]&&(16384&(f=t[C=g+y]).flags&&(t[C]=f=Qe(f)),Kt(f,l,n,d,(m=C+1)<r?Pe(t[m],!0):c,p))}(e,t,i,o,a,p,h,f,n,r,s,l,d)}(n,i,r,o,a,c,u,s,l,d):function(e,t,n,i,r,o,a,s,l){for(var d,c,u=o>a?a:o,p=0;p<u;++p)d=t[p],c=e[p],16384&d.flags&&(d=t[p]=Qe(d)),en(c,d,n,i,r,s,l),e[p]=d;if(o<a)for(p=u;p<a;++p)16384&(d=t[p]).flags&&(d=t[p]=Qe(d)),Kt(d,n,i,r,s,l);else if(o>a)for(p=u;p<o;++p)Ft(e[p],n)}(n,i,r,o,a,c,u,s,d)}}}function nn(e,t,n,i,r,o,a,s,l){var d=e.state,c=e.props,u=Boolean(e.$N),p=Ee(e.shouldComponentUpdate);if(u&&(t=Ze(e,n,t!==d?ke(d,t):t)),a||!p||p&&e.shouldComponentUpdate(n,t,r)){!u&&Ee(e.componentWillUpdate)&&e.componentWillUpdate(n,t,r),e.props=n,e.state=t,e.context=r;var h=null,f=Vt(e,n,r);u&&Ee(e.getSnapshotBeforeUpdate)&&(h=e.getSnapshotBeforeUpdate(c,d)),en(e.$LI,f,i,e.$CX,o,s,l),e.$LI=f,Ee(e.componentDidUpdate)&&function(e,t,n,i,r){r.push((function(){e.componentDidUpdate(t,n,i)}))}(e,c,d,h,l)}else e.props=n,e.state=t,e.context=r}var rn=0;function on(e,t,n,i){void 0===n&&(n=null),void 0===i&&(i=De),function(e,t,n,i){var r=[],o=t.$V;He.v=!0,_e(o)?_e(e)||(16384&e.flags&&(e=Qe(e)),Kt(e,t,i,!1,null,r),t.$V=e,o=e):_e(e)?(Ft(o,t),t.$V=null):(16384&e.flags&&(e=Qe(e)),en(o,e,t,i,!1,null,r),o=t.$V=e),Ue(r),He.v=!1,Ee(n)&&n(),Ee(Be.renderComplete)&&Be.renderComplete(o,t)}(e,t,n,i)}"undefined"!=typeof document&&window.Node&&(Node.prototype.$EV=null,Node.prototype.$V=null);var an=[],sn="undefined"!=typeof Promise?Promise.resolve().then.bind(Promise.resolve()):function(e){window.setTimeout(e,0)},ln=!1;function dn(e,t,n,i){var r=e.$PS;if(Ee(t)&&(t=t(r?ke(e.state,r):e.state,e.props,e.context)),_e(r))e.$PS=t;else for(var o in t)r[o]=t[o];if(e.$BR)Ee(n)&&e.$L.push(n.bind(e));else{if(!He.v&&0===an.length)return pn(e,i),void(Ee(n)&&n.call(e));if(-1===an.indexOf(e)&&an.push(e),i&&(e.$F=!0),ln||(ln=!0,sn(un)),Ee(n)){var a=e.$QU;a||(a=e.$QU=[]),a.push(n)}}}function cn(e){for(var t=e.$QU,n=0;n<t.length;++n)t[n].call(e);e.$QU=null}function un(){var e;for(ln=!1;e=an.shift();)if(!e.$UN){var t=e.$F;e.$F=!1,pn(e,t),e.$QU&&cn(e)}}function pn(e,t){if(t||!e.$BR){var n=e.$PS;e.$PS=null;var i=[];He.v=!0,nn(e,ke(e.state,n),e.props,Pe(e.$LI,!0).parentNode,e.context,e.$SVG,t,null,i),Ue(i),He.v=!1}else e.state=e.$PS,e.$PS=null}var hn=function(e,t){this.state=null,this.$BR=!1,this.$BS=!0,this.$PS=null,this.$LI=null,this.$UN=!1,this.$CX=null,this.$QU=null,this.$N=!1,this.$L=null,this.$SVG=!1,this.$F=!1,this.props=e||De,this.context=t||De};hn.prototype.forceUpdate=function(e){this.$UN||dn(this,{},e,!0)},hn.prototype.setState=function(e,t){this.$UN||this.$BS||dn(this,e,t,!1)},hn.prototype.render=function(e,t,n){return null};var fn=n(3825),mn="compositionstart",gn="KeyboardProcessor",vn=e=>({keyName:(0,fn.EV)(e),key:e.key,code:e.code,ctrl:e.ctrlKey,location:e.location,metaKey:e.metaKey,shift:e.shiftKey,alt:e.altKey,which:e.which,originalEvent:e}),yn=y.Z.inherit({_keydown:(0,fn.V4)("keydown",gn),_compositionStart:(0,fn.V4)(mn,gn),_compositionEnd:(0,fn.V4)("compositionend",gn),ctor:function(e){(e=e||{}).element&&(this._element=(0,r.Z)(e.element)),e.focusTarget&&(this._focusTarget=e.focusTarget),this._handler=e.handler,this._element&&(this._processFunction=e=>{var t=(0,r.Z)(this._focusTarget).toArray(),n=this._focusTarget&&this._focusTarget!==e.target&&!t.includes(e.target),i=this._isComposingJustFinished&&229===e.which||this._isComposing||n;this._isComposingJustFinished=!1,i||this.process(e)},this._toggleProcessingWithContext=this.toggleProcessing.bind(this),l.Z.on(this._element,this._keydown,this._processFunction),l.Z.on(this._element,this._compositionStart,this._toggleProcessingWithContext),l.Z.on(this._element,this._compositionEnd,this._toggleProcessingWithContext))},dispose:function(){this._element&&(l.Z.off(this._element,this._keydown,this._processFunction),l.Z.off(this._element,this._compositionStart,this._toggleProcessingWithContext),l.Z.off(this._element,this._compositionEnd,this._toggleProcessingWithContext)),this._element=void 0,this._handler=void 0},process:function(e){this._handler(vn(e))},toggleProcessing:function(e){var{type:t}=e;this._isComposing=t===mn,this._isComposingJustFinished=!this._isComposing}});yn.createKeyDownOptions=vn;const xn=yn,bn={lockCount:0,lock(){this.lockCount++},callbacks:[],callEffects(){if(this.lockCount--,this.lockCount<0)throw new Error("Unexpected Effect Call");if(0===this.lockCount){const e=this.callbacks;this.callbacks=[],e.forEach((e=>e()))}}},_n=(e,t)=>{if(!(e instanceof Object&&t instanceof Object))return e===t;const n=Object.keys(e),i=Object.keys(t);return n.length===i.length&&!n.some((n=>e[n]!==t[n]))};class wn extends hn{constructor(){super(...arguments),this._pendingContext=this.context}componentWillReceiveProps(e,t){this._pendingContext=null!=t?t:{}}shouldComponentUpdate(e,t){return!_n(this.props,e)||!_n(this.state,t)||!_n(this.context,this._pendingContext)}}class En extends wn{constructor(){super(...arguments),this._effects=[]}createEffects(){return[]}updateEffects(){}componentWillMount(){bn.lock()}componentWillUpdate(e,t,n){bn.lock()}componentDidMount(){bn.callbacks.push((()=>{this._effects=this.createEffects()})),bn.callEffects()}componentDidUpdate(){bn.callbacks.push((()=>this.updateEffects())),bn.callEffects()}destroyEffects(){this._effects.forEach((e=>e.dispose()))}componentWillUnmount(){this.destroyEffects()}}class Cn extends En{constructor(){super(...arguments),this.vDomElement=null}vDomUpdateClasses(){const e=this.vDomElement,t=e.className.length?e.className.split(" "):[],n=t.filter((t=>e.dxClasses.previous.indexOf(t)<0)),i=e.dxClasses.previous.filter((e=>t.indexOf(e)<0));n.forEach((t=>{const n=e.dxClasses.removed.indexOf(t);n>-1?e.dxClasses.removed.splice(n,1):e.dxClasses.added.push(t)})),i.forEach((t=>{const n=e.dxClasses.added.indexOf(t);n>-1?e.dxClasses.added.splice(n,1):e.dxClasses.removed.push(t)}))}componentDidMount(){const e=Pe(this.$LI,!0);this.vDomElement=e,super.componentDidMount(),e.dxClasses=e.dxClasses||{removed:[],added:[],previous:[]},e.dxClasses.previous=(null==e?void 0:e.className.length)?e.className.split(" "):[]}componentDidUpdate(){super.componentDidUpdate();const e=this.vDomElement;null!==e&&(e.dxClasses.added.forEach((t=>e.classList.add(t))),e.dxClasses.removed.forEach((t=>e.classList.remove(t))),e.dxClasses.previous=e.className.length?e.className.split(" "):[])}shouldComponentUpdate(e,t){const n=super.shouldComponentUpdate(e,t);return n&&this.vDomUpdateClasses(),n}}let Tn=0;class kn{constructor(e,t){this.dependency=t,this.effect=e,this.destroy=e()}update(e){const t=this.dependency;e&&(this.dependency=e),e&&!e.some(((e,n)=>t[n]!==e))||(this.dispose(),this.destroy=this.effect())}dispose(){this.destroy&&this.destroy()}}const Sn=()=>new kn((()=>{un()}),[]),Dn="a runtime error occured! Use Inferno in development environment to find the error.";function Rn(e){return null===e}function An(e,t,n,i,r,o){const a=e.childFlags,s=e.children,l=e.props,d=e.flags;if(1!==a){if(2===a)Rn(n)?Kt(s,t,i,r,null,o):n=(n=Mn(s,t,n,i,r,o))?n.nextSibling:null;else if(16===a)Rn(n)?t.appendChild(document.createTextNode(s)):1!==t.childNodes.length||3!==n.nodeType?t.textContent=s:n.nodeValue!==s&&(n.nodeValue=s),n=null;else if(12&a){let e=!1;for(let a=0,l=s.length;a<l;++a){const l=s[a];Rn(n)||e&&(16&l.flags)>0?Kt(l,t,i,r,n,o):n=(n=Mn(l,t,n,i,r,o))?n.nextSibling:null,e=(16&l.flags)>0}}if(0==(8192&d)){let e=null;for(;n;)e=n.nextSibling,t.removeChild(n),n=e}}else Rn(t.firstChild)||function(e,t){return Boolean(t&&t.dangerouslySetInnerHTML&&t.dangerouslySetInnerHTML.__html&&function(e,t){const n=document.createElement("i");return n.innerHTML=t,n.innerHTML===e.innerHTML}(e,t.dangerouslySetInnerHTML.__html))}(t,l)||(t.textContent="",448&d&&(t.defaultValue=""))}function On(e,t,n){if(3!==n.nodeType)t.replaceChild(e.dom=document.createTextNode(e.children),n);else{const t=e.children;n.nodeValue!==t&&(n.nodeValue=t),e.dom=n}return e.dom}function Mn(e,t,n,i,r,o){const a=e.flags|=16384;return 14&a?function(e,t,n,i,r,o,a){const s=e.type,l=e.ref,d=e.props||De;let c;if(o){const o=Wt(e,s,d,i,r,a);c=Mn(o.$LI,t,n,o.$CX,r,a),Jt(l,o,a)}else{const o=it($t(e,i));c=Mn(o,t,n,i,r,a),e.children=o,Qt(e,a)}return c}(e,t,n,i,r,(4&a)>0,o):481&a?function(e,t,n,i,r,o){const a=e.props,s=e.className,l=e.flags,d=e.ref;return r=r||(32&l)>0,1!==n.nodeType?(Yt(e,null,i,r,null,o),t.replaceChild(e.dom,n)):(e.dom=n,An(e,n,n.firstChild,i,r,o),Rn(a)||Gt(e,l,a,n,r),null==s?""!==n.className&&n.removeAttribute("class"):r?n.setAttribute("class",s):n.className=s,Lt(d,n,o)),e.dom}(e,t,n,i,r,o):16&a?On(e,t,n):512&a?e.dom=n:8192&a?function(e,t,n,i,r,o){const a=e.children;return 2===e.childFlags?(On(a,t,n),a.dom):(An(e,t,n,i,r,o),function(e){let t,n;for(;e;){if(t=e.flags,2033&t)return e.dom;n=e.children,e=8192&t?2===e.childFlags?n:n[n.length-1]:4&t?n.$LI:n}return null}(a[a.length-1]))}(e,t,n,i,r,o):(function(e){throw e||(e=Dn),new Error(`Inferno Error: ${e}`)}(),null)}function Nn(e){return null==e}function Un(e){return void 0===e}var In={onComponentDidMount:1,onComponentDidUpdate:1,onComponentShouldUpdate:1,onComponentWillMount:1,onComponentWillUnmount:1,onComponentWillUpdate:1};function Pn(e,t,n){var i,r,o=arguments,a=null,s=null,l=null,d=0,c=arguments.length-2;if(1===c)i=n;else if(c>1)for(i=[];c-- >0;)i[c]=o[c+2];if("string"!=typeof e){if(d=2,Un(i)||(t||(t={}),t.children=i),!Nn(t))for(var u in r={},t)"key"===u?s=t.key:"ref"===u?a=t.ref:1===In[u]?(a||(a={}),a[u]=t[u]):r[u]=t[u];return qe(d,e,r,s,a)}if(d=function(e){switch(e){case"svg":return 32;case"input":return 64;case"select":return 256;case"textarea":return 128;case Re:return 8192;default:return 1}}(e),!Nn(t))for(var p in r={},t)"className"===p||"class"===p?l=t[p]:"key"===p?s=t.key:"children"===p&&Un(i)?i=t.children:"ref"===p?a=t.ref:("contenteditable"===p&&(d|=4096),r[p]=t[p]);return 8192&d?Xe(1===c?[i]:i,0,s):Ke(d,e,l,i,0,r,s,a)}const Ln=new Set(["animationIterationCount","borderImageOutset","borderImageSlice","border-imageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","fillOpacity","flex","flexGrow","flexNegative","flexOrder","flexPositive","flexShrink","floodOpacity","fontWeight","gridColumn","gridRow","lineClamp","lineHeight","opacity","order","orphans","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","tabSize","widows","zIndex","zoom"]),Fn=e=>"number"==typeof e||!Number.isNaN(Number(e)),Zn=(e,t)=>Ln.has(e)?t:`${t}px`,Hn=/[A-Z]/g,Bn=e=>e.replace(Hn,"-$&").toLowerCase();function jn(e){if(e instanceof Object)return Object.entries(e).reduce(((e,[t,n])=>(e[Bn(t)]=Fn(n)?Zn(t,n):n,e)),{})}var zn=n(1389),Gn=e=>{var{parentNode:t}=e;t&&((0,s.nK)(e),t.$V=e.$V,on(null,t),t.appendChild(e),e.innerHTML="",delete t.$V),delete e.$V};const Vn=(0,T.Z)({createElement:(e,t)=>Pn(e,t),remove:Gn,onAfterRender:()=>{bn.callEffects()},onPreRender:()=>{bn.lock()},render:(e,t,n,i)=>{if(i)on(Pn(e,t),n);else{var{parentNode:r}=n,o=null==n?void 0:n.nextSibling,a=zn.Z.createElement("div");a.appendChild(n);var s=zn.Z.createDocumentFragment().appendChild(a);!!n.$V&&Gn(n),function(e,t,n){let i=t.firstChild;if(Rn(i))on(e,t,n);else{const n=[];for(null!==(r=e)&&!1!==r&&!0!==r&&void 0!==r&&(i=Mn(e,t,i,{},!1,n));i&&(i=i.nextSibling);)t.removeChild(i);if(n.length>0){let e;for(;void 0!==(e=n.shift());)e()}}var r;t.$V=e}(Pn(e,t),s),n.$V=s.$V,r&&r.insertBefore(n,o)}}});var Wn=n(8274),$n=n(268),Kn=n(8714),qn=function(){var e,t=(0,w.Z)(),n=t.add,i=t.remove;if(!(0,Wn.Ym)())return t;var r,o=function(){var e=(0,Wn.Jj)();return{width:e.innerWidth,height:e.innerHeight}},a=function(){var n,i=o();i.width===e.width&&i.height===e.height||(i.width===e.width&&(n="height"),i.height===e.height&&(n="width"),e=i,t.fire(n))},s=(0,Kn.Z)((function(){e=o()}));return t.add=function(){var e=n.apply(t,arguments);return s(),$n.Z.add((function(){!r&&t.has()&&(r=zn.Z.listen((0,Wn.Jj)(),"resize",a))})),e},t.remove=function(){var e=i.apply(t,arguments);return!t.has()&&r&&(r(),r=void 0),e},t}();const Yn=qn;var Xn,Jn=n(8852),Qn=n(57),ei=(0,Wn.Jj)(),ti=$n.Z.add,ni=(0,w.Z)(),ii=(0,r.Z)(),ri=function(e){if(!arguments.length)return Xn;var t=(0,r.Z)(e);ii=t;var n=!!t.length,i=ri();Xn=n?t:(0,r.Z)("body"),ni.fire(n?ri():(0,r.Z)(),i)};ti((function(){ri(".dx-viewport")}));var oi=(0,Wn.jW)(),ai=(0,Wn.Jj)(),si={iPhone:"iPhone",iPhone5:"iPhone",iPhone6:"iPhone",iPhone6plus:"iPhone",iPad:"iPad",iPadMini:"iPad Mini",androidPhone:"Android Mobile",androidTablet:"Android",msSurface:"Windows ARM Tablet PC",desktop:"desktop"},li={deviceType:"desktop",platform:"generic",version:[],phone:!1,tablet:!1,android:!1,ios:!1,generic:!0,grade:"A",mac:!1},di={generic(e){var t=/windows phone/i.test(e)||e.match(/WPDesktop/),n=!t&&/Windows(.*)arm(.*)Tablet PC/i.test(e),i=!t&&!n&&/msapphost/i.test(e),r=/((intel|ppc) mac os x)/.test(e.toLowerCase());if(t||n||i||r)return{deviceType:t?"phone":n?"tablet":"desktop",platform:"generic",version:[],grade:"A",mac:r}},ios(e){if(/ip(hone|od|ad)/i.test(e)){var t=/ip(hone|od)/i.test(e),n=e.match(/os (\d+)_(\d+)_?(\d+)?/i);return{deviceType:t?"phone":"tablet",platform:"ios",version:n?[parseInt(n[1],10),parseInt(n[2],10),parseInt(n[3]||0,10)]:[],grade:480===ai.screen.height?"B":"A"}}},android(e){if(/android|htc_|silk/i.test(e)){var t=/mobile/i.test(e),n=e.match(/android (\d+)\.?(\d+)?\.?(\d+)?/i),i=n?[parseInt(n[1],10),parseInt(n[2]||0,10),parseInt(n[3]||0,10)]:[];return{deviceType:t?"phone":"tablet",platform:"android",version:i,grade:i.length>1&&(i[0]<4||4===i[0]&&i[1]<4)?"B":"A"}}}},ci=new class{constructor(e){this._window=(null==e?void 0:e.window)||ai,this._realDevice=this._getDevice(),this._currentDevice=void 0,this._currentOrientation=void 0,this._eventsStrategy=new E(this),this.changed=(0,w.Z)(),(0,Wn.Ym)()&&($n.Z.add(this._recalculateOrientation.bind(this)),Yn.add(this._recalculateOrientation.bind(this)))}current(e){if(e)return this._currentDevice=this._getDevice(e),this._forced=!0,void this.changed.fire();if(!this._currentDevice){e=void 0;try{e=this._getDeviceOrNameFromWindowScope()}catch(t){e=this._getDeviceNameFromSessionStorage()}finally{e||(e=this._getDeviceNameFromSessionStorage()),e&&(this._forced=!0)}this._currentDevice=this._getDevice(e)}return this._currentDevice}real(e){return(0,x.l)({},this._realDevice)}orientation(){return this._currentOrientation}isForced(){return this._forced}isRippleEmulator(){return!!this._window.tinyHippos}_getCssClasses(e){var t=[],n=this._realDevice;return(e=e||this.current()).deviceType&&(t.push("dx-device-".concat(e.deviceType)),"desktop"!==e.deviceType&&t.push("dx-device-mobile")),t.push("dx-device-".concat(n.platform)),n.version&&n.version.length&&t.push("dx-device-".concat(n.platform,"-").concat(n.version[0])),this.isSimulator()&&t.push("dx-simulator"),(0,F.Z)().rtlEnabled&&t.push("dx-rtl"),t}attachCssClasses(e,t){this._deviceClasses=this._getCssClasses(t).join(" "),(0,r.Z)(e).addClass(this._deviceClasses)}detachCssClasses(e){(0,r.Z)(e).removeClass(this._deviceClasses)}isSimulator(){try{return this._isSimulator||(0,Wn.Ym)()&&this._window.top!==this._window.self&&this._window.top["dx-force-device"]||this.isRippleEmulator()}catch(e){return!1}}forceSimulator(){this._isSimulator=!0}_getDevice(e){if("genericPhone"===e&&(e={deviceType:"phone",platform:"generic",generic:!0}),(0,d.PO)(e))return this._fromConfig(e);var t;if(e){if(!(t=si[e]))throw a.Z.Error("E0005")}else t=oi.userAgent;return this._fromUA(t)}_getDeviceOrNameFromWindowScope(){var e;return(0,Wn.Ym)()&&(this._window.top["dx-force-device-object"]||this._window.top["dx-force-device"])&&(e=this._window.top["dx-force-device-object"]||this._window.top["dx-force-device"]),e}_getDeviceNameFromSessionStorage(){var e=function(){var e;try{e=ei.sessionStorage}catch(e){}return e}();if(e){var t=e.getItem("dx-force-device");try{return JSON.parse(t)}catch(e){return t}}}_fromConfig(e){var t=(0,x.l)({},li,this._currentDevice,e),n={phone:"phone"===t.deviceType,tablet:"tablet"===t.deviceType,android:"android"===t.platform,ios:"ios"===t.platform,generic:"generic"===t.platform};return(0,x.l)(t,n)}_fromUA(e){var t;return(0,b.S6)(di,((n,i)=>!(t=i(e)))),t?this._fromConfig(t):li}_changeOrientation(){var e=(0,r.Z)(this._window),t=(0,Qn.Cr)(e)>(0,Qn.dz)(e)?"portrait":"landscape";this._currentOrientation!==t&&(this._currentOrientation=t,this._eventsStrategy.fireEvent("orientationChanged",[{orientation:t}]))}_recalculateOrientation(){var e=(0,Qn.dz)(this._window);this._currentWidth!==e&&(this._currentWidth=e,this._changeOrientation())}on(e,t){return this._eventsStrategy.on(e,t),this}off(e,t){return this._eventsStrategy.off(e,t),this}},ui=ri();ui&&ci.attachCssClasses(ui),ni.add(((e,t)=>{ci.detachCssClasses(t),ci.attachCssClasses(e)}));const pi=ci;var hi={},fi=e=>{var t=pi.current();return e.reduce(((e,n)=>{var{device:i,options:r}=n,o=i||{};return((0,d.mf)(o)?o(t):mi(t,o))&&(0,x.l)(!0,e,r),e}),{})},mi=(e,t)=>(0,d.Qr)(t)||(0,C.U3)(e,[t]).length>0,gi=e=>e.substr(e.lastIndexOf(".")+1),vi=e=>e.substr(0,e.lastIndexOf(".")),yi={},xi={};class bi{constructor(e,t){this._options=e,this._optionsByReference=t,this._changingCallback,this._changedCallback,this._namePreparedCallbacks}_setByReference(e,t){for(var n in(0,x.l)(!0,e,t),this._optionsByReference)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}_setPreparedValue(e,t,n,i){var r,o,a=this.get(this._options,e,!1);if(r=a,o=t,r=(0,Jn.Ex)(r,!0),o=(0,Jn.Ex)(o,!0),!(r&&o&&(0,d.ZU)(r)&&(0,d.ZU)(o)?o.is(r):r!=r&&o!=o||(0===r&&0===o?function(e,t){return 1/e==1/t}(r,o):(null===r||"object"!=typeof r||zn.Z.isElementNode(r))&&r===o))){var s=(0,Jn.Zw)(e);!i&&this._changingCallback(e,a,t),xi[e]=xi[e]||(0,Jn.OM)(e),xi[e](this._options,t,{functionsAsIs:!0,merge:(0,d.$K)(n)?n:!this._optionsByReference[e],unwrapObservables:s.length>1&&!!this._optionsByReference[s[0]]}),!i&&this._changedCallback(e,t,a)}}_prepareRelevantNames(e,t,n,i){if((0,d.PO)(n))for(var r in n)this._prepareRelevantNames(e,"".concat(t,".").concat(r),n[r]);this._namePreparedCallbacks(e,t,n,i)}get(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._options,t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return yi[t]=yi[t]||(0,Jn.vb)(t),yi[t](e,{functionsAsIs:!0,unwrapObservables:n})}set(e,t,n,i){for(var r in e=((e,t)=>"string"!=typeof e?e:{[e]:t})(e,t),e)this._prepareRelevantNames(e,r,e[r],i);for(var o in e)this._setPreparedValue(o,e[o],n,i)}onRelevantNamesPrepared(e){this._namePreparedCallbacks=e}onChanging(e){this._changingCallback=e}onChanged(e){this._changedCallback=e}dispose(){this._changingCallback=C.ZT,this._changedCallback=C.ZT}}class _i{constructor(e,t,n,i){this._deprecatedCallback,this._startChangeCallback,this._endChangeCallback,this._default=t,this._deprecated=i,this._deprecatedNames=[],this._initDeprecatedNames(),this._optionManager=new bi(e,n),this._optionManager.onRelevantNamesPrepared(((e,t,n,i)=>this._setRelevantNames(e,t,n,i))),this._cachedOptions={},this._rules=[]}set _initial(e){this._initialOptions=e}get _initial(){if(!this._initialOptions){var e=this._getByRules(this.silent("defaultOptionsRules"));this._initialOptions=this._default,this._optionManager._setByReference(this._initialOptions,e)}return this._initialOptions}_initDeprecatedNames(){for(var e in this._deprecated)this._deprecatedNames.push(e)}_getByRules(e){return e=Array.isArray(e)?this._rules.concat(e):this._rules,fi(e)}_notifyDeprecated(e){var t=this._deprecated[e];t&&this._deprecatedCallback(e,t)}_setRelevantNames(e,t,n,i){if(t){var r=this._normalizeName(t,i);r&&r!==t&&(this._setField(e,r,n),this._clearField(e,t))}}_setField(e,t,n){var i="",r=null;do{i=i?".".concat(i):"",i=gi(t)+i,r=(t=vi(t))?this._optionManager.get(e,t,!1):e}while(!r);r[i]=n}_clearField(e,t){delete e[t];var n=vi(t),i=n?this._optionManager.get(e,n,!1):e;i&&delete i[gi(t)]}_normalizeName(e,t){if(this._deprecatedNames.length&&e)for(var n=0;n<this._deprecatedNames.length;n++)if(this._deprecatedNames[n]===e){var i=this._deprecated[e];if(i)return!t&&this._notifyDeprecated(e),i.alias||e}return e}addRules(e){this._rules=e.concat(this._rules)}applyRules(e){var t=this._getByRules(e);this.silent(t)}dispose(){this._deprecatedCallback=C.ZT,this._startChangeCallback=C.ZT,this._endChangeCallback=C.ZT,this._optionManager.dispose()}onChanging(e){this._optionManager.onChanging(e)}onChanged(e){this._optionManager.onChanged(e)}onDeprecated(e){this._deprecatedCallback=e}onStartChange(e){this._startChangeCallback=e}onEndChange(e){this._endChangeCallback=e}isInitial(e){var t=this.silent(e),n=this.initial(e);return(0,d.mf)(t)&&(0,d.mf)(n)?t.toString()===n.toString():(0,C.bY)(t,n)}initial(e){return function(e,t){return hi[t]=hi[t]||(0,Jn.vb)(t),hi[t](e,{functionsAsIs:!0})}(this._initial,e)}option(e,t){if(arguments.length<2&&"object"!==(0,d.dt)(e))return this._optionManager.get(void 0,this._normalizeName(e));this._startChangeCallback();try{this._optionManager.set(e,t)}finally{this._endChangeCallback()}}silent(e,t){if(arguments.length<2&&"object"!==(0,d.dt)(e))return this._optionManager.get(void 0,e,void 0,!0);this._optionManager.set(e,t,void 0,!0)}reset(e){if(e){var t=(0,Jn.Zw)(e).reduce(((e,t)=>e?e[t]:this.initial(t)),null),n=(0,d.Kn)(t)?(0,v.Z)({},t):t;this._optionManager.set(e,n,!1)}}getAliasesByName(e){return Object.keys(this._deprecated).filter((t=>e===this._deprecated[t].alias))}isDeprecated(e){return Object.prototype.hasOwnProperty.call(this._deprecated,e)}cache(e,t){if(arguments.length<2)return this._cachedOptions[e];this._cachedOptions[e]=(0,x.l)(this._cachedOptions[e],t)}}class wi{constructor(e,t){t=t||{},this._action=e,this._context=t.context||(0,Wn.Jj)(),this._beforeExecute=t.beforeExecute,this._afterExecute=t.afterExecute,this._component=t.component,this._validatingTargetName=t.validatingTargetName;var n=this._excludeValidators={};if(t.excludeValidators)for(var i=0;i<t.excludeValidators.length;i++)n[t.excludeValidators[i]]=!0}execute(){var e={action:this._action,args:Array.prototype.slice.call(arguments),context:this._context,component:this._component,validatingTargetName:this._validatingTargetName,cancel:!1,handled:!1},t=this._beforeExecute,n=this._afterExecute,i=e.args[0]||{};if(this._validateAction(e)&&(null==t||t.call(this._context,e),!e.cancel)){var r=this._executeAction(e);if(!i.cancel)return null==n||n.call(this._context,e),r}}_validateAction(e){var t=this._excludeValidators,{executors:n}=wi;for(var i in n)if(!t[i]){var r,o=n[i];if(null===(r=o.validate)||void 0===r||r.call(o,e),e.cancel)return!1}return!0}_executeAction(e){var t,{executors:n}=wi;for(var i in n){var r,o=n[i];if(null===(r=o.execute)||void 0===r||r.call(o,e),e.handled){t=e.result;break}}return t}static registerExecutor(e,t){(0,d.PO)(e)?(0,b.S6)(e,wi.registerExecutor):wi.executors[e]=t}static unregisterExecutor(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];(0,b.S6)(t,(function(){delete wi.executors[this]}))}}wi.executors={};var Ei=e=>t=>{if(t.args.length){var n=t.args[0],i=n[t.validatingTargetName]||n.element;i&&e((0,r.Z)(i))&&(t.cancel=!0)}};wi.registerExecutor({disabled:{validate:Ei((e=>e.is(".dx-state-disabled, .dx-state-disabled *")))},readOnly:{validate:Ei((e=>e.is(".dx-state-readonly, .dx-state-readonly *:not(.dx-state-independent)")))},undefined:{execute:e=>{e.action||(e.result=void 0,e.handled=!0)}},func:{execute:e=>{(0,d.mf)(e.action)&&(e.result=e.action.call(e.context,e.args[0]),e.handled=!0)}}});class Ci{constructor(){this._postponedOperations={}}add(e,t,n){if(e in this._postponedOperations)n&&this._postponedOperations[e].promises.push(n);else{var i=new de.BH;this._postponedOperations[e]={fn:t,completePromise:i,promises:n?[n]:[]}}return this._postponedOperations[e].completePromise.promise()}callPostponedOperations(){for(var e in this._postponedOperations){var t=this._postponedOperations[e];(0,d.$K)(t)&&(t.promises&&t.promises.length?(0,de.gx)(...t.promises).done(t.fn).then(t.completePromise.resolve):t.fn().done(t.completePromise.resolve))}this._postponedOperations={}}}var Ti=e=>e.charAt(2).toLowerCase()+e.substr(3),ki=y.Z.inherit({_setDeprecatedOptions(){this._deprecatedOptions={}},_getDeprecatedOptions(){return this._deprecatedOptions},_getDefaultOptions:()=>({onInitialized:null,onOptionChanged:null,onDisposing:null,defaultOptionsRules:null}),_defaultOptionsRules:()=>[],_setOptionsByDevice(e){this._options.applyRules(e)},_convertRulesToOptions:e=>fi(e),_isInitialOptionValue(e){return this._options.isInitial(e)},_setOptionsByReference(){this._optionsByReference={}},_getOptionsByReference(){return this._optionsByReference},ctor(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{_optionChangedCallbacks:t,_disposingCallbacks:n}=e;this.NAME=g(this.constructor),this._eventsStrategy=E.create(this,e.eventsStrategy),this._updateLockCount=0,this._optionChangedCallbacks=t||(0,w.Z)(),this._disposingCallbacks=n||(0,w.Z)(),this.postponedOperations=new Ci,this._createOptions(e)},_createOptions(e){this.beginUpdate();try{this._setOptionsByReference(),this._setDeprecatedOptions(),this._options=new _i(this._getDefaultOptions(),this._getDefaultOptions(),this._getOptionsByReference(),this._getDeprecatedOptions()),this._options.onChanging(((e,t,n)=>this._initialized&&this._optionChanging(e,t,n))),this._options.onDeprecated(((e,t)=>this._logDeprecatedOptionWarning(e,t))),this._options.onChanged(((e,t,n)=>this._notifyOptionChanged(e,t,n))),this._options.onStartChange((()=>this.beginUpdate())),this._options.onEndChange((()=>this.endUpdate())),this._options.addRules(this._defaultOptionsRules()),e&&e.onInitializing&&e.onInitializing.apply(this,[e]),this._setOptionsByDevice(e.defaultOptionsRules),this._initOptions(e)}finally{this.endUpdate()}},_initOptions(e){this.option(e)},_init(){this._createOptionChangedAction(),this.on("disposing",(e=>{this._disposingCallbacks.fireWith(this,[e])}))},_logDeprecatedOptionWarning(e,t){var n=t.message||"Use the '".concat(t.alias,"' option instead");a.Z.log("W0001",this.NAME,e,t.since,n)},_logDeprecatedComponentWarning(e,t){a.Z.log("W0000",this.NAME,e,"Use the '".concat(t,"' widget instead"))},_createOptionChangedAction(){this._optionChangedAction=this._createActionByOption("onOptionChanged",{excludeValidators:["disabled","readOnly"]})},_createDisposingAction(){this._disposingAction=this._createActionByOption("onDisposing",{excludeValidators:["disabled","readOnly"]})},_optionChanged(e){switch(e.name){case"onDisposing":case"onInitialized":break;case"onOptionChanged":this._createOptionChangedAction()}},_dispose(){this._optionChangedCallbacks.empty(),this._createDisposingAction(),this._disposingAction(),this._eventsStrategy.dispose(),this._options.dispose(),this._disposed=!0},_lockUpdate(){this._updateLockCount++},_unlockUpdate(){this._updateLockCount=Math.max(this._updateLockCount-1,0)},_isUpdateAllowed(){return 0===this._updateLockCount},_isInitializingRequired(){return!this._initializing&&!this._initialized},isInitialized(){return this._initialized},_commitUpdate(){this.postponedOperations.callPostponedOperations(),this._isInitializingRequired()&&this._initializeComponent()},_initializeComponent(){this._initializing=!0;try{this._init()}finally{this._initializing=!1,this._lockUpdate(),this._createActionByOption("onInitialized",{excludeValidators:["disabled","readOnly"]})(),this._unlockUpdate(),this._initialized=!0}},instance(){return this},beginUpdate:function(){this._lockUpdate()},endUpdate:function(){this._unlockUpdate(),this._isUpdateAllowed()&&this._commitUpdate()},_optionChanging:C.ZT,_notifyOptionChanged(e,t,n){if(this._initialized)for(var i=[e].concat(this._options.getAliasesByName(e)),r=0;r<i.length;r++){var o=i[r],a={name:(0,Jn.Zw)(o)[0],fullName:o,value:t,previousValue:n};0!==o.indexOf("_",0)&&(this._optionChangedCallbacks.fireWith(this,[(0,x.l)(this._defaultActionArgs(),a)]),this._optionChangedAction((0,x.l)({},a))),this._disposed||this._cancelOptionChange===o||this._optionChanged(a)}},initialOption(e){return this._options.initial(e)},_defaultActionConfig(){return{context:this,component:this}},_defaultActionArgs(){return{component:this}},_createAction(e,t){var n;return i=>((0,d.$K)(i)||(i={}),(0,d.PO)(i)||(i={actionValue:i}),(n=n||new wi(e,(0,x.l)(t,this._defaultActionConfig()))).execute.call(n,(0,x.l)(i,this._defaultActionArgs())))},_createActionByOption(e,t){var n,i,r,o=this,s=function(){if(!i){if(t=t||{},"string"!=typeof e)throw a.Z.Error("E0008");0===e.indexOf("on")&&(i=Ti(e)),r=o.option(e)}if(n||r||t.beforeExecute||t.afterExecute||o._eventsStrategy.hasEvent(i)){if(!n){var s=t.beforeExecute;t.beforeExecute=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];s&&s.apply(o,t),o._eventsStrategy.fireEvent(i,t[0].args)},n=o._createAction(r,t)}for(var l=arguments.length,d=new Array(l),c=0;c<l;c++)d[c]=arguments[c];return(0,F.Z)().wrapActionsBeforeExecute?((o.option("beforeActionExecute")||C.ZT)(o,n,t)||n).apply(o,d):n.apply(o,d)}};return(0,F.Z)().wrapActionsBeforeExecute?s:(this.option("onActionCreated")||C.ZT)(this,s,t)||s},on(e,t){return this._eventsStrategy.on(e,t),this},off(e,t){return this._eventsStrategy.off(e,t),this},hasActionSubscription:function(e){return!!this._options.silent(e)||this._eventsStrategy.hasEvent(Ti(e))},isOptionDeprecated(e){return this._options.isDeprecated(e)},_setOptionWithoutOptionChange(e,t){this._cancelOptionChange=e,this.option(e,t),this._cancelOptionChange=!1},_getOptionValue(e,t){var n=this.option(e);return(0,d.mf)(n)?n.bind(t)():n},option(){return this._options.option(...arguments)},resetOption(e){this.beginUpdate(),this._options.reset(e),this.endUpdate()}}),Si=(0,Wn.Jj)(),Di=()=>{var e,t=zn.Z.getActiveElement();t&&t!==zn.Z.getBody()&&(null===(e=t.blur)||void 0===e||e.call(t))},Ri=e=>{var t=(e=(0,r.Z)(e)).length&&e.filter((function(){var e=(0,r.Z)(this);return e.is("script[type]")&&e.attr("type").indexOf("script")<0}));return t.length?t.eq(0).html():(e=(0,r.Z)("<div>").append(e)).html()},Ai=e=>{var t=(0,d.$K)(e)&&(e.nodeType||(0,d.ZU)(e))?(0,r.Z)(e):(0,r.Z)("<div>").html(e).contents();return 1===t.length&&(t.is("script")?t=Ai(t.html().trim()):t.is("table")&&(t=t.children("tbody").contents())),t},Oi=(e,t)=>!!t&&(zn.Z.isTextNode(t)&&(t=t.parentNode),zn.Z.isDocument(e)?e.documentElement.contains(t):(0,d.FJ)(e)?Oi(e.document,t):e.contains?e.contains(t):!!(t.compareDocumentPosition(e)&t.DOCUMENT_POSITION_CONTAINS)),Mi=function(e){return function(t){for(var n=(0,r.Z)(t||"body"),i=n.filter(".dx-visibility-change-handler").add(n.find(".dx-visibility-change-handler")),o=0;o<i.length;o++)l.Z.triggerHandler(i[o],e)}},Ni=Mi("dxshown"),Ui=(Mi("dxhiding"),Mi("dxresize"),(0,w.Z)({syncStrategy:!0}));class Ii{render(e){var t,n=(e=e||{}).onRendered;return delete e.onRendered,t=e.renovated&&e.transclude&&this._element?(0,r.Z)("<div>").append(this._element).contents():this._renderCore(e),this._ensureResultInContainer(t,e.container),Ui.fire(t,e.container),n&&n(),t}_ensureResultInContainer(e,t){if(t){var n=(0,r.Z)(t),i=Oi(n.get(0),e.get(0));n.append(e),i||zn.Z.getBody().contains(n.get(0))&&Ni(e)}}_renderCore(){throw a.Z.Error("E0001")}}class Pi extends Ii{constructor(e){super(),this._render=e}_renderCore(e){return Ai(this._render(e))}}class Li extends Ii{_renderCore(){return(0,r.Z)()}}class Fi extends Ii{constructor(e){super(),this.name=e}}var Zi,Hi={};function Bi(e,t){Hi[e]=t}function ji(){return Zi}Bi("jquery-tmpl",{compile:e=>Ri(e),render:(e,t)=>jQuery.tmpl(e,t)}),Bi("jsrender",{compile:e=>(jQuery||jsrender).templates(Ri(e)),render:(e,t)=>e.render(t)}),Bi("mustache",{compile:e=>Ri(e),render:(e,t)=>Mustache.render(e,t)}),Bi("hogan",{compile:e=>Hogan.compile(Ri(e)),render:(e,t)=>e.render(t)}),Bi("underscore",{compile:e=>_.template(Ri(e)),render:(e,t)=>e(t)}),Bi("handlebars",{compile:e=>Handlebars.compile(Ri(e)),render:(e,t)=>e(t)}),Bi("doT",{compile:e=>doT.template(Ri(e)),render:(e,t)=>e(t)}),Bi("default",{compile:e=>Ai(e),render:(e,t,n)=>e.clone()}),function(e){if((0,d.HD)(e)){if(!(Zi=Hi[e]))throw a.Z.Error("E0020",e)}else Zi=e}("default");class zi extends Ii{constructor(e){super(),this._element=e}_renderCore(e){var t=e.transclude;return t||this._compiledTemplate||(this._compiledTemplate=ji().compile(this._element)),(0,r.Z)("<div>").append(t?this._element:ji().render(this._compiledTemplate,e.model,e.index)).contents()}source(){return(0,r.Z)(this._element).clone()}}n(3370);var Gi=e=>{var t=e.render.bind(e);return(0,x.l)({},e,{render(e){var n=t(e);return e&&e.onRendered&&e.onRendered(),n}})},Vi=e=>(0,d.ZU)(e)&&e[0]||e,Wi=e=>new zi(e),$i=(e,t,n,i,o,a)=>null==e?new Li:e instanceof Fi?a[e.name]:e instanceof Ii?e:(0,d.mf)(e.render)&&!(0,d.ZU)(e)?i?e:Gi(e):e.nodeType||(0,d.ZU)(e)?t((0,r.Z)(e)):((e,t,n,i)=>{var r=null;return i&&-1!==i.indexOf(e)||!(r=t[e])||r instanceof Ii||n||(r=Gi(r)),r})(e,n,i,o)||a[e]||t(e),Ki=new Pi((e=>{var{model:t,parent:n}=e,i=t.widget;if(!i)return(0,r.Z)();var o=(0,r.Z)("<div>"),a=t.options||{};return n?n._createComponent(o,i,a):o[i](a),o}));class qi{constructor(e,t){this._tempTemplates=[],this._defaultTemplates={},this._anonymousTemplateName=t||"template",this._createElement=e||Wi,this._createTemplateIfNeeded=this._createTemplateIfNeeded.bind(this)}static createDefaultOptions(){return{integrationOptions:{watchMethod:function(e,t){return(arguments.length>2&&void 0!==arguments[2]?arguments[2]:{}).skipImmediate||t(e()),C.ZT},templates:{"dx-polymorph-widget":Ki},useDeferUpdateForTemplates:!0}}}get anonymousTemplateName(){return this._anonymousTemplateName}addDefaultTemplates(e){this._defaultTemplates=(0,x.l)({},this._defaultTemplates,e)}dispose(){this._tempTemplates.forEach((e=>{e.template.dispose&&e.template.dispose()})),this._tempTemplates=[]}extractTemplates(e){return{templates:this._extractTemplates(e),anonymousTemplateMeta:this._extractAnonymousTemplate(e)}}_extractTemplates(e){var t=((e,t)=>{var n=(0,r.Z)(e).contents().filter("[".concat("data-options",'*="').concat(t,'"]'));return[].slice.call(n).map((e=>{var n=(0,r.Z)(e).attr("data-options")||"";return{element:e,options:(0,F.Z)().optionsParser(n)[t]}})).filter((e=>!!e.options))})(e,"dxTemplate"),n=(e=>{var t,n=(t=e=>e.options.name,e.reduce(((e,n)=>{var i,r=t(n);return e[r]=null!==(i=e[r])&&void 0!==i?i:[],e[r].push(n),e}),{}));if(n[void 0])throw a.Z.Error("E0023");var i={};return Object.keys(n).forEach((e=>{var t,r=null===(t=(0,C.U3)(pi.current(),n[e],(e=>e.options))[0])||void 0===t?void 0:t.element;r&&(i[e]=r)})),i})(t);return t.forEach((e=>{var{element:t,options:{name:i}}=e;t===n[i]?(0,r.Z)(t).addClass("dx-template-wrapper").detach():(0,r.Z)(t).remove()})),Object.keys(n).map((e=>({name:e,template:this._createTemplate(n[e])})))}_extractAnonymousTemplate(e){var t=e.contents().detach();return t.filter(((e,t)=>{var n=3===t.nodeType,i=(0,r.Z)(t).text().trim().length<1;return!(n&&i)})).length>0?{template:this._createTemplate(t),name:this._anonymousTemplateName}:{}}_createTemplateIfNeeded(e){var t=this._tempTemplates.filter((t=>t.source===Vi(e)))[0];if(t)return t.template;var n=this._createTemplate(e);return this._tempTemplates.push({template:n,source:Vi(e)}),n}_createTemplate(e){return this._createElement((e=>"string"==typeof e?Ai(e):e)(e))}getTemplate(e,t,n,i){var{isAsyncTemplate:o,skipTemplates:a}=n;return(0,d.mf)(e)?new Pi((n=>{var s=e.apply(i,(e=>{var t=[];return"model"in e&&t.push(e.model),"index"in e&&t.push(e.index),t.push(e.container),t})(n));if(!(0,d.$K)(s))return new Li;var l=!1,c=$i(s,(e=>e.nodeType||(0,d.ZU)(e)&&!(0,r.Z)(e).is("script")?new Pi((()=>e)):(l=!0,this._createTemplate(e))),t,o,a,this._defaultTemplates),u=c.render(n);return l&&c.dispose&&c.dispose(),u})):$i(e,this._createTemplateIfNeeded,t,o,a,this._defaultTemplates)}}var Yi=n(9163),Xi=n(1965);function Ji(e,t){return t?(0,fn.V4)(e,t):e}var Qi=function(e,t){var{namespace:n}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};l.Z.on(e,Ji("dxresize",n),t)},er=function(e){var{namespace:t}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};l.Z.off(e,Ji("dxresize",t))},tr=(e,t,n,i)=>{var{namespace:r}=i;l.Z.on(e,Ji("dxhiding",r),n),l.Z.on(e,Ji("dxshown",r),t)},nr=(e,t)=>{var{namespace:n}=t;l.Z.off(e,Ji("dxhiding",n)),l.Z.off(e,Ji("dxshown",n))},ir=0,rr={},{abstract:or}=ki,ar=ki.inherit({_getDefaultOptions(){return(0,x.l)(this.callBase(),{width:void 0,height:void 0,rtlEnabled:(0,F.Z)().rtlEnabled,elementAttr:{},disabled:!1,integrationOptions:{}},this._useTemplates()?qi.createDefaultOptions():{})},ctor(e,t){this._customClass=null,this._createElement(e),function(e,t,n){var i=(0,s.aT)(e.get(0)),r=g(t.constructor);i[r]=t,n&&l.Z.one(e,u,(function(){n.call(t)})),i[h]||(i[h]=[]),i[h].push(r)}(this._$element,this,this._dispose),this.callBase(t)},_createElement(e){this._$element=(0,r.Z)(e)},_getSynchronizableOptionsForCreateComponent:()=>["rtlEnabled","disabled","templatesRenderAsynchronously"],_checkFunctionValueDeprecation:function(e){this.option("_ignoreFunctionValueDeprecation")||e.forEach((e=>{(0,d.mf)(this.option(e))&&a.Z.log("W0017",e)}))},_visibilityChanged:or,_dimensionChanged:or,_init(){this.callBase(),this._checkFunctionValueDeprecation(["width","height","maxHeight","maxWidth","minHeight","minWidth","popupHeight","popupWidth"]),this._attachWindowResizeCallback(),this._initTemplateManager()},_setOptionsByDevice(e){this.callBase([].concat(this.constructor._classCustomRules||[],e||[]))},_isInitialOptionValue(e){return!(this.constructor._classCustomRules&&Object.prototype.hasOwnProperty.call(this._convertRulesToOptions(this.constructor._classCustomRules),e))&&this.callBase(e)},_attachWindowResizeCallback(){if(this._isDimensionChangeSupported()){var e=this._windowResizeCallBack=this._dimensionChanged.bind(this);Yn.add(e)}},_isDimensionChangeSupported(){return this._dimensionChanged!==or},_renderComponent(){this._initMarkup(),(0,Wn.Ym)()&&this._render()},_initMarkup(){var{rtlEnabled:e}=this.option()||{};this._renderElementAttributes(),this._toggleRTLDirection(e),this._renderVisibilityChange(),this._renderDimensions()},_render(){this._attachVisibilityChangeHandlers(),(0,Yi.R)(this.$element())},_renderElementAttributes(){var{elementAttr:e}=this.option()||{},t=(0,x.l)({},e),n=t.class;delete t.class,this.$element().attr(t).removeClass(this._customClass).addClass(n),this._customClass=n},_renderVisibilityChange(){this._isDimensionChangeSupported()&&this._attachDimensionChangeHandlers(),this._isVisibilityChangeSupported()&&this.$element().addClass("dx-visibility-change-handler")},_renderDimensions(){var e=this.$element(),t=e.get(0),n=this._getOptionValue("width",t),i=this._getOptionValue("height",t);this._isCssUpdateRequired(t,i,n)&&e.css({width:null===n?"":n,height:null===i?"":i})},_isCssUpdateRequired:(e,t,n)=>!!((0,d.$K)(n)||(0,d.$K)(t)||e.style.width||e.style.height),_attachDimensionChangeHandlers(){var e=this.$element(),t="".concat(this.NAME,"VisibilityChange");er(e,{namespace:t}),Qi(e,(()=>this._dimensionChanged()),{namespace:t})},_attachVisibilityChangeHandlers(){if(this._isVisibilityChangeSupported()){var e=this.$element(),t="".concat(this.NAME,"VisibilityChange");this._isHidden=!this._isVisible(),nr(e,{namespace:t}),tr(e,(()=>this._checkVisibilityChanged("shown")),(()=>this._checkVisibilityChanged("hiding")),{namespace:t})}},_isVisible(){return this.$element().is(":visible")},_checkVisibilityChanged(e){this._isVisible()&&("hiding"!==e||this._isHidden?"shown"===e&&this._isHidden&&(this._isHidden=!1,this._visibilityChanged(!0)):(this._visibilityChanged(!1),this._isHidden=!0))},_isVisibilityChangeSupported(){return this._visibilityChanged!==or&&(0,Wn.Ym)()},_clean:C.ZT,_modelByElement(){var{modelByElement:e}=this.option(),t=this.$element();return e?e(t):void 0},_invalidate(){if(this._isUpdateAllowed())throw a.Z.Error("E0007");this._requireRefresh=!0},_refresh(){this._clean(),this._renderComponent()},_dispose(){this._templateManager&&this._templateManager.dispose(),this.callBase(),this._clean(),this._detachWindowResizeCallback()},_detachWindowResizeCallback(){this._isDimensionChangeSupported()&&Yn.remove(this._windowResizeCallBack)},_toggleRTLDirection(e){this.$element().toggleClass("dx-rtl",e)},_createComponent(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=(0,C.h3)(this._getSynchronizableOptionsForCreateComponent(),(e=>!(e in n))),{integrationOptions:o}=this.option(),{nestedComponentOptions:a}=this.option();a=a||C.ZT;var s=(0,x.l)({integrationOptions:o},a(this));i.forEach((e=>s[e]=this.option(e))),this._extendConfig(n,s);var l=void 0;if((0,d.HD)(t)){var c=(0,r.Z)(e)[t](n);l=c[t]("instance")}else e&&((l=t.getInstance(e))?l.option(n):l=new t(e,n));if(l){var u=e=>{var{name:t,value:n}=e;i.includes(t)&&l.option(t,n)};this.on("optionChanged",u),l.on("disposing",(()=>this.off("optionChanged",u)))}return l},_extendConfig(e,t){(0,b.S6)(t,((t,n)=>{!Object.prototype.hasOwnProperty.call(e,t)&&(e[t]=n)}))},_defaultActionConfig(){var e=this.$element(),t=this._modelByElement(e);return(0,x.l)(this.callBase(),{context:t})},_defaultActionArgs(){var e=this.$element(),t=this._modelByElement(e),n=this.element();return(0,x.l)(this.callBase(),{element:n,model:t})},_optionChanged(e){switch(e.name){case"width":case"height":this._renderDimensions();break;case"rtlEnabled":this._invalidate();break;case"elementAttr":this._renderElementAttributes();break;case"disabled":case"integrationOptions":break;default:this.callBase(e)}},_removeAttributes(e){for(var t=e.attributes,n=t.length-1;n>=0;n--){var i=t[n];if(i){var{name:r}=i;r.indexOf("aria-")&&-1===r.indexOf("dx-")&&"role"!==r&&"style"!==r&&"tabindex"!==r||e.removeAttribute(r)}}},_removeClasses(e){e.className=e.className.split(" ").filter((e=>0!==e.lastIndexOf("dx-",0))).join(" ")},_updateDOMComponent(e){e?this._renderComponent():this._requireRefresh&&(this._requireRefresh=!1,this._refresh())},endUpdate(){var e=this._isInitializingRequired();this.callBase(),this._isUpdateAllowed()&&this._updateDOMComponent(e)},$element(){return this._$element},element(){var e=this.$element();return(0,Xi.u)(e)},dispose(){var e=this.$element().get(0);(0,s.nK)(e,!0),e.textContent="",this._removeAttributes(e),this._removeClasses(e)},resetOption(e){if(this.callBase(e),"width"===e||"height"===e){var t=this.initialOption(e);!(0,d.$K)(t)&&this.$element().css(e,"")}},_getAnonymousTemplateName(){},_initTemplateManager(){if(!this._templateManager&&this._useTemplates()){var{integrationOptions:e={}}=this.option(),{createTemplate:t}=e;this._templateManager=new qi(t,this._getAnonymousTemplateName()),this._initTemplates()}},_initTemplates(){var{templates:e,anonymousTemplateMeta:t}=this._templateManager.extractTemplates(this.$element()),n=this.option("integrationOptions.templates.".concat(t.name));e.forEach((e=>{var{name:t,template:n}=e;this._options.silent("integrationOptions.templates.".concat(t),n)})),t.name&&!n&&(this._options.silent("integrationOptions.templates.".concat(t.name),t.template),this._options.silent("_hasAnonymousTemplateContent",!0))},_getTemplateByOption(e){return this._getTemplate(this.option(e))},_getTemplate(e){var t=this.option("integrationOptions.templates"),n=this.option("templatesRenderAsynchronously"),i=this.option("integrationOptions.skipTemplates");return this._templateManager.getTemplate(e,t,{isAsyncTemplate:n,skipTemplates:i},this)},_saveTemplate(e,t){this._setOptionWithoutOptionChange("integrationOptions.templates."+e,this._templateManager._createTemplate(t))},_useTemplates:()=>!0});ar.getInstance=function(e){return t=(0,r.Z)(e),n=g(this),(0,s.aT)(t.get(0),n);var t,n},ar.defaultOptions=function(e){this._classCustomRules=this._classCustomRules||[],this._classCustomRules.push(e)};const sr=ar;class lr extends En{constructor(e){super(e),this.renderTemplate=this.renderTemplate.bind(this)}renderTemplate(){var e,t=Pe(this.$LI,!0),n=t.parentNode,i=(0,r.Z)(n),o=i.contents(),{data:a,index:s}=null!==(e=this.props.model)&&void 0!==e?e:{data:{}};a&&Object.keys(a).forEach((e=>{a[e]&&zn.Z.isNode(a[e])&&(a[e]=(0,Xi.u)((0,r.Z)(a[e])))}));var l=(0,r.Z)(this.props.template.render((0,v.Z)({container:(0,Xi.u)(i),transclude:this.props.transclude},{renovated:this.props.renovated},this.props.transclude?{}:{model:a},!this.props.transclude&&Number.isFinite(s)?{index:s}:{})));return((e,t)=>{if(t&&t[0])t.is(e)||((0,b.S6)(t,((t,n)=>{((e,t)=>{t&&zn.Z.insertElement(e.parentNode,t,e)})(e[0],n)})),e.remove())})((0,r.Z)(t),l),()=>{((e,t)=>{(0,b.S6)(t,((t,n)=>{var i=!1;(0,b.S6)(e,((e,t)=>{n===t&&(i=!0)})),!i&&n.parentNode&&n.parentNode.removeChild(n)}))})(o,i.contents()),n.appendChild(t)}}shouldComponentUpdate(e){var t,n,{model:i,template:r}=this.props,{model:o,template:a}=e;if(r!==a)return!0;if((0,d.$K)(i)&&(0,d.$K)(o)){var{data:s,index:l}=i,{data:c,index:u}=o;return l!==u||(t=s,n=c,!(Object.keys(t).length===Object.keys(n).length&&Object.keys(t).every((e=>t[e]===n[e]))))}return!(i===o)}createEffects(){return[new kn(this.renderTemplate,[this.props.template,this.props.model])]}updateEffects(){this._effects[0].update([this.props.template,this.props.model])}componentWillUnmount(){}render(){return null}}function dr(e){return Array.isArray(e)?[...e]:(0,v.Z)({},e)}function cr(e,t,n){var i=n.length>0&&t&&e!==t?dr(t):dr(e),r=n[0];return n.length>1?i[r]=cr(e[r],null==t?void 0:t[r],n.slice(1)):r&&((0,d.PO)(e[r])?i[r]=dr(e[r]):i[r]=e[r]),i}function ur(e,t,n,i){var r=t[n],o=e[n],a=e;(0,d.PO)(r)||n!==i&&Array.isArray(r)?a[n]=cr(r,o,(0,Jn.Zw)(i).slice(1)):a[n]=r}var pr=(e,t)=>n=>{Object.prototype.hasOwnProperty.call(e,n)&&void 0===e[n]&&(e[n]=t(n))};class hr extends sr{constructor(e,t){super(e,t),this._shouldRaiseContentReady=!1,this.validateKeyDownHandler()}get _propsInfo(){return{allowNull:[],twoWay:[],elements:[],templates:[],props:[]}}validateKeyDownHandler(){var e=this.getSupportedKeyNames().length>0,t="function"==typeof this._viewComponent.prototype.keyDown;if(e&&!t)throw Error("Component's declaration must have 'keyDown' method.")}get viewRef(){var e;return null===(e=this._viewRef)||void 0===e?void 0:e.current}_checkContentReadyOption(e){var t=this._getContentReadyOptions().reduce(((e,t)=>(e[t]=!0,e)),{});return this._checkContentReadyOption=e=>!!t[e],this._checkContentReadyOption(e)}_getContentReadyOptions(){return["rtlEnabled"]}_fireContentReady(){this._actionsMap.onContentReady({})}_getDefaultOptions(){var e=this._getViewComponentDefaultProps();return(0,x.l)(!0,super._getDefaultOptions(),e,this._propsInfo.twoWay.reduce(((t,n)=>{var[i,r,o]=n;return(0,v.Z)({},t,{[i]:e[r],[o]:e=>this.option(i,e)})}),{}),this._propsInfo.templates.reduce(((e,t)=>(0,v.Z)({},e,{[t]:null})),{}))}_getUnwrappedOption(){var e={};return Object.keys(this.option()).forEach((t=>{e[t]=this.option(t)})),e}_initializeComponent(){var e;super._initializeComponent(),null===(e=this._templateManager)||void 0===e||e.addDefaultTemplates(this.getDefaultTemplates());var t=this._getUnwrappedOption();this._props=this._optionsWithDefaultTemplates(t),this._propsInfo.templates.forEach((e=>{this._componentTemplates[e]=this._createTemplateComponent(this._props[e])})),Object.keys(this._getActionConfigsFull()).forEach((e=>this._addAction(e))),this._viewRef={current:null},this.defaultKeyHandlers=this._createDefaultKeyHandlers()}_initMarkup(){var e=this.getProps();this._renderWrapper(e)}_renderWrapper(e){var t=this.$element()[0];this._isNodeReplaced||Vn.onPreRender(),Vn.render(this._viewComponent,e,t,this._isNodeReplaced),this._isNodeReplaced||(this._isNodeReplaced=!0,Vn.onAfterRender(),this._shouldRaiseContentReady=!0),this._shouldRaiseContentReady&&(this._fireContentReady(),this._shouldRaiseContentReady=!1)}_silent(e,t){this._options.silent(e,t)}_render(){}_removeWidget(){Vn.remove(this.$element()[0])}_dispose(){this._removeWidget(),super._dispose()}get elementAttr(){var e=this.$element()[0];if(!this._elementAttr){var{attributes:t}=e,n=Array.from(t).filter((e=>{var n;return!this._propsInfo.templates.includes(e.name)&&(null===(n=t[e.name])||void 0===n?void 0:n.specified)})).reduce(((t,n)=>{var{name:i,value:r}=n,o=t,a=i in e;return o[i]=""===r&&a?e[i]:r,o}),{});this._elementAttr=n,this._storedClasses=e.getAttribute("class")||""}for(var i=e.style,r={},o=0;o<i.length;o+=1)r[i[o]]=i.getPropertyValue(i[o]);return this._elementAttr.style=r,this._elementAttr.class=this._storedClasses,this._elementAttr}_getAdditionalActionConfigs(){return{onContentReady:{excludeValidators:["disabled","readOnly"]}}}_getAdditionalProps(){return[]}_patchOptionValues(e){var{allowNull:t,elements:n,props:i,twoWay:r}=this._propsInfo,o=this._getViewComponentDefaultProps(),a=Object.keys(o),s=this._getDefaultOptions(),{children:l,onKeyboardHandled:c,ref:u}=e,p={ref:u,children:l,onKeyDown:c?(e,t)=>{c(t)}:void 0};return[...i,...this._getAdditionalProps()].forEach((t=>{Object.prototype.hasOwnProperty.call(e,t)&&(p[t]=e[t])})),t.forEach(pr(p,(()=>null))),a.forEach(pr(p,(e=>s[e]))),r.forEach((e=>{var[t,n]=e;pr(p,(()=>s[n]))(t)})),n.forEach((e=>{if(e in p){var t=p[e];(0,d.ZU)(t)&&(p[e]=this._patchElementParam(t))}})),p}getSupportedKeyNames(){return[]}prepareStyleProp(e){return"string"==typeof e.style?(0,v.Z)({},e,{style:{},cssText:e.style}):e}getProps(){var e,t,{elementAttr:n}=this.option(),i=this._patchOptionValues((0,v.Z)({},this._props,{ref:this._viewRef,children:this._extractDefaultSlot(),aria:this._aria}));return this._propsInfo.templates.forEach((e=>{i[e]=this._componentTemplates[e]})),this.prepareStyleProp((0,v.Z)({},i,this.elementAttr,n,{className:[...(null!==(e=this.elementAttr.class)&&void 0!==e?e:"").split(" "),...(null!==(t=null==n?void 0:n.class)&&void 0!==t?t:"").split(" ")].filter(((e,t,n)=>e&&n.indexOf(e)===t)).join(" ").trim(),class:""},this._actionsMap))}_getActionConfigs(){return{}}_getActionConfigsFull(){return(0,v.Z)({},this._getActionConfigs(),this._getAdditionalActionConfigs())}getDefaultTemplates(){var e=Object.values(this._templatesInfo),t={};return e.forEach((e=>{t[e]="dx-renovation-template-mock"})),t}get _templatesInfo(){return{}}_optionsWithDefaultTemplates(e){var t=Object.entries(this._templatesInfo).reduce(((t,n)=>{var i,[r,o]=n;return(0,v.Z)({},t,{[r]:null!==(i=e[r])&&void 0!==i?i:o})}),{});return(0,v.Z)({},e,t)}_init(){super._init(),this.customKeyHandlers={},this._actionsMap={},this._aria={},this._componentTemplates={}}_createDefaultKeyHandlers(){var e={};return this.getSupportedKeyNames().forEach((t=>{e[t]=e=>this.viewRef.keyDown(xn.createKeyDownOptions(e))})),e}_addAction(e,t){var n=t;if(!n){var i=this._createActionByOption(e,this._getActionConfigsFull()[e]);n=e=>(Object.keys(e).forEach((t=>{(0,d.$K)(e[t])&&zn.Z.isNode(e[t])&&(e[t]=(0,Xi.u)((0,r.Z)(e[t])))})),i(e))}this._actionsMap[e]=n}_optionChanged(e){var{fullName:t,name:n,previousValue:i,value:r}=e;ur(this._props,this.option(),n,t),this._propsInfo.templates.includes(n)&&r!==i&&(this._componentTemplates[n]=this._createTemplateComponent(r)),n&&this._getActionConfigsFull()[n]&&this._addAction(n),this._shouldRaiseContentReady=this._shouldRaiseContentReady||this._checkContentReadyOption(t),super._optionChanged(e),this._invalidate()}_extractDefaultSlot(){return this.option("_hasAnonymousTemplateContent")?Vn.createElement(lr,{template:this._getTemplate(this._templateManager.anonymousTemplateName),transclude:!0,renovated:!0}):null}_createTemplateComponent(e){if(e){var t=this._getTemplate(e);if(!(0,d.HD)(t)||"dx-renovation-template-mock"!==t)return e=>Vn.createElement(lr,{template:t,model:e})}}_wrapKeyDownHandler(e){return t=>{var{keyName:n,originalEvent:i,which:r}=t,o=this.customKeyHandlers,a=o[n]||o[r];return void 0===a||a.bind(this)(i,t)?null==e?void 0:e(i,t):(i.cancel=!0,i)}}_toPublicElement(e){return(0,Xi.u)((0,r.Z)(e))}_patchElementParam(e){try{var t=(0,r.Z)(e),n=null==t?void 0:t.get(0);return null!=n&&n.nodeType?n:e}catch(t){return e}}repaint(){this._isNodeReplaced=!1,this._shouldRaiseContentReady=!0,this._removeWidget(),this._refresh()}_supportedKeys(){return(0,v.Z)({},this.defaultKeyHandlers,this.customKeyHandlers)}registerKeyHandler(e,t){this.customKeyHandlers[e]=t}setAria(e,t){this._aria[e]=t,this._initMarkup()}_getViewComponentDefaultProps(){return this._viewComponent.defaultProps||{}}}hr.IS_RENOVATED_WIDGET=!1,hr.IS_RENOVATED_WIDGET=!0;var fr=e=>!(!e||"string"!=typeof e)&&(/^\s*<svg[^>]*>(.|\r?\n)*?<\/svg>\s*$/i.test(e)?"svg":/data:.*base64|\.|[^<\s]\/{1,1}/.test(e)?"image":/^[\w-_]+$/.test(e)?"dxIcon":!!/^\s?([\w-_]\s?)+$/.test(e)&&"fontIcon");class mr extends hr{get _validationGroupConfig(){return ye.getGroupConfig(this._findGroup())}getDefaultTemplateNames(){return["content"]}getSupportedKeyNames(){return["space","enter"]}getProps(){var e=super.getProps();return e.onClick=e=>{var{event:t}=e;this._clickAction({event:t,validationGroup:this._validationGroupConfig})},"svg"===fr(e.icon)&&(e.iconTemplate=this._createTemplateComponent((()=>e.icon))),e}get _templatesInfo(){return{template:"content"}}_toggleActiveState(e,t){var n=this.viewRef;t?n.activate():n.deactivate()}_getSubmitAction(){var e=!0,t="valid";return this._createAction((n=>{var{event:i,submitInput:r}=n;if(e){var o=this._validationGroupConfig;if(void 0!==o&&""!==o){var a=o.validate();t=a.status,"pending"===a.status&&(e=!1,this.option("disabled",!0),a.complete.then((n=>{var{status:i}=n;this.option("disabled",!1),"valid"===(t=i)&&r.click(),e=!0})))}}"valid"!==t&&i.preventDefault(),i.stopPropagation()}))}_initializeComponent(){super._initializeComponent(),this._addAction("onSubmit",this._getSubmitAction()),this._clickAction=this._createClickAction()}_initMarkup(){super._initMarkup();var e=this.$element().find(".dx-button-content"),t=e.children().filter(".dx-template-wrapper"),n=e.children().filter(".dx-button-submit-input");t.length&&(t.addClass("dx-button-content"),t.append(n),e.replaceWith(t))}_patchOptionValues(e){return super._patchOptionValues((0,v.Z)({},e,{templateData:e._templateData}))}_findGroup(){var e=this.$element(),t=this.option("validationGroup");return void 0!==t&&""!==t?t:ye.findGroup(e,this._modelByElement(e))}_createClickAction(){return this._createActionByOption("onClick",{excludeValidators:["readOnly"]})}_optionChanged(e){"onClick"===e.name&&(this._clickAction=this._createClickAction()),super._optionChanged(e)}}function gr(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}var vr=n(8825),yr=n(8824);const xr=(0,n(897).Z)(a.Z.ERROR_MESSAGES,{E1001:"Module '{0}'. Controller '{1}' is already registered",E1002:"Module '{0}'. Controller '{1}' does not inherit from DevExpress.ui.dxDataGrid.Controller",E1003:"Module '{0}'. View '{1}' is already registered",E1004:"Module '{0}'. View '{1}' does not inherit from DevExpress.ui.dxDataGrid.View",E1005:"Public method '{0}' is already registered",E1006:"Public method '{0}.{1}' does not exist",E1007:"State storing cannot be provided due to the restrictions of the browser",E1010:"The template does not contain the TextBox widget",E1011:'Items cannot be deleted from the List. Implement the "remove" function in the data store',E1012:"Editing type '{0}' with the name '{1}' is unsupported",E1016:"Unexpected type of data source is provided for a lookup column",E1018:"The 'collapseAll' method cannot be called if you use a remote data source",E1019:"Search mode '{0}' is unavailable",E1020:"The type cannot be changed after initialization",E1021:"{0} '{1}' you are trying to remove does not exist",E1022:'The "markers" option is given an invalid value. Assign an array instead',E1023:'The "routes" option is given an invalid value. Assign an array instead',E1025:"This layout is too complex to render",E1026:'The "calculateCustomSummary" function is missing from a field whose "summaryType" option is set to "custom"',E1031:"Unknown subscription in the Scheduler widget: '{0}'",E1032:"Unknown start date in an appointment: '{0}'",E1033:"Unknown step in the date navigator: '{0}'",E1034:"The browser does not implement an API for saving files",E1035:"The editor cannot be created: {0}",E1037:"Invalid structure of grouped data",E1038:"The browser does not support local storages for local web pages",E1039:"A cell's position cannot be calculated",E1040:"The '{0}' key value is not unique within the data array",E1041:"The '{0}' script is referenced after the DevExtreme scripts or not referenced at all",E1042:"{0} requires the key field to be specified",E1043:"Changes cannot be processed due to the incorrectly set key",E1044:"The key field specified by the keyExpr option does not match the key field specified in the data store",E1045:"Editing requires the key field to be specified in the data store",E1046:"The '{0}' key field is not found in data objects",E1047:'The "{0}" field is not found in the fields array',E1048:'The "{0}" operation is not found in the filterOperations array',E1049:"Column '{0}': filtering is allowed but the 'dataField' or 'name' option is not specified",E1050:"The validationRules option does not apply to third-party editors defined in the editCellTemplate",E1051:'HtmlEditor\'s valueType is "{0}", but the {0} converter was not imported.',E1052:'{0} should have the "dataSource" option specified',E1053:'The "buttons" option accepts an array that contains only objects or string values',E1054:"All text editor buttons must have names",E1055:'One or several text editor buttons have invalid or non-unique "name" values',E1056:'The {0} widget does not support buttons of the "{1}" type',E1058:'The "startDayHour" must be earlier than the "endDayHour"',E1059:"The following column names are not unique: {0}",E1060:"All editable columns must have names",W1001:'The "key" option cannot be modified after initialization',W1002:"An item with the key '{0}' does not exist",W1003:"A group with the key '{0}' in which you are trying to select items does not exist",W1004:"The item '{0}' you are trying to select in the group '{1}' does not exist",W1005:"Due to column data types being unspecified, data has been loaded twice in order to apply initial filter settings. To resolve this issue, specify data types for all grid columns.",W1006:"The map service returned the following error: '{0}'",W1007:"No item with key {0} was found in the data source, but this key was used as the parent key for item {1}",W1008:"Cannot scroll to the '{0}' date because it does not exist on the current view",W1009:"Searching works only if data is specified using the dataSource option",W1010:"The capability to select all items works with source data of plain structure only",W1011:'The "keyExpr" option is not applied when dataSource is not an array',W1012:"The '{0}' key field is not found in data objects",W1013:'The "message" field in the dialog component was renamed to "messageHtml". Change your code correspondingly. In addition, if you used HTML code in the message, make sure that it is secure',W1014:"The Floating Action Button exceeds the recommended speed dial action count. If you need to display more speed dial actions, increase the maxSpeedDialActionCount option value in the global config.",W1015:'The "cellDuration" should divide the range from the "startDayHour" to the "endDayHour" into even intervals',W1016:"The '{0}' field in the HTML Editor toolbar item configuration was renamed to '{1}'. Please make a corresponding change in your code.",W1017:"The 'key' property is not specified for a lookup data source. Please specify it to prevent requests for the entire dataset when users filter data.",W1018:"Infinite scrolling may not work properly with multiple selection. To use these features together, set 'selection.deferred' to true or set 'selection.selectAllMode' to 'page'.",W1019:"Filter query string exceeds maximum length limit of {0} characters.",W1020:"hideEvent is ignored when the shading property is true",W1021:"The '{0}' is not rendered because none of the DOM elements match the value of the \"container\" property."});var br,_r,wr,Er,Cr,Tr,kr=(0,Wn.Jj)(),Sr=$n.Z.add,Dr=ri,Rr=ni,Ar=new de.BH,Or="link[rel=dx-theme]",Mr="data-theme",Nr="data-active",Ur="dx-hairlines",Ir="any",Pr=15e3,Lr="dx.";function Fr(){if(!(0,Wn.Ym)())return null;var e,t=(0,r.Z)("<div>",br).addClass("dx-theme-marker").appendTo(br.documentElement);try{return(e=kr.getComputedStyle(t.get(0)).fontFamily)?(e=e.replace(/["']/g,"")).substr(0,Lr.length)!==Lr?null:e.substr(Lr.length):null}finally{t.remove()}}function Zr(e){var t,n,i=!0;function r(){Cr=null,clearInterval(n),i=!0,yr.t.fire(),yr.t.empty(),Ar.resolve()}if(Cr=e,Hr()||!Pr)r();else{if(!i)return void(Cr&&(Cr=e));t=Date.now(),i=!1,n=setInterval((function(){var e=Hr(),n=!e&&Date.now()-t>Pr;n&&xr.log("W0004",Cr),(e||n)&&r()}),10)}}function Hr(){if(!Cr)return!0;var e=Cr===Ir;if("resolved"===Ar.state()&&e)return!0;var t=Fr();return!(!t||!e)||t===Cr}function Br(e){var t;(function(e){try{e!==br&&(wr=null)}catch(e){wr=null}br=e})((e=e||{}).context||zn.Z.getDocument()),br&&((t=(0,r.Z)(Or,br)).length&&(wr={},_r=(0,r.Z)((0,vr.r)("<link rel=stylesheet>"),br),t.each((function(){var e=(0,r.Z)(this,br),t=e.attr(Mr),n=e.attr("href"),i="true"===e.attr(Nr);wr[t]={url:n,isActive:i}})),t.last().after(_r),t.remove()),Er=void 0,jr(e))}function jr(e){if(!arguments.length)return Er=Er||Fr();Gr(Dr()),"string"==typeof(e=e||{})&&(e={theme:e});var t,n=e._autoInit,i=e.loadCallback;if(Er=function(e){var t=e?e.split("."):[],n=null;if(wr){if(e in wr)return e;(0,b.S6)(wr,(function(e,i){var r=e.split(".");if(!(t[0]&&r[0]!==t[0]||t[1]&&t[1]!==r[1]||t[2]&&t[2]!==r[2]))return n&&!i.isActive||(n=e),!i.isActive&&void 0}))}return n}(e.theme||Er),Er&&(t=wr[Er]),i&&yr.t.add(i),t)_r.attr("href",wr[Er].url),(yr.t.has()||"resolved"!==Ar.state()||e._forceTimeout)&&Zr(Er);else{if(!n)throw xr.Error("E0021",Er);(0,Wn.Ym)()&&Zr(Ir),yr.t.fire(),yr.t.empty()}Ar.done((()=>zr(ii,Er)))}function zr(e,t){Tr=function(e){var t=[],n=(e=e||jr())&&e.split(".");return n&&(t.push("dx-theme-"+n[0],"dx-theme-"+n[0]+"-typography"),n.length>1&&t.push("dx-color-scheme-"+n[1]+(Vr(e)?"-"+n[2]:""))),t}(t).join(" "),(0,r.Z)(e).addClass(Tr),function(){var t=(0,Wn.Ym)()&&kr.devicePixelRatio;if(t&&!(t<2)){var n=(0,r.Z)("<div>");n.css("border",".5px solid transparent"),(0,r.Z)("body").append(n),1===(0,Qn.zp)(n)&&((0,r.Z)(e).addClass(Ur),Tr+=" "+Ur),n.remove()}}()}function Gr(e){(0,r.Z)(e).removeClass(Tr)}function Vr(e){return function(e,t){return t||(t=Er||Fr()),new RegExp(e).test(t)}("material",e)}function Wr(){if(Br({_autoInit:!0,_forceTimeout:!0}),(0,r.Z)(Or,br).length)throw xr.Error("E0022")}function $r(e){return Object.keys(e).filter((t=>e[t])).join(" ")}(0,Wn.Ym)()?Wr():Sr(Wr),Rr.add((function(e,t){Ar.done((function(){Gr(t),zr(e)}))})),pi.changed.add((function(){Br({_autoInit:!0})}));var Kr=["iconTemplate","position","source"];class qr extends wn{constructor(e){super(e),this.state={}}get sourceType(){return fr(this.props.source)}get cssClass(){return"left"!==this.props.position?"dx-icon-right":""}get iconClassName(){var e={"dx-icon":!0,[this.cssClass]:!!this.cssClass},{source:t}=this.props;return"dxIcon"===this.sourceType?$r((0,v.Z)({},e,{["dx-icon-".concat(t)]:!0})):"fontIcon"===this.sourceType?$r((0,v.Z)({},e,{[String(t)]:!!t})):"image"===this.sourceType?$r(e):"svg"===this.sourceType?$r((0,v.Z)({},e,{"dx-svg-icon":!0})):""}get restAttributes(){return gr(this.props,Kr)}render(){var e,t=this.props;return(e=>{var{iconClassName:t,props:{iconTemplate:n,source:i},sourceType:r}=e;return Xe(["dxIcon"===r&&Ke(1,"i",t),"fontIcon"===r&&Ke(1,"i",t),"image"===r&&Ke(1,"img",t,null,1,{alt:"",src:i}),n&&Ke(1,"i",t,n({}),0)],0)})({props:(0,v.Z)({},t,{iconTemplate:(e=t.iconTemplate,e&&(e.defaultProps?t=>Je(qe(2,e,(0,v.Z)({},t))):e))}),sourceType:this.sourceType,cssClass:this.cssClass,iconClassName:this.iconClassName,restAttributes:this.restAttributes})}}qr.defaultProps={position:"left",source:""};var Yr="dx-inkripple",Xr="dx-inkripple-wave",Jr="dx-inkripple-showing",Qr="dx-inkripple-hiding",eo=2,to=300,no=1e3,io=0,ro=function(e,t){for(var n=function(e){var t=e.children("."+Yr);return 0===t.length&&(t=(0,r.Z)("<div>").addClass(Yr).appendTo(e)),t}((0,r.Z)(e)),i=n.children("."+Xr).toArray(),o=i.length;o<t;o++){var a=(0,r.Z)("<div>").appendTo(n).addClass(Xr);i.push(a[0])}return(0,r.Z)(i)},oo=function(e,t){var n,i,o=(0,r.Z)(t.element),a=(0,Qn.Y_)(o),s=(0,Qn.zp)(o),l=parseInt(Math.sqrt(a*a+s*s)),d=Math.min(4e3,parseInt(l*e.waveSizeCoefficient));if(e.isCentered)n=(a-d)/2,i=(s-d)/2;else{var c=t.event,u=o.offset();n=c.pageX-u.left-d/2,i=c.pageY-u.top-d/2}return{left:n,top:i,height:d,width:d}};function ao(e,t){var n=ro(t.element,e.wavesNumber).eq(t.wave||io);e.hidingTimeout&&clearTimeout(e.hidingTimeout),co(n),n.css(oo(e,t)),e.showingTimeout=setTimeout(so.bind(this,e,n),0)}function so(e,t){var n=e.durations.showingScale+"ms";t.addClass(Jr).css("transitionDuration",n)}function lo(e){return{showingScale:e?no:to,hidingScale:to,hidingOpacity:to}}function co(e){e.removeClass(Qr).css("transitionDuration","")}var uo=["config"],po={config:Object.freeze({})};class ho extends wn{constructor(e){super(e),this.state={},this.__getterCache={},this.hideWave=this.hideWave.bind(this),this.showWave=this.showWave.bind(this)}get getConfig(){return void 0!==this.__getterCache.getConfig?this.__getterCache.getConfig:this.__getterCache.getConfig=(()=>{var{config:e}=this.props;return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{useHoldAnimation:t,waveSizeCoefficient:n,isCentered:i,wavesNumber:r}=e;return{waveSizeCoefficient:n||eo,isCentered:i||!1,wavesNumber:r||1,durations:lo(null==t||t)}}(e)})()}get restAttributes(){return gr(this.props,uo)}hideWave(e){!function(e,t){e.showingTimeout&&clearTimeout(e.showingTimeout);var n=ro(t.element,t.wavesNumber).eq(t.wave||io),i=e.durations,r=i.hidingScale+"ms, "+i.hidingOpacity+"ms";n.addClass(Qr).removeClass(Jr).css("transitionDuration",r);var o=Math.max(i.hidingScale,i.hidingOpacity);e.hidingTimeout=setTimeout(co.bind(this,n),o)}(this.getConfig,e)}showWave(e){ao(this.getConfig,e)}componentWillUpdate(e,t,n){this.props.config!==e.config&&(this.__getterCache.getConfig=void 0)}render(){var e,t=this.props;return e={props:(0,v.Z)({},t),getConfig:this.getConfig,restAttributes:this.restAttributes},Je(Ke(1,"div","dx-inkripple",null,1,(0,v.Z)({},e.restAttributes)))}}ho.defaultProps=po;var fo=(0,Wn.Ym)()?(0,Wn.Jj)():{},mo=function(e){return setTimeout(e,16.666666666666668)},go=function(e){clearTimeout(e)},vo=(0,Kn.Z)((function(){var e=fo.requestAnimationFrame||fo.webkitRequestAnimationFrame||fo.mozRequestAnimationFrame||fo.oRequestAnimationFrame||fo.msRequestAnimationFrame,t=fo.cancelAnimationFrame||fo.webkitCancelAnimationFrame||fo.mozCancelAnimationFrame||fo.oCancelAnimationFrame||fo.msCancelAnimationFrame;e&&t&&(mo=e,go=t)}));function yo(){return vo(),mo.apply(fo,arguments)}function xo(){vo(),go.apply(fo,arguments)}function bo(e){return e&&[e.target,e.delegateTarget,e.relatedTarget,e.currentTarget].filter((e=>!!e))}var _o=n(9071),{maxTouchPoints:wo}=(0,Wn.jW)(),Eo={webkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd",transition:"transitionend"},Co=function(e){return!!(0,_o.Hj)(e)},To=function(e){if("text"===e)return!0;var t=zn.Z.createElement("input");try{return t.setAttribute("type",e),t.value="wrongValue",!t.value}catch(e){return!1}},ko=function(e,t){return(e("ontouchstart")||!!t)&&!e("callPhantom")}(Wn.l$,wo),So=(0,Wn.l$)("PointerEvent"),Do=ko||So&&!!wo,Ro=(0,Kn.Z)((function(){return Co("transition")})),Ao=(0,Kn.Z)((function(){return Eo[(0,_o.Hj)("transition")]})),Oo=(0,Kn.Z)((function(){return Co("animation")})),Mo=function(){var{platform:e,mac:t}=pi.real();return"ios"===e||"android"===e||t}(),No=(0,Wn.jW)(),Uo=/(webkit)[ /]([\w.]+)/,Io=/(mozilla)(?:.*? rv:([\w.]+))/,Po=e=>{e=e.toLowerCase();var t={},n=Uo.exec(e)||e.indexOf("compatible")<0&&Io.exec(e)||[],i=n[1],r=n[2];return"webkit"===i&&(t.webkit=!0,e.indexOf("chrome")>=0||e.indexOf("crios")>=0?(i="chrome",r=(r=/(?:chrome|crios)\/(\d+\.\d+)/.exec(e))&&r[1]):e.indexOf("fxios")>=0?(i="mozilla",r=(r=/fxios\/(\d+\.\d+)/.exec(e))&&r[1]):e.indexOf("safari")>=0&&/version|phantomjs/.test(e)?(i="safari",r=(r=/(?:version|phantomjs)\/([0-9.]+)/.exec(e))&&r[1]):(i="unknown",r=(r=/applewebkit\/([0-9.]+)/.exec(e))&&r[1])),i&&(t[i]=!0,t.version=r),t};const Lo=(0,x.l)({_fromUA:Po},Po(No.userAgent));var Fo="dxPointerEvents";const Zo=y.Z.inherit({ctor:function(e,t){this._eventName=e,this._originalEvents=(0,fn.V4)(t,Fo),this._handlerCount=0,this.noBubble=this._isNoBubble()},_isNoBubble:function(){var e=this._eventName;return"dxpointerenter"===e||"dxpointerleave"===e},_handler:function(e){var t,n=this._getDelegateTarget(e),i={type:this._eventName,pointerType:e.pointerType||(0,fn.J6)(e),originalEvent:e,delegateTarget:n,timeStamp:Lo.mozilla?(new Date).getTime():e.timeStamp},r=e.originalEvent;if(null!=r&&null!==(t=r.target)&&void 0!==t&&t.shadowRoot){var o,a,s=null!==(o=r.path)&&void 0!==o?o:null===(a=r.composedPath)||void 0===a?void 0:a.call(r);i.target=s[0]}return this._fireEvent(i)},_getDelegateTarget:function(e){var t;return this.noBubble&&(t=e.delegateTarget),t},_fireEvent:function(e){return(0,fn.BX)(e)},_setSelector:function(e){this._selector=this.noBubble&&e?e.selector:null},_getSelector:function(){return this._selector},setup:function(){return!0},add:function(e,t){if(this._handlerCount<=0||this.noBubble){e=this.noBubble?e:zn.Z.getDocument(),this._setSelector(t);var n=this;l.Z.on(e,this._originalEvents,this._getSelector(),(function(e){n._handler(e)}))}this.noBubble||this._handlerCount++},remove:function(e){this._setSelector(e),this.noBubble||this._handlerCount--},teardown:function(e){this._handlerCount&&!this.noBubble||(e=this.noBubble?e:zn.Z.getDocument(),this._originalEvents!=="."+Fo&&l.Z.off(e,this._originalEvents,this._getSelector()))},dispose:function(e){e=this.noBubble?e:zn.Z.getDocument(),l.Z.off(e,this._originalEvents)}});var Ho=function(e){var t=[];return(0,b.S6)(e.touches,(function(e,n){t.push((0,x.l)({pointerId:n.identifier},n))})),{pointers:t,pointerId:e.changedTouches[0].identifier}},Bo=function(e){return"ios"===pi.real().platform&&("dxpointerdown"===e||"dxpointerup"===e)},jo=Zo.inherit({ctor:function(){this.callBase.apply(this,arguments),this._pointerId=0},_handler:function(e){if(Bo(this._eventName)){var t=e.changedTouches[0];if(this._pointerId===t.identifier&&0!==this._pointerId)return;this._pointerId=t.identifier}return this.callBase.apply(this,arguments)},_fireEvent:function(e){return this.callBase((0,x.l)(Ho(e.originalEvent),e))}});jo.map={dxpointerdown:"touchstart",dxpointermove:"touchmove",dxpointerup:"touchend",dxpointercancel:"touchcancel",dxpointerover:"",dxpointerout:"",dxpointerenter:"",dxpointerleave:""},jo.normalize=Ho;const zo=jo;var Go=function(e,t){$n.Z.add((function(){e.split(" ").forEach((function(e){zn.Z.listen(zn.Z.getDocument(),e,t,!0)}))}))};const Vo=function(e,t,n){n=n||function(){};var i=[],r=function(e){var n=-1;return(0,b.S6)(i,(function(i,r){return!t(e,r)||(n=i,!1)})),n},o=function(e){var t=r(e);t>-1&&i.splice(t,1)};Go(e.dxpointerdown,(function(e){-1===r(e)&&(n(e),i.push(e))})),Go(e.dxpointermove,(function(e){i[r(e)]=e})),Go(e.dxpointerup,o),Go(e.dxpointercancel,o),this.pointers=function(){return i},this.reset=function(){i=[]}};var Wo,$o={dxpointerdown:"mousedown",dxpointermove:"mousemove",dxpointerup:"mouseup",dxpointercancel:"",dxpointerover:"mouseover",dxpointerout:"mouseout",dxpointerenter:"mouseenter",dxpointerleave:"mouseleave"},Ko=function(e){return e.pointerId=1,{pointers:Wo.pointers(),pointerId:1}},qo=!1,Yo=function(){qo||(Wo=new Vo($o,(function(){return!0})),qo=!0)},Xo=Zo.inherit({ctor:function(){this.callBase.apply(this,arguments),Yo()},_fireEvent:function(e){return this.callBase((0,x.l)(Ko(e.originalEvent),e))}});Xo.map=$o,Xo.normalize=Ko,Xo.activate=Yo,Xo.resetObserver=function(){Wo.reset()};const Jo=Xo;var Qo=!1,ea=function(){Qo||(Jo.activate(),Qo=!0)},ta=Zo.inherit({EVENT_LOCK_TIMEOUT:100,ctor:function(){this.callBase.apply(this,arguments),ea()},_handler:function(e){var t=(0,fn.N5)(e);if(t||(this._skipNextEvents=!0),!t||!this._mouseLocked){if(!t||!this._skipNextEvents)return this.callBase(e);this._skipNextEvents=!1,this._mouseLocked=!0,clearTimeout(this._unlockMouseTimer);var n=this;this._unlockMouseTimer=setTimeout((function(){n._mouseLocked=!1}),this.EVENT_LOCK_TIMEOUT)}},_fireEvent:function(e){var t=(0,fn.N5)(e.originalEvent)?Jo.normalize:zo.normalize;return this.callBase((0,x.l)(t(e.originalEvent),e))},dispose:function(){this.callBase(),this._skipNextEvents=!1,this._mouseLocked=!1,clearTimeout(this._unlockMouseTimer)}});ta.map={dxpointerdown:"touchstart mousedown",dxpointermove:"touchmove mousemove",dxpointerup:"touchend mouseup",dxpointercancel:"touchcancel",dxpointerover:"mouseover",dxpointerout:"mouseout",dxpointerenter:"mouseenter",dxpointerleave:"mouseleave"},ta.resetObserver=Jo.resetObserver;const na=ta;var ia=((e,t)=>{var{tablet:n,phone:i}=t;return!e.touch||n||i?e.touch?zo:Jo:na})(i,pi.real());(0,b.S6)(ia.map,((e,t)=>{(0,c.Z)(e,new ia(e,t))}));const ra={down:"dxpointerdown",up:"dxpointerup",move:"dxpointermove",cancel:"dxpointercancel",enter:"dxpointerenter",leave:"dxpointerleave",over:"dxpointerover",out:"dxpointerout"};var oa=y.Z.inherit({ctor:function(e){this._$element=(0,r.Z)(e),this._cancelCallback=(0,w.Z)(),this._acceptCallback=(0,w.Z)()},getElement:function(){return this._$element},validate:function(e){return!(0,fn.pR)(e)},validatePointers:function(e){return 1===(0,fn.G7)(e)},allowInterruptionByMouseWheel:function(){return!0},configure:function(e){(0,x.l)(this,e)},addCancelCallback:function(e){this._cancelCallback.add(e)},removeCancelCallback:function(){this._cancelCallback.empty()},_cancel:function(e){this._cancelCallback.fire(this,e)},addAcceptCallback:function(e){this._acceptCallback.add(e)},removeAcceptCallback:function(){this._acceptCallback.empty()},_accept:function(e){this._acceptCallback.fire(this,e)},_requestAccept:function(e){this._acceptRequestEvent=e},_forgetAccept:function(){this._accept(this._acceptRequestEvent),this._acceptRequestEvent=null},start:C.ZT,move:C.ZT,end:C.ZT,cancel:C.ZT,reset:function(){this._acceptRequestEvent&&this._accept(this._acceptRequestEvent)},_fireEvent:function(e,t,n){var i=(0,x.l)({type:e,originalEvent:t,target:this._getEmitterTarget(t),delegateTarget:this.getElement().get(0)},n);return(t=(0,fn.BX)(i)).cancel&&this._cancel(t),t},_getEmitterTarget:function(e){return(this.delegateSelector?(0,r.Z)(e.target).closest(this.delegateSelector):this.getElement()).get(0)},dispose:C.ZT});const aa=oa;var sa="dxmousewheel",la="dxWheel",da={setup:function(e){var t=(0,r.Z)(e);l.Z.on(t,(0,fn.V4)("wheel",la),da._wheelHandler.bind(da))},teardown:function(e){l.Z.off(e,".".concat(la))},_wheelHandler:function(e){var{deltaMode:t,deltaY:n,deltaX:i,deltaZ:r}=e.originalEvent;(0,fn.BX)({type:sa,originalEvent:e,delta:this._normalizeDelta(n,t),deltaX:i,deltaY:n,deltaZ:r,deltaMode:t,pointerType:"mouse"}),e.stopPropagation()},_normalizeDelta(e){return 0===(arguments.length>1&&void 0!==arguments[1]?arguments[1]:0)?-e:-30*e}};(0,c.Z)(sa,da);var ca="dxEventManager",ua="dxEmitter",pa=y.Z.inherit({ctor:function(){this._attachHandlers(),this.reset(),this._proxiedCancelHandler=this._cancelHandler.bind(this),this._proxiedAcceptHandler=this._acceptHandler.bind(this)},_attachHandlers:function(){$n.Z.add(function(){var e=zn.Z.getDocument();l.Z.subscribeGlobal(e,(0,fn.V4)(ra.down,ca),this._pointerDownHandler.bind(this)),l.Z.subscribeGlobal(e,(0,fn.V4)(ra.move,ca),this._pointerMoveHandler.bind(this)),l.Z.subscribeGlobal(e,(0,fn.V4)([ra.up,ra.cancel].join(" "),ca),this._pointerUpHandler.bind(this)),l.Z.subscribeGlobal(e,(0,fn.V4)(sa,ca),this._mouseWheelHandler.bind(this))}.bind(this))},_eachEmitter:function(e){for(var t=this._activeEmitters||[],n=0;t.length>n;){var i=t[n];if(!1===e(i))break;t[n]===i&&n++}},_applyToEmitters:function(e,t){this._eachEmitter((function(n){n[e].call(n,t)}))},reset:function(){this._eachEmitter(this._proxiedCancelHandler),this._activeEmitters=[]},resetEmitter:function(e){this._proxiedCancelHandler(e)},_pointerDownHandler:function(e){(0,fn.N5)(e)&&e.which>1||this._updateEmitters(e)},_updateEmitters:function(e){this._isSetChanged(e)&&(this._cleanEmitters(e),this._fetchEmitters(e))},_isSetChanged:function(e){var t=this._closestEmitter(e),n=this._emittersSet||[],i=t.length!==n.length;return(0,b.S6)(t,(function(e,t){return!(i=i||n[e]!==t)})),this._emittersSet=t,i},_closestEmitter:function(e){var t=this,n=[],i=(0,r.Z)(e.target);function o(i,r){r&&r.validatePointers(e)&&r.validate(e)&&(r.addCancelCallback(t._proxiedCancelHandler),r.addAcceptCallback(t._proxiedAcceptHandler),n.push(r))}for(;i.length;){var a=(0,s.aT)(i.get(0),ua)||[];(0,b.S6)(a,o),i=i.parent()}return n},_acceptHandler:function(e,t){var n=this;this._eachEmitter((function(i){i!==e&&n._cancelEmitter(i,t)}))},_cancelHandler:function(e,t){this._cancelEmitter(e,t)},_cancelEmitter:function(e,t){var n=this._activeEmitters;t?e.cancel(t):e.reset(),e.removeCancelCallback(),e.removeAcceptCallback();var i=n.indexOf(e);i>-1&&n.splice(i,1)},_cleanEmitters:function(e){this._applyToEmitters("end",e),this.reset(e)},_fetchEmitters:function(e){this._activeEmitters=this._emittersSet.slice(),this._applyToEmitters("start",e)},_pointerMoveHandler:function(e){this._applyToEmitters("move",e)},_pointerUpHandler:function(e){this._updateEmitters(e)},_mouseWheelHandler:function(e){this._allowInterruptionByMouseWheel()&&(e.pointers=[null],this._pointerDownHandler(e),this._adjustWheelEvent(e),this._pointerMoveHandler(e),e.pointers=[],this._pointerUpHandler(e))},_allowInterruptionByMouseWheel:function(){var e=!0;return this._eachEmitter((function(t){return e=t.allowInterruptionByMouseWheel()&&e})),e},_adjustWheelEvent:function(e){var t=null;if(this._eachEmitter((function(n){if(n.gesture){var i=n.getDirection(e);return"horizontal"!==i&&!e.shiftKey||"vertical"!==i&&e.shiftKey?(t=n,!1):void 0}})),t){var n=t.getDirection(e),i="both"===n&&!e.shiftKey||"vertical"===n;e[i?"pageY":"pageX"]+=e.delta}},isActive:function(e){var t=!1;return this._eachEmitter((function(n){t=t||n.getElement().is(e)})),t}}),ha=new pa,fa="dxEmitterSubscription";const ma=function(e){var t=e.emitter,n=e.events[0],i=e.events;(0,b.S6)(i,(function(r,o){(0,c.Z)(o,{noBubble:!e.bubble,setup:function(e){var i=(0,s.aT)(e,fa)||{},r=(0,s.aT)(e,ua)||{},a=r[n]||new t(e);i[o]=!0,r[n]=a,(0,s.aT)(e,ua,r),(0,s.aT)(e,fa,i)},add:function(e,t){(0,s.aT)(e,ua)[n].configure((0,x.l)({delegateSelector:t.selector},t.data),t.type)},teardown:function(e){var t=(0,s.aT)(e,fa),r=(0,s.aT)(e,ua),a=r[n];delete t[o];var l=!0;(0,b.S6)(i,(function(e,n){return l=l&&!t[n]})),l&&(ha.isActive(e)&&ha.resetEmitter(a),a&&a.dispose(),delete r[n])}})}))};var ga="dxclick",va=null,ya=null,xa=()=>{ya=null},ba=function(e){var t,n,i=e.originalEvent,r=ya===i||i&&i.DXCLICK_FIRED;e.which&&1!==e.which||va||r||(i&&(i.DXCLICK_FIRED=!0),t=ya,n=xa,l.Z.off(bo(t),u,n),((e,t)=>{l.Z.one(bo(e),u,t)})(ya=i,xa),(0,fn.BX)({type:ga,originalEvent:e}))},_a=aa.inherit({ctor:function(e){this.callBase(e),l.Z.on(this.getElement(),"click",ba)},start:function(e){va=null},cancel:function(){va=!0},dispose:function(){l.Z.off(this.getElement(),"click",ba)}});!function(){if(!pi.real().generic){var e=null,t=!1,n=zn.Z.getDocument();l.Z.subscribeGlobal(n,(0,fn.V4)(ra.down,"NATIVE_CLICK_FIXER"),(function(n){e=n.target,t=n.isDefaultPrevented()})),l.Z.subscribeGlobal(n,(0,fn.V4)("click","NATIVE_CLICK_FIXER"),(function(n){var i,o=(0,r.Z)(n.target);t||!e||o.is(e)||(0,r.Z)(e).is("label")||(i=o,!(0,r.Z)(i).is("input, textarea, select, button ,:focus, :focus *"))||Di(),e=null,t=!1}))}}(),ma({emitter:_a,bubble:!0,events:[ga]});var wa="dxHoverStart",Ea="dxhoverstart",Ca=(0,fn.V4)(ra.enter,wa),Ta="dxHoverEnd",ka="dxhoverend",Sa=(0,fn.V4)(ra.leave,Ta),Da=y.Z.inherit({noBubble:!0,ctor:function(){this._handlerArrayKeyPath=this._eventNamespace+"_HandlerStore"},setup:function(e){(0,s.aT)(e,this._handlerArrayKeyPath,{})},add:function(e,t){var n=this,i=function(e){n._handler(e)};l.Z.on(e,this._originalEventName,t.selector,i),(0,s.aT)(e,this._handlerArrayKeyPath)[t.guid]=i},_handler:function(e){(0,fn.z6)(e)||pi.isSimulator()||(0,fn.BX)({type:this._eventName,originalEvent:e,delegateTarget:e.delegateTarget})},remove:function(e,t){var n=(0,s.aT)(e,this._handlerArrayKeyPath)[t.guid];l.Z.off(e,this._originalEventName,t.selector,n)},teardown:function(e){(0,s.NU)(e,this._handlerArrayKeyPath)}}),Ra=Da.inherit({ctor:function(){this._eventNamespace=wa,this._eventName=Ea,this._originalEventName=Ca,this.callBase()},_handler:function(e){(e.pointers||[]).length||this.callBase(e)}}),Aa=Da.inherit({ctor:function(){this._eventNamespace=Ta,this._eventName=ka,this._originalEventName=Sa,this.callBase()}});(0,c.Z)(Ea,new Ra),(0,c.Z)(ka,new Aa);var Oa=$n.Z.add,Ma=Math.abs,Na=0,Ua=10,Ia=(0,Kn.Z)((function(){var e="desktop"===pi.real().deviceType;if(!(0,_o.Hj)("pointer-events")||!e)return C.ZT;var t=(0,r.Z)("<div>").addClass("dx-gesture-cover").css("pointerEvents","none");return l.Z.subscribeGlobal(t,"dxmousewheel",(function(e){e.preventDefault()})),Oa((function(){t.appendTo("body")})),function(e,n){t.css("pointerEvents",e?"all":"none"),e&&t.css("cursor",n)}})),Pa=aa.inherit({gesture:!0,configure:function(e){this.getElement().css("msTouchAction",e.immediate?"pinch-zoom":""),this.callBase(e)},allowInterruptionByMouseWheel:function(){return 2!==this._stage},getDirection:function(){return this.direction},_cancel:function(){this.callBase.apply(this,arguments),this._toggleGestureCover(!1),this._stage=Na},start:function(e){e._needSkipEvent||(0,fn.r1)(e)?this._cancel(e):(this._startEvent=(0,fn.yM)(e),this._startEventData=(0,fn.a0)(e),this._stage=1,this._init(e),this._setupImmediateTimer())},_setupImmediateTimer:function(){clearTimeout(this._immediateTimer),this._immediateAccepted=!1,this.immediate&&(this._immediateTimer=setTimeout(function(){this._immediateAccepted=!0}.bind(this),180))},move:function(e){if(1===this._stage&&this._directionConfirmed(e)){if(this._stage=2,this._resetActiveElement(),this._toggleGestureCover(!0),this._clearSelection(e),this._adjustStartEvent(e),this._start(this._startEvent),this._stage===Na)return;this._requestAccept(e),this._move(e),this._forgetAccept()}else 2===this._stage&&(this._clearSelection(e),this._move(e))},_directionConfirmed:function(e){var t=this._getTouchBoundary(e),n=(0,fn.hM)(this._startEventData,(0,fn.a0)(e)),i=Ma(n.x),r=Ma(n.y),o=this._validateMove(t,i,r),a=this._validateMove(t,r,i),s=this.getDirection(e);return"both"===s&&(o||a)||"horizontal"===s&&o||"vertical"===s&&a||this._immediateAccepted},_validateMove:function(e,t,n){return t&&t>=e&&(!this.immediate||t>=n)},_getTouchBoundary:function(e){return this.immediate||(0,fn.pR)(e)?0:Ua},_adjustStartEvent:function(e){var t=this._getTouchBoundary(e),n=(0,fn.hM)(this._startEventData,(0,fn.a0)(e));this._startEvent.pageX+=k(n.x)*t,this._startEvent.pageY+=k(n.y)*t},_resetActiveElement:function(){"ios"===pi.real().platform&&this.getElement().find(":focus").length&&Di()},_toggleGestureCover:function(e){this._toggleGestureCoverImpl(e)},_toggleGestureCoverImpl:function(e){2===this._stage&&function(e,t){Ia()(e,t)}(e,this.getElement().css("cursor"))},_clearSelection:function(e){(0,fn.pR)(e)||(0,fn.z6)(e)||(()=>{var e=Si.getSelection();if(e&&"Caret"!==e.type)if(e.empty)e.empty();else if(e.removeAllRanges)try{e.removeAllRanges()}catch(e){}})()},end:function(e){this._toggleGestureCover(!1),2===this._stage?this._end(e):1===this._stage&&this._stop(e),this._stage=Na},dispose:function(){clearTimeout(this._immediateTimer),this.callBase.apply(this,arguments),this._toggleGestureCover(!1)},_init:C.ZT,_start:C.ZT,_move:C.ZT,_stop:C.ZT,_end:C.ZT});Pa.initialTouchBoundary=Ua,Pa.touchBoundary=function(e){if(!(0,d.$K)(e))return Ua;Ua=e};const La=Pa;var Fa,Za=y.Z.abstract,Ha=pi.real(),Ba="scroll",ja="dxscrollinit",za="dxscrollstart",Ga="dxscroll",Va="dxscrollend",Wa="dxscrollstop",$a="dxscrollcancel",Ka=y.Z.inherit((Fa=(0,fn.V4)(Ba,"dxScrollEmitter"),{ctor:function(e){this._element=e,this._locked=!1,this._proxiedScroll=e=>{this._disposed||this._scroll(e)},l.Z.on(this._element,Fa,this._proxiedScroll)},_scroll:Za,check:function(e,t){this._locked&&t()},dispose:function(){this._disposed=!0,l.Z.off(this._element,Fa,this._proxiedScroll)}})),qa=Ka.inherit({ctor:function(e,t){this.callBase(e),this._timeout=t},_scroll:function(){this._prepare(),this._forget()},_prepare:function(){this._timer&&this._clearTimer(),this._locked=!0},_clearTimer:function(){clearTimeout(this._timer),this._locked=!1,this._timer=null},_forget:function(){var e=this;this._timer=setTimeout((function(){e._clearTimer()}),this._timeout)},dispose:function(){this.callBase(),this._clearTimer()}}),Ya=qa.inherit({ctor:function(e){this.callBase(e,400),this._lastWheelDirection=null},check:function(e,t){this._checkDirectionChanged(e),this.callBase(e,t)},_checkDirectionChanged:function(e){if((0,fn.pR)(e)){var t=e.shiftKey||!1,n=null!==this._lastWheelDirection&&t!==this._lastWheelDirection;this._lastWheelDirection=t,this._locked=this._locked&&!n}else this._lastWheelDirection=null}}),Xa=qa.inherit({ctor:function(e){this.callBase(e,400)}});!function(){var{ios:e,android:t}=Ha;(e||t)&&(Xa=Ka.inherit({_scroll:function(){this._locked=!0;var e=this;xo(this._scrollFrame),this._scrollFrame=yo((function(){e._locked=!1}))},check:function(e,t){xo(this._scrollFrame),xo(this._checkFrame);var n=this,i=this.callBase;this._checkFrame=yo((function(){i.call(n,e,t),n._locked=!1}))},dispose:function(){this.callBase(),xo(this._scrollFrame),xo(this._checkFrame)}}))}();var Ja,Qa=La.inherit((Ja=Math.round(1e3/60),{ctor:function(e){this.callBase.apply(this,arguments),this.direction="both",this._pointerLocker=new Xa(e),this._wheelLocker=new Ya(e)},validate:function(){return!0},configure:function(e){e.scrollTarget&&(this._pointerLocker.dispose(),this._wheelLocker.dispose(),this._pointerLocker=new Xa(e.scrollTarget),this._wheelLocker=new Ya(e.scrollTarget)),this.callBase(e)},_init:function(e){this._wheelLocker.check(e,function(){(0,fn.pR)(e)&&this._accept(e)}.bind(this)),this._pointerLocker.check(e,function(){var t=this.isNative&&(0,fn.N5)(e);(0,fn.pR)(e)||t||this._accept(e)}.bind(this)),this._fireEvent(ja,e),this._prevEventData=(0,fn.a0)(e)},move:function(e){this.callBase.apply(this,arguments),e.isScrollingEvent=this.isNative||e.isScrollingEvent},_start:function(e){this._savedEventData=(0,fn.a0)(e),this._fireEvent(za,e),this._prevEventData=(0,fn.a0)(e)},_move:function(e){var t=(0,fn.a0)(e);this._fireEvent(Ga,e,{delta:(0,fn.hM)(this._prevEventData,t)}),(0,fn.hM)(this._savedEventData,t).time>200&&(this._savedEventData=this._prevEventData),this._prevEventData=(0,fn.a0)(e)},_end:function(e){var t=(0,fn.hM)(this._prevEventData,(0,fn.a0)(e)),n={x:0,y:0};if(!(0,fn.pR)(e)&&t.time<100){var i=(0,fn.hM)(this._savedEventData,this._prevEventData),r=Ja/i.time;n={x:i.x*r,y:i.y*r}}this._fireEvent(Va,e,{velocity:n})},_stop:function(e){this._fireEvent(Wa,e)},cancel:function(e){this.callBase.apply(this,arguments),this._fireEvent($a,e)},dispose:function(){this.callBase.apply(this,arguments),this._pointerLocker.dispose(),this._wheelLocker.dispose()},_clearSelection:function(){if(!this.isNative)return this.callBase.apply(this,arguments)},_toggleGestureCover:function(){if(!this.isNative)return this.callBase.apply(this,arguments)}}));ma({emitter:Qa,events:[ja,za,Ga,Va,Wa,$a]});const es={init:ja,start:za,move:Ga,end:Va,stop:Wa,cancel:$a,scroll:Ba};function ts(e){return(t,n,i,r)=>{var o=r?(0,fn.V4)(e,r):e;if(n)return l.Z.on(t,o,i,n),()=>{l.Z.off(t,o,n)}}}ts(ga),ts(es.scroll),ts(es.init),ts(es.start),ts(es.move),ts(es.end),ts(es.stop),ts(es.cancel),ts(ra.down),ts(ra.up),ts(ra.move),ts("mouseenter"),ts("mouseleave"),ts("keydown");var ns=ts("dxactive"),is=ts("dxinactive"),rs=ts("dxhoverstart"),os=ts("dxhoverend"),as=ts("focusin"),ss=ts("focusout"),ls={className:"",activeStateEnabled:!1,disabled:!1,focusStateEnabled:!1,hoverStateEnabled:!1,tabIndex:0,visible:!0},ds=function(e){const t=Tn++;return{id:t,defaultValue:e,Provider:class extends hn{getChildContext(){return Object.assign(Object.assign({},this.context),{[t]:this.props.value||e})}render(){return this.props.children}}}}(void 0),cs=["children","rtlEnabled"];class us extends wn{constructor(e){super(e),this.state={},this.__getterCache={}}getChildContext(){return(0,v.Z)({},this.context,{[ds.id]:this.config||ds.defaultValue})}get config(){return void 0!==this.__getterCache.config?this.__getterCache.config:this.__getterCache.config=(()=>({rtlEnabled:this.props.rtlEnabled}))()}get restAttributes(){return gr(this.props,cs)}componentWillUpdate(e,t,n){this.props.rtlEnabled!==e.rtlEnabled&&(this.__getterCache.config=void 0)}render(){var e=this.props;return[(0,v.Z)({},e),this.config,this.restAttributes][0].children}}us.defaultProps={};var ps=["_feedbackHideTimeout","_feedbackShowTimeout","accessKey","activeStateEnabled","activeStateUnit","addWidgetClass","aria","children","className","classes","cssText","disabled","focusStateEnabled","height","hint","hoverStateEnabled","name","onActive","onClick","onDimensionChanged","onFocusIn","onFocusOut","onHoverEnd","onHoverStart","onInactive","onKeyDown","onRootElementRendered","onVisibilityChange","rootElementRef","rtlEnabled","tabIndex","visible","width"],hs=Object.create(Object.prototype,(0,v.Z)(Object.getOwnPropertyDescriptors(ls),Object.getOwnPropertyDescriptors({_feedbackHideTimeout:400,_feedbackShowTimeout:30,cssText:"",aria:Object.freeze({}),classes:"",name:"",addWidgetClass:!0})));class fs extends Cn{constructor(e){super(e),this.widgetElementRef={current:null},this.state={active:!1,focused:!1,hovered:!1},this.setRootElementRef=this.setRootElementRef.bind(this),this.activeEffect=this.activeEffect.bind(this),this.inactiveEffect=this.inactiveEffect.bind(this),this.clickEffect=this.clickEffect.bind(this),this.focus=this.focus.bind(this),this.blur=this.blur.bind(this),this.activate=this.activate.bind(this),this.deactivate=this.deactivate.bind(this),this.focusInEffect=this.focusInEffect.bind(this),this.focusOutEffect=this.focusOutEffect.bind(this),this.hoverStartEffect=this.hoverStartEffect.bind(this),this.hoverEndEffect=this.hoverEndEffect.bind(this),this.keyboardEffect=this.keyboardEffect.bind(this),this.resizeEffect=this.resizeEffect.bind(this),this.windowResizeEffect=this.windowResizeEffect.bind(this),this.visibilityEffect=this.visibilityEffect.bind(this),this.checkDeprecation=this.checkDeprecation.bind(this),this.applyCssTextEffect=this.applyCssTextEffect.bind(this)}get config(){return this.context[ds.id]?this.context[ds.id]:ds.defaultValue}createEffects(){return[new kn(this.setRootElementRef,[]),new kn(this.activeEffect,[this.props._feedbackShowTimeout,this.props.activeStateEnabled,this.props.activeStateUnit,this.props.disabled,this.props.onActive]),new kn(this.inactiveEffect,[this.props._feedbackHideTimeout,this.props.activeStateEnabled,this.props.activeStateUnit,this.props.onInactive,this.state.active]),new kn(this.clickEffect,[this.props.disabled,this.props.name,this.props.onClick]),new kn(this.focusInEffect,[this.props.disabled,this.props.focusStateEnabled,this.props.name,this.props.onFocusIn]),new kn(this.focusOutEffect,[this.props.focusStateEnabled,this.props.name,this.props.onFocusOut,this.state.focused]),new kn(this.hoverStartEffect,[this.props.activeStateUnit,this.props.disabled,this.props.hoverStateEnabled,this.props.onHoverStart,this.state.active]),new kn(this.hoverEndEffect,[this.props.activeStateUnit,this.props.hoverStateEnabled,this.props.onHoverEnd,this.state.hovered]),new kn(this.keyboardEffect,[this.props.focusStateEnabled,this.props.onKeyDown]),new kn(this.resizeEffect,[this.props.name,this.props.onDimensionChanged]),new kn(this.windowResizeEffect,[this.props.onDimensionChanged]),new kn(this.visibilityEffect,[this.props.name,this.props.onVisibilityChange]),new kn(this.checkDeprecation,[this.props.height,this.props.width]),new kn(this.applyCssTextEffect,[this.props.cssText]),Sn()]}updateEffects(){var e,t,n,i,r,o,a,s,l,d,c,u,p;null===(e=this._effects[1])||void 0===e||e.update([this.props._feedbackShowTimeout,this.props.activeStateEnabled,this.props.activeStateUnit,this.props.disabled,this.props.onActive]),null===(t=this._effects[2])||void 0===t||t.update([this.props._feedbackHideTimeout,this.props.activeStateEnabled,this.props.activeStateUnit,this.props.onInactive,this.state.active]),null===(n=this._effects[3])||void 0===n||n.update([this.props.disabled,this.props.name,this.props.onClick]),null===(i=this._effects[4])||void 0===i||i.update([this.props.disabled,this.props.focusStateEnabled,this.props.name,this.props.onFocusIn]),null===(r=this._effects[5])||void 0===r||r.update([this.props.focusStateEnabled,this.props.name,this.props.onFocusOut,this.state.focused]),null===(o=this._effects[6])||void 0===o||o.update([this.props.activeStateUnit,this.props.disabled,this.props.hoverStateEnabled,this.props.onHoverStart,this.state.active]),null===(a=this._effects[7])||void 0===a||a.update([this.props.activeStateUnit,this.props.hoverStateEnabled,this.props.onHoverEnd,this.state.hovered]),null===(s=this._effects[8])||void 0===s||s.update([this.props.focusStateEnabled,this.props.onKeyDown]),null===(l=this._effects[9])||void 0===l||l.update([this.props.name,this.props.onDimensionChanged]),null===(d=this._effects[10])||void 0===d||d.update([this.props.onDimensionChanged]),null===(c=this._effects[11])||void 0===c||c.update([this.props.name,this.props.onVisibilityChange]),null===(u=this._effects[12])||void 0===u||u.update([this.props.height,this.props.width]),null===(p=this._effects[13])||void 0===p||p.update([this.props.cssText])}setRootElementRef(){var{onRootElementRendered:e,rootElementRef:t}=this.props;t&&(t.current=this.widgetElementRef.current),null==e||e(this.widgetElementRef.current)}activeEffect(){var{_feedbackShowTimeout:e,activeStateEnabled:t,activeStateUnit:n,disabled:i,onActive:r}=this.props,o=n;if(t&&!i)return ns(this.widgetElementRef.current,(e=>{this.setState((e=>({active:!0}))),null==r||r(e)}),{timeout:e,selector:o},"UIFeedback")}inactiveEffect(){var{_feedbackHideTimeout:e,activeStateEnabled:t,activeStateUnit:n,onInactive:i}=this.props,r=n;if(t)return is(this.widgetElementRef.current,(e=>{this.state.active&&(this.setState((e=>({active:!1}))),null==i||i(e))}),{timeout:e,selector:r},"UIFeedback")}clickEffect(){var{disabled:e,name:t,onClick:n}=this.props,i=t;if(n&&!e)return function(e,t){var{namespace:n}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};l.Z.on(e,Ji("dxclick",n),t)}(this.widgetElementRef.current,n,{namespace:i}),()=>function(e){var{namespace:t}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};l.Z.off(e,Ji("dxclick",t))}(this.widgetElementRef.current,{namespace:i})}focusInEffect(){var{disabled:e,focusStateEnabled:t,name:n,onFocusIn:i}=this.props,r="".concat(n,"Focus");if(t&&!e)return as(this.widgetElementRef.current,(e=>{e.isDefaultPrevented()||(this.setState((e=>({focused:!0}))),null==i||i(e))}),null,r)}focusOutEffect(){var{focusStateEnabled:e,name:t,onFocusOut:n}=this.props,i="".concat(t,"Focus");if(e)return ss(this.widgetElementRef.current,(e=>{!e.isDefaultPrevented()&&this.state.focused&&(this.setState((e=>({focused:!1}))),null==n||n(e))}),null,i)}hoverStartEffect(){var{activeStateUnit:e,disabled:t,hoverStateEnabled:n,onHoverStart:i}=this.props,r=e;if(n&&!t)return rs(this.widgetElementRef.current,(e=>{!this.state.active&&this.setState((e=>({hovered:!0}))),null==i||i(e)}),{selector:r},"UIFeedback")}hoverEndEffect(){var{activeStateUnit:e,hoverStateEnabled:t,onHoverEnd:n}=this.props,i=e;if(t)return os(this.widgetElementRef.current,(e=>{this.state.hovered&&(this.setState((e=>({hovered:!1}))),null==n||n(e))}),{selector:i},"UIFeedback")}keyboardEffect(){var e,t,n,i,{focusStateEnabled:r,onKeyDown:o}=this.props;if(r&&o){var a=(e=this.widgetElementRef.current,t=this.widgetElementRef.current,n=e=>o(e),i="keyboardProcessorId".concat(ir++),rr[i]=new xn({element:e,focusTarget:t,handler:n}),i);return()=>(e=>{e&&rr[e]&&(rr[e].dispose(),delete rr[e])})(a)}}resizeEffect(){var e="".concat(this.props.name,"VisibilityChange"),{onDimensionChanged:t}=this.props;if(t)return Qi(this.widgetElementRef.current,t,{namespace:e}),()=>er(this.widgetElementRef.current,{namespace:e})}windowResizeEffect(){var{onDimensionChanged:e}=this.props;if(e)return Yn.add(e),()=>{Yn.remove(e)}}visibilityEffect(){var{name:e,onVisibilityChange:t}=this.props,n="".concat(e,"VisibilityChange");if(t)return tr(this.widgetElementRef.current,(()=>t(!0)),(()=>t(!1)),{namespace:n}),()=>nr(this.widgetElementRef.current,{namespace:n})}checkDeprecation(){var{height:e,width:t}=this.props;(0,d.mf)(t)&&a.Z.log("W0017","width"),(0,d.mf)(e)&&a.Z.log("W0017","height")}applyCssTextEffect(){var{cssText:e}=this.props;""!==e&&(this.widgetElementRef.current.style.cssText=e)}get shouldRenderConfigProvider(){var e,t,n,i,{rtlEnabled:r}=this.props;return e=r,t=this.config,n=(0,d.$K)(e),i=(0,d.$K)((0,F.Z)().rtlEnabled)&&!n&&!(0,d.$K)(null==t?void 0:t.rtlEnabled),n&&e!==(null==t?void 0:t.rtlEnabled)||i}get rtlEnabled(){var e,t,{rtlEnabled:n}=this.props;return e=n,t=this.config,void 0!==e?e:void 0!==(null==t?void 0:t.rtlEnabled)?t.rtlEnabled:(0,F.Z)().rtlEnabled}get attributes(){var e,{aria:t,disabled:n,focusStateEnabled:i,visible:r}=this.props,o=i&&!n&&this.props.accessKey;return(0,v.Z)({},(0,x.l)({},o&&{accessKey:o}),(e=(0,v.Z)({},t,{disabled:n,hidden:!r}),Object.keys(e).reduce(((t,n)=>e[n]?(0,v.Z)({},t,{["role"===n||"id"===n?n:"aria-".concat(n)]:String(e[n])}):t),{})),(0,x.l)({},this.restAttributes))}get styles(){var{height:e,width:t}=this.props,n=this.restAttributes.style||{},i=(0,_o.bh)("width",(0,d.mf)(t)?t():t),r=(0,_o.bh)("height",(0,d.mf)(e)?e():e);return(0,v.Z)({},n,{height:null!=r?r:n.height,width:null!=i?i:n.width})}get cssClasses(){var{activeStateEnabled:e,addWidgetClass:t,className:n,classes:i,disabled:r,focusStateEnabled:o,hoverStateEnabled:a,onVisibilityChange:s,visible:l}=this.props,d=!!o&&!r,c=!!a&&!r,u=!!e&&!r;return $r({"dx-widget":!!t,[String(i)]:!!i,[String(n)]:!!n,"dx-state-disabled":!!r,"dx-state-invisible":!l,"dx-state-focused":!!this.state.focused&&d,"dx-state-active":!!this.state.active&&u,"dx-state-hover":!!this.state.hovered&&c&&!this.state.active,"dx-rtl":!!this.rtlEnabled,"dx-visibility-change-handler":!!s})}get tabIndex(){var{disabled:e,focusStateEnabled:t,tabIndex:n}=this.props;return t&&!e?n:void 0}get restAttributes(){return gr(this.props,ps)}focus(){var e;e=this.widgetElementRef.current,l.Z.trigger(e,"focus")}blur(){var e=zn.Z.getActiveElement(this.widgetElementRef.current);this.widgetElementRef.current===e&&e.blur()}activate(){this.setState((e=>({active:!0})))}deactivate(){this.setState((e=>({active:!1})))}render(){var e,t,n=this.props;return t=Je(Ke(1,"div",(e={props:(0,v.Z)({},n),active:this.state.active,focused:this.state.focused,hovered:this.state.hovered,widgetElementRef:this.widgetElementRef,config:this.config,shouldRenderConfigProvider:this.shouldRenderConfigProvider,rtlEnabled:this.rtlEnabled,attributes:this.attributes,styles:this.styles,cssClasses:this.cssClasses,tabIndex:this.tabIndex,restAttributes:this.restAttributes}).cssClasses,e.props.children,0,(0,v.Z)({},e.attributes,{tabIndex:e.tabIndex,title:e.props.hint,style:jn(e.styles)}),null,e.widgetElementRef)),e.shouldRenderConfigProvider?qe(2,us,{rtlEnabled:e.rtlEnabled,children:t}):t}}fs.defaultProps=hs;var ms=["accessKey","activeStateEnabled","children","className","disabled","focusStateEnabled","height","hint","hoverStateEnabled","icon","iconPosition","iconTemplate","onClick","onKeyDown","onSubmit","pressed","rtlEnabled","stylingMode","tabIndex","template","templateData","text","type","useInkRipple","useSubmitBehavior","visible","width"],gs=["outlined","text","contained"],vs=Object.create(Object.prototype,(0,v.Z)(Object.getOwnPropertyDescriptors(ls),Object.getOwnPropertyDescriptors({activeStateEnabled:!0,hoverStateEnabled:!0,icon:"",iconPosition:"left",stylingMode:"contained",text:"",type:"normal",useInkRipple:!1,useSubmitBehavior:!1,templateData:Object.freeze({})}))),ys=function(){return arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]}([{device:()=>"desktop"===pi.real().deviceType&&!pi.isSimulator(),options:{focusStateEnabled:!0}},{device:()=>Vr(jr()),options:{useInkRipple:!0}}]),xs=e=>e&&(e.defaultProps?t=>Je(qe(2,e,(0,v.Z)({},t))):e);class bs extends Cn{constructor(e){super(e),this.state={},this.contentRef={current:null},this.inkRippleRef={current:null},this.submitInputRef={current:null},this.widgetRef={current:null},this.__getterCache={},this.focus=this.focus.bind(this),this.activate=this.activate.bind(this),this.deactivate=this.deactivate.bind(this),this.submitEffect=this.submitEffect.bind(this),this.checkDeprecation=this.checkDeprecation.bind(this),this.onActive=this.onActive.bind(this),this.onInactive=this.onInactive.bind(this),this.onWidgetClick=this.onWidgetClick.bind(this),this.keyDown=this.keyDown.bind(this)}createEffects(){return[new kn(this.submitEffect,[this.props.onSubmit,this.props.useSubmitBehavior]),new kn(this.checkDeprecation,[this.props.type]),Sn()]}updateEffects(){var e,t;null===(e=this._effects[0])||void 0===e||e.update([this.props.onSubmit,this.props.useSubmitBehavior]),null===(t=this._effects[1])||void 0===t||t.update([this.props.type])}submitEffect(){var{onSubmit:e,useSubmitBehavior:t}=this.props;if(t&&e)return function(e,t){var{namespace:n}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};l.Z.on(e,Ji("click",n),t)}(this.submitInputRef.current,(t=>e({event:t,submitInput:this.submitInputRef.current})),{namespace:"UIFeedback"}),()=>function(e){var{namespace:t}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};l.Z.off(e,Ji("click",t))}(this.submitInputRef.current,{namespace:"UIFeedback"})}checkDeprecation(){var{type:e}=this.props;"back"===e&&a.Z.log("W0016","type","back","22.2","Use the 'back' icon instead")}onActive(e){var{useInkRipple:t}=this.props;t&&this.inkRippleRef.current.showWave({element:this.contentRef.current,event:e})}onInactive(e){var{useInkRipple:t}=this.props;t&&this.inkRippleRef.current.hideWave({element:this.contentRef.current,event:e})}onWidgetClick(e){var{onClick:t,useSubmitBehavior:n}=this.props;null==t||t({event:e}),n&&this.submitInputRef.current.click()}keyDown(e){var{onKeyDown:t}=this.props,{keyName:n,originalEvent:i,which:r}=e,o=null==t?void 0:t(e);if(null!=o&&o.cancel)return o;"space"!==n&&"space"!==r&&"enter"!==n&&"enter"!==r||(i.preventDefault(),this.onWidgetClick(i))}get aria(){var{icon:e,text:t}=this.props,n=(null!=t?t:"")||le.format((0,re._A)(e,!0))||e;return!t&&e&&"image"===fr(e)&&(n=e.includes("base64")?"Base64":e.replace(/.+\/([^.]+)\..+$/,"$1")),(0,v.Z)({role:"button"},n?{label:n}:{})}get cssClasses(){return(e=>{var{icon:t,iconPosition:n,stylingMode:i,text:r,type:o}=e,a=i&&gs.includes(i);return $r({"dx-button":!0,["dx-button-mode-".concat(a?i:"contained")]:!0,["dx-button-".concat(null!=o?o:"normal")]:!0,"dx-button-has-text":!!r,"dx-button-has-icon":!!t,"dx-button-icon-right":"left"!==n})})(this.props)}get iconSource(){var{icon:e,type:t}=this.props;return e||"back"===t?(null!=e?e:"")||"back":""}get inkRippleConfig(){return void 0!==this.__getterCache.inkRippleConfig?this.__getterCache.inkRippleConfig:this.__getterCache.inkRippleConfig=(()=>{var{icon:e,text:t,type:n}=this.props;return!t&&e||"back"===n?{isCentered:!0,useHoldAnimation:!1,waveSizeCoefficient:1}:{}})()}get buttonTemplateData(){var{icon:e,templateData:t,text:n}=this.props;return(0,v.Z)({icon:e,text:n},t)}get restAttributes(){return gr(this.props,ms)}focus(){this.widgetRef.current.focus()}activate(){this.widgetRef.current.activate()}deactivate(){this.widgetRef.current.deactivate()}componentWillUpdate(e,t,n){super.componentWillUpdate(),this.props.icon===e.icon&&this.props.text===e.text&&this.props.type===e.type||(this.__getterCache.inkRippleConfig=void 0)}render(){var e=this.props;return(e=>{var{children:t,iconPosition:n,iconTemplate:i,template:r,text:o}=e.props,a=!e.props.template&&!t&&""!==o,s="left"===n,l=!e.props.template&&!t&&(e.iconSource||e.props.iconTemplate)&&qe(2,qr,{source:e.iconSource,position:n,iconTemplate:i});return Je(qe(2,fs,(0,v.Z)({accessKey:e.props.accessKey,activeStateEnabled:e.props.activeStateEnabled,aria:e.aria,className:e.props.className,classes:e.cssClasses,disabled:e.props.disabled,focusStateEnabled:e.props.focusStateEnabled,height:e.props.height,hint:e.props.hint,hoverStateEnabled:e.props.hoverStateEnabled,onActive:e.onActive,onClick:e.onWidgetClick,onInactive:e.onInactive,onKeyDown:e.keyDown,rtlEnabled:e.props.rtlEnabled,tabIndex:e.props.tabIndex,visible:e.props.visible,width:e.props.width},e.restAttributes,{children:Ke(1,"div","dx-button-content",[e.props.template&&r({data:e.buttonTemplateData}),!e.props.template&&t,s&&l,a&&Ke(1,"span","dx-button-text",o,0),!s&&l,e.props.useSubmitBehavior&&Ke(64,"input","dx-button-submit-input",null,1,{type:"submit",tabIndex:-1},null,e.submitInputRef),e.props.useInkRipple&&qe(2,ho,{config:e.inkRippleConfig},null,e.inkRippleRef)],0,null,null,e.contentRef)}),null,e.widgetRef))})({props:(0,v.Z)({},e,{template:xs(e.template),iconTemplate:xs(e.iconTemplate)}),contentRef:this.contentRef,submitInputRef:this.submitInputRef,inkRippleRef:this.inkRippleRef,widgetRef:this.widgetRef,onActive:this.onActive,onInactive:this.onInactive,onWidgetClick:this.onWidgetClick,keyDown:this.keyDown,aria:this.aria,cssClasses:this.cssClasses,iconSource:this.iconSource,inkRippleConfig:this.inkRippleConfig,buttonTemplateData:this.buttonTemplateData,restAttributes:this.restAttributes})}}bs.defaultProps=Object.create(Object.prototype,(0,v.Z)(Object.getOwnPropertyDescriptors(vs),Object.getOwnPropertyDescriptors((0,v.Z)({},fi(ys)))));var _s,ws,Es,Cs=[];class Ts extends mr{getProps(){var e=super.getProps();return e.onKeyDown=this._wrapKeyDownHandler(e.onKeyDown),e}focus(){var e;return null===(e=this.viewRef)||void 0===e?void 0:e.focus(...arguments)}activate(){var e;return null===(e=this.viewRef)||void 0===e?void 0:e.activate(...arguments)}deactivate(){var e;return null===(e=this.viewRef)||void 0===e?void 0:e.deactivate(...arguments)}_getActionConfigs(){return{onClick:{excludeValidators:["readOnly"]},onSubmit:{}}}get _propsInfo(){return{twoWay:[],allowNull:[],elements:["onSubmit"],templates:["template","iconTemplate"],props:["activeStateEnabled","hoverStateEnabled","icon","iconPosition","onClick","onSubmit","pressed","stylingMode","template","iconTemplate","text","type","useInkRipple","useSubmitBehavior","templateData","className","accessKey","disabled","focusStateEnabled","height","hint","onKeyDown","rtlEnabled","tabIndex","visible","width"]}}get _viewComponent(){return bs}}_s="dxButton",ws=Ts,Es?ws[_s]=Es:Es=ws,g(Es,_s),o.Z.fire(_s,Es),Ts.defaultOptions=function(e){Cs.push(e),bs.defaultProps=Object.create(Object.prototype,(0,v.Z)(Object.getOwnPropertyDescriptors(bs.defaultProps),Object.getOwnPropertyDescriptors(fi(ys)),Object.getOwnPropertyDescriptors(fi(Cs))))};const ks=Ts},8824:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var i=(0,n(4795).Z)()},9755:function(e,t){var n;!function(t,n){"use strict";"object"==typeof e.exports?e.exports=t.document?n(t,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return n(e)}:n(t)}("undefined"!=typeof window?window:this,(function(i,r){"use strict";var o=[],a=Object.getPrototypeOf,s=o.slice,l=o.flat?function(e){return o.flat.call(e)}:function(e){return o.concat.apply([],e)},d=o.push,c=o.indexOf,u={},p=u.toString,h=u.hasOwnProperty,f=h.toString,m=f.call(Object),g={},v=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType&&"function"!=typeof e.item},y=function(e){return null!=e&&e===e.window},x=i.document,b={type:!0,src:!0,nonce:!0,noModule:!0};function _(e,t,n){var i,r,o=(n=n||x).createElement("script");if(o.text=e,t)for(i in b)(r=t[i]||t.getAttribute&&t.getAttribute(i))&&o.setAttribute(i,r);n.head.appendChild(o).parentNode.removeChild(o)}function w(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?u[p.call(e)]||"object":typeof e}var E="3.6.4",C=function(e,t){return new C.fn.init(e,t)};function T(e){var t=!!e&&"length"in e&&e.length,n=w(e);return!v(e)&&!y(e)&&("array"===n||0===t||"number"==typeof t&&t>0&&t-1 in e)}C.fn=C.prototype={jquery:E,constructor:C,length:0,toArray:function(){return s.call(this)},get:function(e){return null==e?s.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=C.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return C.each(this,e)},map:function(e){return this.pushStack(C.map(this,(function(t,n){return e.call(t,n,t)})))},slice:function(){return this.pushStack(s.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(C.grep(this,(function(e,t){return(t+1)%2})))},odd:function(){return this.pushStack(C.grep(this,(function(e,t){return t%2})))},eq:function(e){var t=this.length,n=+e+(e<0?t:0);return this.pushStack(n>=0&&n<t?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:d,sort:o.sort,splice:o.splice},C.extend=C.fn.extend=function(){var e,t,n,i,r,o,a=arguments[0]||{},s=1,l=arguments.length,d=!1;for("boolean"==typeof a&&(d=a,a=arguments[s]||{},s++),"object"==typeof a||v(a)||(a={}),s===l&&(a=this,s--);s<l;s++)if(null!=(e=arguments[s]))for(t in e)i=e[t],"__proto__"!==t&&a!==i&&(d&&i&&(C.isPlainObject(i)||(r=Array.isArray(i)))?(n=a[t],o=r&&!Array.isArray(n)?[]:r||C.isPlainObject(n)?n:{},r=!1,a[t]=C.extend(d,o,i)):void 0!==i&&(a[t]=i));return a},C.extend({expando:"jQuery"+(E+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,n;return!(!e||"[object Object]"!==p.call(e)||(t=a(e))&&("function"!=typeof(n=h.call(t,"constructor")&&t.constructor)||f.call(n)!==m))},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t,n){_(e,{nonce:t&&t.nonce},n)},each:function(e,t){var n,i=0;if(T(e))for(n=e.length;i<n&&!1!==t.call(e[i],i,e[i]);i++);else for(i in e)if(!1===t.call(e[i],i,e[i]))break;return e},makeArray:function(e,t){var n=t||[];return null!=e&&(T(Object(e))?C.merge(n,"string"==typeof e?[e]:e):d.call(n,e)),n},inArray:function(e,t,n){return null==t?-1:c.call(t,e,n)},merge:function(e,t){for(var n=+t.length,i=0,r=e.length;i<n;i++)e[r++]=t[i];return e.length=r,e},grep:function(e,t,n){for(var i=[],r=0,o=e.length,a=!n;r<o;r++)!t(e[r],r)!==a&&i.push(e[r]);return i},map:function(e,t,n){var i,r,o=0,a=[];if(T(e))for(i=e.length;o<i;o++)null!=(r=t(e[o],o,n))&&a.push(r);else for(o in e)null!=(r=t(e[o],o,n))&&a.push(r);return l(a)},guid:1,support:g}),"function"==typeof Symbol&&(C.fn[Symbol.iterator]=o[Symbol.iterator]),C.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),(function(e,t){u["[object "+t+"]"]=t.toLowerCase()}));var k=function(e){var t,n,i,r,o,a,s,l,d,c,u,p,h,f,m,g,v,y,x,b="sizzle"+1*new Date,_=e.document,w=0,E=0,C=le(),T=le(),k=le(),S=le(),D=function(e,t){return e===t&&(u=!0),0},R={}.hasOwnProperty,A=[],O=A.pop,M=A.push,N=A.push,U=A.slice,I=function(e,t){for(var n=0,i=e.length;n<i;n++)if(e[n]===t)return n;return-1},P="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",L="[\\x20\\t\\r\\n\\f]",F="(?:\\\\[\\da-fA-F]{1,6}"+L+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",Z="\\["+L+"*("+F+")(?:"+L+"*([*^$|!~]?=)"+L+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+F+"))|)"+L+"*\\]",H=":("+F+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+Z+")*)|.*)\\)|)",B=new RegExp(L+"+","g"),j=new RegExp("^"+L+"+|((?:^|[^\\\\])(?:\\\\.)*)"+L+"+$","g"),z=new RegExp("^"+L+"*,"+L+"*"),G=new RegExp("^"+L+"*([>+~]|"+L+")"+L+"*"),V=new RegExp(L+"|>"),W=new RegExp(H),$=new RegExp("^"+F+"$"),K={ID:new RegExp("^#("+F+")"),CLASS:new RegExp("^\\.("+F+")"),TAG:new RegExp("^("+F+"|[*])"),ATTR:new RegExp("^"+Z),PSEUDO:new RegExp("^"+H),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+L+"*(even|odd|(([+-]|)(\\d*)n|)"+L+"*(?:([+-]|)"+L+"*(\\d+)|))"+L+"*\\)|)","i"),bool:new RegExp("^(?:"+P+")$","i"),needsContext:new RegExp("^"+L+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+L+"*((?:-\\d)?\\d*)"+L+"*\\)|)(?=[^-]|$)","i")},q=/HTML$/i,Y=/^(?:input|select|textarea|button)$/i,X=/^h\d$/i,J=/^[^{]+\{\s*\[native \w/,Q=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ee=/[+~]/,te=new RegExp("\\\\[\\da-fA-F]{1,6}"+L+"?|\\\\([^\\r\\n\\f])","g"),ne=function(e,t){var n="0x"+e.slice(1)-65536;return t||(n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320))},ie=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,re=function(e,t){return t?"\0"===e?"�":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},oe=function(){p()},ae=be((function(e){return!0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()}),{dir:"parentNode",next:"legend"});try{N.apply(A=U.call(_.childNodes),_.childNodes),A[_.childNodes.length].nodeType}catch(e){N={apply:A.length?function(e,t){M.apply(e,U.call(t))}:function(e,t){for(var n=e.length,i=0;e[n++]=t[i++];);e.length=n-1}}}function se(e,t,i,r){var o,s,d,c,u,f,v,y=t&&t.ownerDocument,_=t?t.nodeType:9;if(i=i||[],"string"!=typeof e||!e||1!==_&&9!==_&&11!==_)return i;if(!r&&(p(t),t=t||h,m)){if(11!==_&&(u=Q.exec(e)))if(o=u[1]){if(9===_){if(!(d=t.getElementById(o)))return i;if(d.id===o)return i.push(d),i}else if(y&&(d=y.getElementById(o))&&x(t,d)&&d.id===o)return i.push(d),i}else{if(u[2])return N.apply(i,t.getElementsByTagName(e)),i;if((o=u[3])&&n.getElementsByClassName&&t.getElementsByClassName)return N.apply(i,t.getElementsByClassName(o)),i}if(n.qsa&&!S[e+" "]&&(!g||!g.test(e))&&(1!==_||"object"!==t.nodeName.toLowerCase())){if(v=e,y=t,1===_&&(V.test(e)||G.test(e))){for((y=ee.test(e)&&ve(t.parentNode)||t)===t&&n.scope||((c=t.getAttribute("id"))?c=c.replace(ie,re):t.setAttribute("id",c=b)),s=(f=a(e)).length;s--;)f[s]=(c?"#"+c:":scope")+" "+xe(f[s]);v=f.join(",")}try{return N.apply(i,y.querySelectorAll(v)),i}catch(t){S(e,!0)}finally{c===b&&t.removeAttribute("id")}}}return l(e.replace(j,"$1"),t,i,r)}function le(){var e=[];return function t(n,r){return e.push(n+" ")>i.cacheLength&&delete t[e.shift()],t[n+" "]=r}}function de(e){return e[b]=!0,e}function ce(e){var t=h.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function ue(e,t){for(var n=e.split("|"),r=n.length;r--;)i.attrHandle[n[r]]=t}function pe(e,t){var n=t&&e,i=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(i)return i;if(n)for(;n=n.nextSibling;)if(n===t)return-1;return e?1:-1}function he(e){return function(t){return"input"===t.nodeName.toLowerCase()&&t.type===e}}function fe(e){return function(t){var n=t.nodeName.toLowerCase();return("input"===n||"button"===n)&&t.type===e}}function me(e){return function(t){return"form"in t?t.parentNode&&!1===t.disabled?"label"in t?"label"in t.parentNode?t.parentNode.disabled===e:t.disabled===e:t.isDisabled===e||t.isDisabled!==!e&&ae(t)===e:t.disabled===e:"label"in t&&t.disabled===e}}function ge(e){return de((function(t){return t=+t,de((function(n,i){for(var r,o=e([],n.length,t),a=o.length;a--;)n[r=o[a]]&&(n[r]=!(i[r]=n[r]))}))}))}function ve(e){return e&&void 0!==e.getElementsByTagName&&e}for(t in n=se.support={},o=se.isXML=function(e){var t=e&&e.namespaceURI,n=e&&(e.ownerDocument||e).documentElement;return!q.test(t||n&&n.nodeName||"HTML")},p=se.setDocument=function(e){var t,r,a=e?e.ownerDocument||e:_;return a!=h&&9===a.nodeType&&a.documentElement?(f=(h=a).documentElement,m=!o(h),_!=h&&(r=h.defaultView)&&r.top!==r&&(r.addEventListener?r.addEventListener("unload",oe,!1):r.attachEvent&&r.attachEvent("onunload",oe)),n.scope=ce((function(e){return f.appendChild(e).appendChild(h.createElement("div")),void 0!==e.querySelectorAll&&!e.querySelectorAll(":scope fieldset div").length})),n.cssHas=ce((function(){try{return h.querySelector(":has(*,:jqfake)"),!1}catch(e){return!0}})),n.attributes=ce((function(e){return e.className="i",!e.getAttribute("className")})),n.getElementsByTagName=ce((function(e){return e.appendChild(h.createComment("")),!e.getElementsByTagName("*").length})),n.getElementsByClassName=J.test(h.getElementsByClassName),n.getById=ce((function(e){return f.appendChild(e).id=b,!h.getElementsByName||!h.getElementsByName(b).length})),n.getById?(i.filter.ID=function(e){var t=e.replace(te,ne);return function(e){return e.getAttribute("id")===t}},i.find.ID=function(e,t){if(void 0!==t.getElementById&&m){var n=t.getElementById(e);return n?[n]:[]}}):(i.filter.ID=function(e){var t=e.replace(te,ne);return function(e){var n=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return n&&n.value===t}},i.find.ID=function(e,t){if(void 0!==t.getElementById&&m){var n,i,r,o=t.getElementById(e);if(o){if((n=o.getAttributeNode("id"))&&n.value===e)return[o];for(r=t.getElementsByName(e),i=0;o=r[i++];)if((n=o.getAttributeNode("id"))&&n.value===e)return[o]}return[]}}),i.find.TAG=n.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):n.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,i=[],r=0,o=t.getElementsByTagName(e);if("*"===e){for(;n=o[r++];)1===n.nodeType&&i.push(n);return i}return o},i.find.CLASS=n.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&m)return t.getElementsByClassName(e)},v=[],g=[],(n.qsa=J.test(h.querySelectorAll))&&(ce((function(e){var t;f.appendChild(e).innerHTML="<a id='"+b+"'></a><select id='"+b+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&g.push("[*^$]="+L+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||g.push("\\["+L+"*(?:value|"+P+")"),e.querySelectorAll("[id~="+b+"-]").length||g.push("~="),(t=h.createElement("input")).setAttribute("name",""),e.appendChild(t),e.querySelectorAll("[name='']").length||g.push("\\["+L+"*name"+L+"*="+L+"*(?:''|\"\")"),e.querySelectorAll(":checked").length||g.push(":checked"),e.querySelectorAll("a#"+b+"+*").length||g.push(".#.+[+~]"),e.querySelectorAll("\\\f"),g.push("[\\r\\n\\f]")})),ce((function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=h.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&g.push("name"+L+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&g.push(":enabled",":disabled"),f.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&g.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),g.push(",.*:")}))),(n.matchesSelector=J.test(y=f.matches||f.webkitMatchesSelector||f.mozMatchesSelector||f.oMatchesSelector||f.msMatchesSelector))&&ce((function(e){n.disconnectedMatch=y.call(e,"*"),y.call(e,"[s!='']:x"),v.push("!=",H)})),n.cssHas||g.push(":has"),g=g.length&&new RegExp(g.join("|")),v=v.length&&new RegExp(v.join("|")),t=J.test(f.compareDocumentPosition),x=t||J.test(f.contains)?function(e,t){var n=9===e.nodeType&&e.documentElement||e,i=t&&t.parentNode;return e===i||!(!i||1!==i.nodeType||!(n.contains?n.contains(i):e.compareDocumentPosition&&16&e.compareDocumentPosition(i)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},D=t?function(e,t){if(e===t)return u=!0,0;var i=!e.compareDocumentPosition-!t.compareDocumentPosition;return i||(1&(i=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!n.sortDetached&&t.compareDocumentPosition(e)===i?e==h||e.ownerDocument==_&&x(_,e)?-1:t==h||t.ownerDocument==_&&x(_,t)?1:c?I(c,e)-I(c,t):0:4&i?-1:1)}:function(e,t){if(e===t)return u=!0,0;var n,i=0,r=e.parentNode,o=t.parentNode,a=[e],s=[t];if(!r||!o)return e==h?-1:t==h?1:r?-1:o?1:c?I(c,e)-I(c,t):0;if(r===o)return pe(e,t);for(n=e;n=n.parentNode;)a.unshift(n);for(n=t;n=n.parentNode;)s.unshift(n);for(;a[i]===s[i];)i++;return i?pe(a[i],s[i]):a[i]==_?-1:s[i]==_?1:0},h):h},se.matches=function(e,t){return se(e,null,null,t)},se.matchesSelector=function(e,t){if(p(e),n.matchesSelector&&m&&!S[t+" "]&&(!v||!v.test(t))&&(!g||!g.test(t)))try{var i=y.call(e,t);if(i||n.disconnectedMatch||e.document&&11!==e.document.nodeType)return i}catch(e){S(t,!0)}return se(t,h,null,[e]).length>0},se.contains=function(e,t){return(e.ownerDocument||e)!=h&&p(e),x(e,t)},se.attr=function(e,t){(e.ownerDocument||e)!=h&&p(e);var r=i.attrHandle[t.toLowerCase()],o=r&&R.call(i.attrHandle,t.toLowerCase())?r(e,t,!m):void 0;return void 0!==o?o:n.attributes||!m?e.getAttribute(t):(o=e.getAttributeNode(t))&&o.specified?o.value:null},se.escape=function(e){return(e+"").replace(ie,re)},se.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},se.uniqueSort=function(e){var t,i=[],r=0,o=0;if(u=!n.detectDuplicates,c=!n.sortStable&&e.slice(0),e.sort(D),u){for(;t=e[o++];)t===e[o]&&(r=i.push(o));for(;r--;)e.splice(i[r],1)}return c=null,e},r=se.getText=function(e){var t,n="",i=0,o=e.nodeType;if(o){if(1===o||9===o||11===o){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=r(e)}else if(3===o||4===o)return e.nodeValue}else for(;t=e[i++];)n+=r(t);return n},i=se.selectors={cacheLength:50,createPseudo:de,match:K,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(te,ne),e[3]=(e[3]||e[4]||e[5]||"").replace(te,ne),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||se.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&se.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return K.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&W.test(n)&&(t=a(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(te,ne).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=C[e+" "];return t||(t=new RegExp("(^|"+L+")"+e+"("+L+"|$)"))&&C(e,(function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")}))},ATTR:function(e,t,n){return function(i){var r=se.attr(i,e);return null==r?"!="===t:!t||(r+="","="===t?r===n:"!="===t?r!==n:"^="===t?n&&0===r.indexOf(n):"*="===t?n&&r.indexOf(n)>-1:"$="===t?n&&r.slice(-n.length)===n:"~="===t?(" "+r.replace(B," ")+" ").indexOf(n)>-1:"|="===t&&(r===n||r.slice(0,n.length+1)===n+"-"))}},CHILD:function(e,t,n,i,r){var o="nth"!==e.slice(0,3),a="last"!==e.slice(-4),s="of-type"===t;return 1===i&&0===r?function(e){return!!e.parentNode}:function(t,n,l){var d,c,u,p,h,f,m=o!==a?"nextSibling":"previousSibling",g=t.parentNode,v=s&&t.nodeName.toLowerCase(),y=!l&&!s,x=!1;if(g){if(o){for(;m;){for(p=t;p=p[m];)if(s?p.nodeName.toLowerCase()===v:1===p.nodeType)return!1;f=m="only"===e&&!f&&"nextSibling"}return!0}if(f=[a?g.firstChild:g.lastChild],a&&y){for(x=(h=(d=(c=(u=(p=g)[b]||(p[b]={}))[p.uniqueID]||(u[p.uniqueID]={}))[e]||[])[0]===w&&d[1])&&d[2],p=h&&g.childNodes[h];p=++h&&p&&p[m]||(x=h=0)||f.pop();)if(1===p.nodeType&&++x&&p===t){c[e]=[w,h,x];break}}else if(y&&(x=h=(d=(c=(u=(p=t)[b]||(p[b]={}))[p.uniqueID]||(u[p.uniqueID]={}))[e]||[])[0]===w&&d[1]),!1===x)for(;(p=++h&&p&&p[m]||(x=h=0)||f.pop())&&((s?p.nodeName.toLowerCase()!==v:1!==p.nodeType)||!++x||(y&&((c=(u=p[b]||(p[b]={}))[p.uniqueID]||(u[p.uniqueID]={}))[e]=[w,x]),p!==t)););return(x-=r)===i||x%i==0&&x/i>=0}}},PSEUDO:function(e,t){var n,r=i.pseudos[e]||i.setFilters[e.toLowerCase()]||se.error("unsupported pseudo: "+e);return r[b]?r(t):r.length>1?(n=[e,e,"",t],i.setFilters.hasOwnProperty(e.toLowerCase())?de((function(e,n){for(var i,o=r(e,t),a=o.length;a--;)e[i=I(e,o[a])]=!(n[i]=o[a])})):function(e){return r(e,0,n)}):r}},pseudos:{not:de((function(e){var t=[],n=[],i=s(e.replace(j,"$1"));return i[b]?de((function(e,t,n,r){for(var o,a=i(e,null,r,[]),s=e.length;s--;)(o=a[s])&&(e[s]=!(t[s]=o))})):function(e,r,o){return t[0]=e,i(t,null,o,n),t[0]=null,!n.pop()}})),has:de((function(e){return function(t){return se(e,t).length>0}})),contains:de((function(e){return e=e.replace(te,ne),function(t){return(t.textContent||r(t)).indexOf(e)>-1}})),lang:de((function(e){return $.test(e||"")||se.error("unsupported lang: "+e),e=e.replace(te,ne).toLowerCase(),function(t){var n;do{if(n=m?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return(n=n.toLowerCase())===e||0===n.indexOf(e+"-")}while((t=t.parentNode)&&1===t.nodeType);return!1}})),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===f},focus:function(e){return e===h.activeElement&&(!h.hasFocus||h.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:me(!1),disabled:me(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!i.pseudos.empty(e)},header:function(e){return X.test(e.nodeName)},input:function(e){return Y.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:ge((function(){return[0]})),last:ge((function(e,t){return[t-1]})),eq:ge((function(e,t,n){return[n<0?n+t:n]})),even:ge((function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e})),odd:ge((function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e})),lt:ge((function(e,t,n){for(var i=n<0?n+t:n>t?t:n;--i>=0;)e.push(i);return e})),gt:ge((function(e,t,n){for(var i=n<0?n+t:n;++i<t;)e.push(i);return e}))}},i.pseudos.nth=i.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})i.pseudos[t]=he(t);for(t in{submit:!0,reset:!0})i.pseudos[t]=fe(t);function ye(){}function xe(e){for(var t=0,n=e.length,i="";t<n;t++)i+=e[t].value;return i}function be(e,t,n){var i=t.dir,r=t.next,o=r||i,a=n&&"parentNode"===o,s=E++;return t.first?function(t,n,r){for(;t=t[i];)if(1===t.nodeType||a)return e(t,n,r);return!1}:function(t,n,l){var d,c,u,p=[w,s];if(l){for(;t=t[i];)if((1===t.nodeType||a)&&e(t,n,l))return!0}else for(;t=t[i];)if(1===t.nodeType||a)if(c=(u=t[b]||(t[b]={}))[t.uniqueID]||(u[t.uniqueID]={}),r&&r===t.nodeName.toLowerCase())t=t[i]||t;else{if((d=c[o])&&d[0]===w&&d[1]===s)return p[2]=d[2];if(c[o]=p,p[2]=e(t,n,l))return!0}return!1}}function _e(e){return e.length>1?function(t,n,i){for(var r=e.length;r--;)if(!e[r](t,n,i))return!1;return!0}:e[0]}function we(e,t,n,i,r){for(var o,a=[],s=0,l=e.length,d=null!=t;s<l;s++)(o=e[s])&&(n&&!n(o,i,r)||(a.push(o),d&&t.push(s)));return a}function Ee(e,t,n,i,r,o){return i&&!i[b]&&(i=Ee(i)),r&&!r[b]&&(r=Ee(r,o)),de((function(o,a,s,l){var d,c,u,p=[],h=[],f=a.length,m=o||function(e,t,n){for(var i=0,r=t.length;i<r;i++)se(e,t[i],n);return n}(t||"*",s.nodeType?[s]:s,[]),g=!e||!o&&t?m:we(m,p,e,s,l),v=n?r||(o?e:f||i)?[]:a:g;if(n&&n(g,v,s,l),i)for(d=we(v,h),i(d,[],s,l),c=d.length;c--;)(u=d[c])&&(v[h[c]]=!(g[h[c]]=u));if(o){if(r||e){if(r){for(d=[],c=v.length;c--;)(u=v[c])&&d.push(g[c]=u);r(null,v=[],d,l)}for(c=v.length;c--;)(u=v[c])&&(d=r?I(o,u):p[c])>-1&&(o[d]=!(a[d]=u))}}else v=we(v===a?v.splice(f,v.length):v),r?r(null,a,v,l):N.apply(a,v)}))}function Ce(e){for(var t,n,r,o=e.length,a=i.relative[e[0].type],s=a||i.relative[" "],l=a?1:0,c=be((function(e){return e===t}),s,!0),u=be((function(e){return I(t,e)>-1}),s,!0),p=[function(e,n,i){var r=!a&&(i||n!==d)||((t=n).nodeType?c(e,n,i):u(e,n,i));return t=null,r}];l<o;l++)if(n=i.relative[e[l].type])p=[be(_e(p),n)];else{if((n=i.filter[e[l].type].apply(null,e[l].matches))[b]){for(r=++l;r<o&&!i.relative[e[r].type];r++);return Ee(l>1&&_e(p),l>1&&xe(e.slice(0,l-1).concat({value:" "===e[l-2].type?"*":""})).replace(j,"$1"),n,l<r&&Ce(e.slice(l,r)),r<o&&Ce(e=e.slice(r)),r<o&&xe(e))}p.push(n)}return _e(p)}return ye.prototype=i.filters=i.pseudos,i.setFilters=new ye,a=se.tokenize=function(e,t){var n,r,o,a,s,l,d,c=T[e+" "];if(c)return t?0:c.slice(0);for(s=e,l=[],d=i.preFilter;s;){for(a in n&&!(r=z.exec(s))||(r&&(s=s.slice(r[0].length)||s),l.push(o=[])),n=!1,(r=G.exec(s))&&(n=r.shift(),o.push({value:n,type:r[0].replace(j," ")}),s=s.slice(n.length)),i.filter)!(r=K[a].exec(s))||d[a]&&!(r=d[a](r))||(n=r.shift(),o.push({value:n,type:a,matches:r}),s=s.slice(n.length));if(!n)break}return t?s.length:s?se.error(e):T(e,l).slice(0)},s=se.compile=function(e,t){var n,r=[],o=[],s=k[e+" "];if(!s){for(t||(t=a(e)),n=t.length;n--;)(s=Ce(t[n]))[b]?r.push(s):o.push(s);s=k(e,function(e,t){var n=t.length>0,r=e.length>0,o=function(o,a,s,l,c){var u,f,g,v=0,y="0",x=o&&[],b=[],_=d,E=o||r&&i.find.TAG("*",c),C=w+=null==_?1:Math.random()||.1,T=E.length;for(c&&(d=a==h||a||c);y!==T&&null!=(u=E[y]);y++){if(r&&u){for(f=0,a||u.ownerDocument==h||(p(u),s=!m);g=e[f++];)if(g(u,a||h,s)){l.push(u);break}c&&(w=C)}n&&((u=!g&&u)&&v--,o&&x.push(u))}if(v+=y,n&&y!==v){for(f=0;g=t[f++];)g(x,b,a,s);if(o){if(v>0)for(;y--;)x[y]||b[y]||(b[y]=O.call(l));b=we(b)}N.apply(l,b),c&&!o&&b.length>0&&v+t.length>1&&se.uniqueSort(l)}return c&&(w=C,d=_),x};return n?de(o):o}(o,r)),s.selector=e}return s},l=se.select=function(e,t,n,r){var o,l,d,c,u,p="function"==typeof e&&e,h=!r&&a(e=p.selector||e);if(n=n||[],1===h.length){if((l=h[0]=h[0].slice(0)).length>2&&"ID"===(d=l[0]).type&&9===t.nodeType&&m&&i.relative[l[1].type]){if(!(t=(i.find.ID(d.matches[0].replace(te,ne),t)||[])[0]))return n;p&&(t=t.parentNode),e=e.slice(l.shift().value.length)}for(o=K.needsContext.test(e)?0:l.length;o--&&(d=l[o],!i.relative[c=d.type]);)if((u=i.find[c])&&(r=u(d.matches[0].replace(te,ne),ee.test(l[0].type)&&ve(t.parentNode)||t))){if(l.splice(o,1),!(e=r.length&&xe(l)))return N.apply(n,r),n;break}}return(p||s(e,h))(r,t,!m,n,!t||ee.test(e)&&ve(t.parentNode)||t),n},n.sortStable=b.split("").sort(D).join("")===b,n.detectDuplicates=!!u,p(),n.sortDetached=ce((function(e){return 1&e.compareDocumentPosition(h.createElement("fieldset"))})),ce((function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")}))||ue("type|href|height|width",(function(e,t,n){if(!n)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)})),n.attributes&&ce((function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")}))||ue("value",(function(e,t,n){if(!n&&"input"===e.nodeName.toLowerCase())return e.defaultValue})),ce((function(e){return null==e.getAttribute("disabled")}))||ue(P,(function(e,t,n){var i;if(!n)return!0===e[t]?t.toLowerCase():(i=e.getAttributeNode(t))&&i.specified?i.value:null})),se}(i);C.find=k,C.expr=k.selectors,C.expr[":"]=C.expr.pseudos,C.uniqueSort=C.unique=k.uniqueSort,C.text=k.getText,C.isXMLDoc=k.isXML,C.contains=k.contains,C.escapeSelector=k.escape;var S=function(e,t,n){for(var i=[],r=void 0!==n;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(r&&C(e).is(n))break;i.push(e)}return i},D=function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n},R=C.expr.match.needsContext;function A(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var O=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function M(e,t,n){return v(t)?C.grep(e,(function(e,i){return!!t.call(e,i,e)!==n})):t.nodeType?C.grep(e,(function(e){return e===t!==n})):"string"!=typeof t?C.grep(e,(function(e){return c.call(t,e)>-1!==n})):C.filter(t,e,n)}C.filter=function(e,t,n){var i=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===i.nodeType?C.find.matchesSelector(i,e)?[i]:[]:C.find.matches(e,C.grep(t,(function(e){return 1===e.nodeType})))},C.fn.extend({find:function(e){var t,n,i=this.length,r=this;if("string"!=typeof e)return this.pushStack(C(e).filter((function(){for(t=0;t<i;t++)if(C.contains(r[t],this))return!0})));for(n=this.pushStack([]),t=0;t<i;t++)C.find(e,r[t],n);return i>1?C.uniqueSort(n):n},filter:function(e){return this.pushStack(M(this,e||[],!1))},not:function(e){return this.pushStack(M(this,e||[],!0))},is:function(e){return!!M(this,"string"==typeof e&&R.test(e)?C(e):e||[],!1).length}});var N,U=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(C.fn.init=function(e,t,n){var i,r;if(!e)return this;if(n=n||N,"string"==typeof e){if(!(i="<"===e[0]&&">"===e[e.length-1]&&e.length>=3?[null,e,null]:U.exec(e))||!i[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(i[1]){if(t=t instanceof C?t[0]:t,C.merge(this,C.parseHTML(i[1],t&&t.nodeType?t.ownerDocument||t:x,!0)),O.test(i[1])&&C.isPlainObject(t))for(i in t)v(this[i])?this[i](t[i]):this.attr(i,t[i]);return this}return(r=x.getElementById(i[2]))&&(this[0]=r,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):v(e)?void 0!==n.ready?n.ready(e):e(C):C.makeArray(e,this)}).prototype=C.fn,N=C(x);var I=/^(?:parents|prev(?:Until|All))/,P={children:!0,contents:!0,next:!0,prev:!0};function L(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}C.fn.extend({has:function(e){var t=C(e,this),n=t.length;return this.filter((function(){for(var e=0;e<n;e++)if(C.contains(this,t[e]))return!0}))},closest:function(e,t){var n,i=0,r=this.length,o=[],a="string"!=typeof e&&C(e);if(!R.test(e))for(;i<r;i++)for(n=this[i];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(a?a.index(n)>-1:1===n.nodeType&&C.find.matchesSelector(n,e))){o.push(n);break}return this.pushStack(o.length>1?C.uniqueSort(o):o)},index:function(e){return e?"string"==typeof e?c.call(C(e),this[0]):c.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(C.uniqueSort(C.merge(this.get(),C(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),C.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return S(e,"parentNode")},parentsUntil:function(e,t,n){return S(e,"parentNode",n)},next:function(e){return L(e,"nextSibling")},prev:function(e){return L(e,"previousSibling")},nextAll:function(e){return S(e,"nextSibling")},prevAll:function(e){return S(e,"previousSibling")},nextUntil:function(e,t,n){return S(e,"nextSibling",n)},prevUntil:function(e,t,n){return S(e,"previousSibling",n)},siblings:function(e){return D((e.parentNode||{}).firstChild,e)},children:function(e){return D(e.firstChild)},contents:function(e){return null!=e.contentDocument&&a(e.contentDocument)?e.contentDocument:(A(e,"template")&&(e=e.content||e),C.merge([],e.childNodes))}},(function(e,t){C.fn[e]=function(n,i){var r=C.map(this,t,n);return"Until"!==e.slice(-5)&&(i=n),i&&"string"==typeof i&&(r=C.filter(i,r)),this.length>1&&(P[e]||C.uniqueSort(r),I.test(e)&&r.reverse()),this.pushStack(r)}}));var F=/[^\x20\t\r\n\f]+/g;function Z(e){return e}function H(e){throw e}function B(e,t,n,i){var r;try{e&&v(r=e.promise)?r.call(e).done(t).fail(n):e&&v(r=e.then)?r.call(e,t,n):t.apply(void 0,[e].slice(i))}catch(e){n.apply(void 0,[e])}}C.Callbacks=function(e){e="string"==typeof e?function(e){var t={};return C.each(e.match(F)||[],(function(e,n){t[n]=!0})),t}(e):C.extend({},e);var t,n,i,r,o=[],a=[],s=-1,l=function(){for(r=r||e.once,i=t=!0;a.length;s=-1)for(n=a.shift();++s<o.length;)!1===o[s].apply(n[0],n[1])&&e.stopOnFalse&&(s=o.length,n=!1);e.memory||(n=!1),t=!1,r&&(o=n?[]:"")},d={add:function(){return o&&(n&&!t&&(s=o.length-1,a.push(n)),function t(n){C.each(n,(function(n,i){v(i)?e.unique&&d.has(i)||o.push(i):i&&i.length&&"string"!==w(i)&&t(i)}))}(arguments),n&&!t&&l()),this},remove:function(){return C.each(arguments,(function(e,t){for(var n;(n=C.inArray(t,o,n))>-1;)o.splice(n,1),n<=s&&s--})),this},has:function(e){return e?C.inArray(e,o)>-1:o.length>0},empty:function(){return o&&(o=[]),this},disable:function(){return r=a=[],o=n="",this},disabled:function(){return!o},lock:function(){return r=a=[],n||t||(o=n=""),this},locked:function(){return!!r},fireWith:function(e,n){return r||(n=[e,(n=n||[]).slice?n.slice():n],a.push(n),t||l()),this},fire:function(){return d.fireWith(this,arguments),this},fired:function(){return!!i}};return d},C.extend({Deferred:function(e){var t=[["notify","progress",C.Callbacks("memory"),C.Callbacks("memory"),2],["resolve","done",C.Callbacks("once memory"),C.Callbacks("once memory"),0,"resolved"],["reject","fail",C.Callbacks("once memory"),C.Callbacks("once memory"),1,"rejected"]],n="pending",r={state:function(){return n},always:function(){return o.done(arguments).fail(arguments),this},catch:function(e){return r.then(null,e)},pipe:function(){var e=arguments;return C.Deferred((function(n){C.each(t,(function(t,i){var r=v(e[i[4]])&&e[i[4]];o[i[1]]((function(){var e=r&&r.apply(this,arguments);e&&v(e.promise)?e.promise().progress(n.notify).done(n.resolve).fail(n.reject):n[i[0]+"With"](this,r?[e]:arguments)}))})),e=null})).promise()},then:function(e,n,r){var o=0;function a(e,t,n,r){return function(){var s=this,l=arguments,d=function(){var i,d;if(!(e<o)){if((i=n.apply(s,l))===t.promise())throw new TypeError("Thenable self-resolution");d=i&&("object"==typeof i||"function"==typeof i)&&i.then,v(d)?r?d.call(i,a(o,t,Z,r),a(o,t,H,r)):(o++,d.call(i,a(o,t,Z,r),a(o,t,H,r),a(o,t,Z,t.notifyWith))):(n!==Z&&(s=void 0,l=[i]),(r||t.resolveWith)(s,l))}},c=r?d:function(){try{d()}catch(i){C.Deferred.exceptionHook&&C.Deferred.exceptionHook(i,c.stackTrace),e+1>=o&&(n!==H&&(s=void 0,l=[i]),t.rejectWith(s,l))}};e?c():(C.Deferred.getStackHook&&(c.stackTrace=C.Deferred.getStackHook()),i.setTimeout(c))}}return C.Deferred((function(i){t[0][3].add(a(0,i,v(r)?r:Z,i.notifyWith)),t[1][3].add(a(0,i,v(e)?e:Z)),t[2][3].add(a(0,i,v(n)?n:H))})).promise()},promise:function(e){return null!=e?C.extend(e,r):r}},o={};return C.each(t,(function(e,i){var a=i[2],s=i[5];r[i[1]]=a.add,s&&a.add((function(){n=s}),t[3-e][2].disable,t[3-e][3].disable,t[0][2].lock,t[0][3].lock),a.add(i[3].fire),o[i[0]]=function(){return o[i[0]+"With"](this===o?void 0:this,arguments),this},o[i[0]+"With"]=a.fireWith})),r.promise(o),e&&e.call(o,o),o},when:function(e){var t=arguments.length,n=t,i=Array(n),r=s.call(arguments),o=C.Deferred(),a=function(e){return function(n){i[e]=this,r[e]=arguments.length>1?s.call(arguments):n,--t||o.resolveWith(i,r)}};if(t<=1&&(B(e,o.done(a(n)).resolve,o.reject,!t),"pending"===o.state()||v(r[n]&&r[n].then)))return o.then();for(;n--;)B(r[n],a(n),o.reject);return o.promise()}});var j=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;C.Deferred.exceptionHook=function(e,t){i.console&&i.console.warn&&e&&j.test(e.name)&&i.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},C.readyException=function(e){i.setTimeout((function(){throw e}))};var z=C.Deferred();function G(){x.removeEventListener("DOMContentLoaded",G),i.removeEventListener("load",G),C.ready()}C.fn.ready=function(e){return z.then(e).catch((function(e){C.readyException(e)})),this},C.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--C.readyWait:C.isReady)||(C.isReady=!0,!0!==e&&--C.readyWait>0||z.resolveWith(x,[C]))}}),C.ready.then=z.then,"complete"===x.readyState||"loading"!==x.readyState&&!x.documentElement.doScroll?i.setTimeout(C.ready):(x.addEventListener("DOMContentLoaded",G),i.addEventListener("load",G));var V=function(e,t,n,i,r,o,a){var s=0,l=e.length,d=null==n;if("object"===w(n))for(s in r=!0,n)V(e,t,s,n[s],!0,o,a);else if(void 0!==i&&(r=!0,v(i)||(a=!0),d&&(a?(t.call(e,i),t=null):(d=t,t=function(e,t,n){return d.call(C(e),n)})),t))for(;s<l;s++)t(e[s],n,a?i:i.call(e[s],s,t(e[s],n)));return r?e:d?t.call(e):l?t(e[0],n):o},W=/^-ms-/,$=/-([a-z])/g;function K(e,t){return t.toUpperCase()}function q(e){return e.replace(W,"ms-").replace($,K)}var Y=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};function X(){this.expando=C.expando+X.uid++}X.uid=1,X.prototype={cache:function(e){var t=e[this.expando];return t||(t={},Y(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var i,r=this.cache(e);if("string"==typeof t)r[q(t)]=n;else for(i in t)r[q(i)]=t[i];return r},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][q(t)]},access:function(e,t,n){return void 0===t||t&&"string"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,i=e[this.expando];if(void 0!==i){if(void 0!==t){n=(t=Array.isArray(t)?t.map(q):(t=q(t))in i?[t]:t.match(F)||[]).length;for(;n--;)delete i[t[n]]}(void 0===t||C.isEmptyObject(i))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!C.isEmptyObject(t)}};var J=new X,Q=new X,ee=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,te=/[A-Z]/g;function ne(e,t,n){var i;if(void 0===n&&1===e.nodeType)if(i="data-"+t.replace(te,"-$&").toLowerCase(),"string"==typeof(n=e.getAttribute(i))){try{n=function(e){return"true"===e||"false"!==e&&("null"===e?null:e===+e+""?+e:ee.test(e)?JSON.parse(e):e)}(n)}catch(e){}Q.set(e,t,n)}else n=void 0;return n}C.extend({hasData:function(e){return Q.hasData(e)||J.hasData(e)},data:function(e,t,n){return Q.access(e,t,n)},removeData:function(e,t){Q.remove(e,t)},_data:function(e,t,n){return J.access(e,t,n)},_removeData:function(e,t){J.remove(e,t)}}),C.fn.extend({data:function(e,t){var n,i,r,o=this[0],a=o&&o.attributes;if(void 0===e){if(this.length&&(r=Q.get(o),1===o.nodeType&&!J.get(o,"hasDataAttrs"))){for(n=a.length;n--;)a[n]&&0===(i=a[n].name).indexOf("data-")&&(i=q(i.slice(5)),ne(o,i,r[i]));J.set(o,"hasDataAttrs",!0)}return r}return"object"==typeof e?this.each((function(){Q.set(this,e)})):V(this,(function(t){var n;if(o&&void 0===t)return void 0!==(n=Q.get(o,e))||void 0!==(n=ne(o,e))?n:void 0;this.each((function(){Q.set(this,e,t)}))}),null,t,arguments.length>1,null,!0)},removeData:function(e){return this.each((function(){Q.remove(this,e)}))}}),C.extend({queue:function(e,t,n){var i;if(e)return t=(t||"fx")+"queue",i=J.get(e,t),n&&(!i||Array.isArray(n)?i=J.access(e,t,C.makeArray(n)):i.push(n)),i||[]},dequeue:function(e,t){t=t||"fx";var n=C.queue(e,t),i=n.length,r=n.shift(),o=C._queueHooks(e,t);"inprogress"===r&&(r=n.shift(),i--),r&&("fx"===t&&n.unshift("inprogress"),delete o.stop,r.call(e,(function(){C.dequeue(e,t)}),o)),!i&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return J.get(e,n)||J.access(e,n,{empty:C.Callbacks("once memory").add((function(){J.remove(e,[t+"queue",n])}))})}}),C.fn.extend({queue:function(e,t){var n=2;return"string"!=typeof e&&(t=e,e="fx",n--),arguments.length<n?C.queue(this[0],e):void 0===t?this:this.each((function(){var n=C.queue(this,e,t);C._queueHooks(this,e),"fx"===e&&"inprogress"!==n[0]&&C.dequeue(this,e)}))},dequeue:function(e){return this.each((function(){C.dequeue(this,e)}))},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var n,i=1,r=C.Deferred(),o=this,a=this.length,s=function(){--i||r.resolveWith(o,[o])};for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";a--;)(n=J.get(o[a],e+"queueHooks"))&&n.empty&&(i++,n.empty.add(s));return s(),r.promise(t)}});var ie=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,re=new RegExp("^(?:([+-])=|)("+ie+")([a-z%]*)$","i"),oe=["Top","Right","Bottom","Left"],ae=x.documentElement,se=function(e){return C.contains(e.ownerDocument,e)},le={composed:!0};ae.getRootNode&&(se=function(e){return C.contains(e.ownerDocument,e)||e.getRootNode(le)===e.ownerDocument});var de=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&se(e)&&"none"===C.css(e,"display")};function ce(e,t,n,i){var r,o,a=20,s=i?function(){return i.cur()}:function(){return C.css(e,t,"")},l=s(),d=n&&n[3]||(C.cssNumber[t]?"":"px"),c=e.nodeType&&(C.cssNumber[t]||"px"!==d&&+l)&&re.exec(C.css(e,t));if(c&&c[3]!==d){for(l/=2,d=d||c[3],c=+l||1;a--;)C.style(e,t,c+d),(1-o)*(1-(o=s()/l||.5))<=0&&(a=0),c/=o;c*=2,C.style(e,t,c+d),n=n||[]}return n&&(c=+c||+l||0,r=n[1]?c+(n[1]+1)*n[2]:+n[2],i&&(i.unit=d,i.start=c,i.end=r)),r}var ue={};function pe(e){var t,n=e.ownerDocument,i=e.nodeName,r=ue[i];return r||(t=n.body.appendChild(n.createElement(i)),r=C.css(t,"display"),t.parentNode.removeChild(t),"none"===r&&(r="block"),ue[i]=r,r)}function he(e,t){for(var n,i,r=[],o=0,a=e.length;o<a;o++)(i=e[o]).style&&(n=i.style.display,t?("none"===n&&(r[o]=J.get(i,"display")||null,r[o]||(i.style.display="")),""===i.style.display&&de(i)&&(r[o]=pe(i))):"none"!==n&&(r[o]="none",J.set(i,"display",n)));for(o=0;o<a;o++)null!=r[o]&&(e[o].style.display=r[o]);return e}C.fn.extend({show:function(){return he(this,!0)},hide:function(){return he(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each((function(){de(this)?C(this).show():C(this).hide()}))}});var fe,me,ge=/^(?:checkbox|radio)$/i,ve=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,ye=/^$|^module$|\/(?:java|ecma)script/i;fe=x.createDocumentFragment().appendChild(x.createElement("div")),(me=x.createElement("input")).setAttribute("type","radio"),me.setAttribute("checked","checked"),me.setAttribute("name","t"),fe.appendChild(me),g.checkClone=fe.cloneNode(!0).cloneNode(!0).lastChild.checked,fe.innerHTML="<textarea>x</textarea>",g.noCloneChecked=!!fe.cloneNode(!0).lastChild.defaultValue,fe.innerHTML="<option></option>",g.option=!!fe.lastChild;var xe={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function be(e,t){var n;return n=void 0!==e.getElementsByTagName?e.getElementsByTagName(t||"*"):void 0!==e.querySelectorAll?e.querySelectorAll(t||"*"):[],void 0===t||t&&A(e,t)?C.merge([e],n):n}function _e(e,t){for(var n=0,i=e.length;n<i;n++)J.set(e[n],"globalEval",!t||J.get(t[n],"globalEval"))}xe.tbody=xe.tfoot=xe.colgroup=xe.caption=xe.thead,xe.th=xe.td,g.option||(xe.optgroup=xe.option=[1,"<select multiple='multiple'>","</select>"]);var we=/<|&#?\w+;/;function Ee(e,t,n,i,r){for(var o,a,s,l,d,c,u=t.createDocumentFragment(),p=[],h=0,f=e.length;h<f;h++)if((o=e[h])||0===o)if("object"===w(o))C.merge(p,o.nodeType?[o]:o);else if(we.test(o)){for(a=a||u.appendChild(t.createElement("div")),s=(ve.exec(o)||["",""])[1].toLowerCase(),l=xe[s]||xe._default,a.innerHTML=l[1]+C.htmlPrefilter(o)+l[2],c=l[0];c--;)a=a.lastChild;C.merge(p,a.childNodes),(a=u.firstChild).textContent=""}else p.push(t.createTextNode(o));for(u.textContent="",h=0;o=p[h++];)if(i&&C.inArray(o,i)>-1)r&&r.push(o);else if(d=se(o),a=be(u.appendChild(o),"script"),d&&_e(a),n)for(c=0;o=a[c++];)ye.test(o.type||"")&&n.push(o);return u}var Ce=/^([^.]*)(?:\.(.+)|)/;function Te(){return!0}function ke(){return!1}function Se(e,t){return e===function(){try{return x.activeElement}catch(e){}}()==("focus"===t)}function De(e,t,n,i,r,o){var a,s;if("object"==typeof t){for(s in"string"!=typeof n&&(i=i||n,n=void 0),t)De(e,s,n,i,t[s],o);return e}if(null==i&&null==r?(r=n,i=n=void 0):null==r&&("string"==typeof n?(r=i,i=void 0):(r=i,i=n,n=void 0)),!1===r)r=ke;else if(!r)return e;return 1===o&&(a=r,r=function(e){return C().off(e),a.apply(this,arguments)},r.guid=a.guid||(a.guid=C.guid++)),e.each((function(){C.event.add(this,t,r,i,n)}))}function Re(e,t,n){n?(J.set(e,t,!1),C.event.add(e,t,{namespace:!1,handler:function(e){var i,r,o=J.get(this,t);if(1&e.isTrigger&&this[t]){if(o.length)(C.event.special[t]||{}).delegateType&&e.stopPropagation();else if(o=s.call(arguments),J.set(this,t,o),i=n(this,t),this[t](),o!==(r=J.get(this,t))||i?J.set(this,t,!1):r={},o!==r)return e.stopImmediatePropagation(),e.preventDefault(),r&&r.value}else o.length&&(J.set(this,t,{value:C.event.trigger(C.extend(o[0],C.Event.prototype),o.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===J.get(e,t)&&C.event.add(e,t,Te)}C.event={global:{},add:function(e,t,n,i,r){var o,a,s,l,d,c,u,p,h,f,m,g=J.get(e);if(Y(e))for(n.handler&&(n=(o=n).handler,r=o.selector),r&&C.find.matchesSelector(ae,r),n.guid||(n.guid=C.guid++),(l=g.events)||(l=g.events=Object.create(null)),(a=g.handle)||(a=g.handle=function(t){return void 0!==C&&C.event.triggered!==t.type?C.event.dispatch.apply(e,arguments):void 0}),d=(t=(t||"").match(F)||[""]).length;d--;)h=m=(s=Ce.exec(t[d])||[])[1],f=(s[2]||"").split(".").sort(),h&&(u=C.event.special[h]||{},h=(r?u.delegateType:u.bindType)||h,u=C.event.special[h]||{},c=C.extend({type:h,origType:m,data:i,handler:n,guid:n.guid,selector:r,needsContext:r&&C.expr.match.needsContext.test(r),namespace:f.join(".")},o),(p=l[h])||((p=l[h]=[]).delegateCount=0,u.setup&&!1!==u.setup.call(e,i,f,a)||e.addEventListener&&e.addEventListener(h,a)),u.add&&(u.add.call(e,c),c.handler.guid||(c.handler.guid=n.guid)),r?p.splice(p.delegateCount++,0,c):p.push(c),C.event.global[h]=!0)},remove:function(e,t,n,i,r){var o,a,s,l,d,c,u,p,h,f,m,g=J.hasData(e)&&J.get(e);if(g&&(l=g.events)){for(d=(t=(t||"").match(F)||[""]).length;d--;)if(h=m=(s=Ce.exec(t[d])||[])[1],f=(s[2]||"").split(".").sort(),h){for(u=C.event.special[h]||{},p=l[h=(i?u.delegateType:u.bindType)||h]||[],s=s[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=o=p.length;o--;)c=p[o],!r&&m!==c.origType||n&&n.guid!==c.guid||s&&!s.test(c.namespace)||i&&i!==c.selector&&("**"!==i||!c.selector)||(p.splice(o,1),c.selector&&p.delegateCount--,u.remove&&u.remove.call(e,c));a&&!p.length&&(u.teardown&&!1!==u.teardown.call(e,f,g.handle)||C.removeEvent(e,h,g.handle),delete l[h])}else for(h in l)C.event.remove(e,h+t[d],n,i,!0);C.isEmptyObject(l)&&J.remove(e,"handle events")}},dispatch:function(e){var t,n,i,r,o,a,s=new Array(arguments.length),l=C.event.fix(e),d=(J.get(this,"events")||Object.create(null))[l.type]||[],c=C.event.special[l.type]||{};for(s[0]=l,t=1;t<arguments.length;t++)s[t]=arguments[t];if(l.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,l)){for(a=C.event.handlers.call(this,l,d),t=0;(r=a[t++])&&!l.isPropagationStopped();)for(l.currentTarget=r.elem,n=0;(o=r.handlers[n++])&&!l.isImmediatePropagationStopped();)l.rnamespace&&!1!==o.namespace&&!l.rnamespace.test(o.namespace)||(l.handleObj=o,l.data=o.data,void 0!==(i=((C.event.special[o.origType]||{}).handle||o.handler).apply(r.elem,s))&&!1===(l.result=i)&&(l.preventDefault(),l.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,l),l.result}},handlers:function(e,t){var n,i,r,o,a,s=[],l=t.delegateCount,d=e.target;if(l&&d.nodeType&&!("click"===e.type&&e.button>=1))for(;d!==this;d=d.parentNode||this)if(1===d.nodeType&&("click"!==e.type||!0!==d.disabled)){for(o=[],a={},n=0;n<l;n++)void 0===a[r=(i=t[n]).selector+" "]&&(a[r]=i.needsContext?C(r,this).index(d)>-1:C.find(r,this,null,[d]).length),a[r]&&o.push(i);o.length&&s.push({elem:d,handlers:o})}return d=this,l<t.length&&s.push({elem:d,handlers:t.slice(l)}),s},addProp:function(e,t){Object.defineProperty(C.Event.prototype,e,{enumerable:!0,configurable:!0,get:v(t)?function(){if(this.originalEvent)return t(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[e]},set:function(t){Object.defineProperty(this,e,{enumerable:!0,configurable:!0,writable:!0,value:t})}})},fix:function(e){return e[C.expando]?e:new C.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return ge.test(t.type)&&t.click&&A(t,"input")&&Re(t,"click",Te),!1},trigger:function(e){var t=this||e;return ge.test(t.type)&&t.click&&A(t,"input")&&Re(t,"click"),!0},_default:function(e){var t=e.target;return ge.test(t.type)&&t.click&&A(t,"input")&&J.get(t,"click")||A(t,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},C.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},C.Event=function(e,t){if(!(this instanceof C.Event))return new C.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?Te:ke,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&C.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[C.expando]=!0},C.Event.prototype={constructor:C.Event,isDefaultPrevented:ke,isPropagationStopped:ke,isImmediatePropagationStopped:ke,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=Te,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=Te,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=Te,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},C.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:!0},C.event.addProp),C.each({focus:"focusin",blur:"focusout"},(function(e,t){C.event.special[e]={setup:function(){return Re(this,e,Se),!1},trigger:function(){return Re(this,e),!0},_default:function(t){return J.get(t.target,e)},delegateType:t}})),C.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},(function(e,t){C.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,i=e.relatedTarget,r=e.handleObj;return i&&(i===this||C.contains(this,i))||(e.type=r.origType,n=r.handler.apply(this,arguments),e.type=t),n}}})),C.fn.extend({on:function(e,t,n,i){return De(this,e,t,n,i)},one:function(e,t,n,i){return De(this,e,t,n,i,1)},off:function(e,t,n){var i,r;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,C(e.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"==typeof e){for(r in e)this.off(r,t,e[r]);return this}return!1!==t&&"function"!=typeof t||(n=t,t=void 0),!1===n&&(n=ke),this.each((function(){C.event.remove(this,e,n,t)}))}});var Ae=/<script|<style|<link/i,Oe=/checked\s*(?:[^=]|=\s*.checked.)/i,Me=/^\s*<!\[CDATA\[|\]\]>\s*$/g;function Ne(e,t){return A(e,"table")&&A(11!==t.nodeType?t:t.firstChild,"tr")&&C(e).children("tbody")[0]||e}function Ue(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function Ie(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function Pe(e,t){var n,i,r,o,a,s;if(1===t.nodeType){if(J.hasData(e)&&(s=J.get(e).events))for(r in J.remove(t,"handle events"),s)for(n=0,i=s[r].length;n<i;n++)C.event.add(t,r,s[r][n]);Q.hasData(e)&&(o=Q.access(e),a=C.extend({},o),Q.set(t,a))}}function Le(e,t){var n=t.nodeName.toLowerCase();"input"===n&&ge.test(e.type)?t.checked=e.checked:"input"!==n&&"textarea"!==n||(t.defaultValue=e.defaultValue)}function Fe(e,t,n,i){t=l(t);var r,o,a,s,d,c,u=0,p=e.length,h=p-1,f=t[0],m=v(f);if(m||p>1&&"string"==typeof f&&!g.checkClone&&Oe.test(f))return e.each((function(r){var o=e.eq(r);m&&(t[0]=f.call(this,r,o.html())),Fe(o,t,n,i)}));if(p&&(o=(r=Ee(t,e[0].ownerDocument,!1,e,i)).firstChild,1===r.childNodes.length&&(r=o),o||i)){for(s=(a=C.map(be(r,"script"),Ue)).length;u<p;u++)d=r,u!==h&&(d=C.clone(d,!0,!0),s&&C.merge(a,be(d,"script"))),n.call(e[u],d,u);if(s)for(c=a[a.length-1].ownerDocument,C.map(a,Ie),u=0;u<s;u++)d=a[u],ye.test(d.type||"")&&!J.access(d,"globalEval")&&C.contains(c,d)&&(d.src&&"module"!==(d.type||"").toLowerCase()?C._evalUrl&&!d.noModule&&C._evalUrl(d.src,{nonce:d.nonce||d.getAttribute("nonce")},c):_(d.textContent.replace(Me,""),d,c))}return e}function Ze(e,t,n){for(var i,r=t?C.filter(t,e):e,o=0;null!=(i=r[o]);o++)n||1!==i.nodeType||C.cleanData(be(i)),i.parentNode&&(n&&se(i)&&_e(be(i,"script")),i.parentNode.removeChild(i));return e}C.extend({htmlPrefilter:function(e){return e},clone:function(e,t,n){var i,r,o,a,s=e.cloneNode(!0),l=se(e);if(!(g.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||C.isXMLDoc(e)))for(a=be(s),i=0,r=(o=be(e)).length;i<r;i++)Le(o[i],a[i]);if(t)if(n)for(o=o||be(e),a=a||be(s),i=0,r=o.length;i<r;i++)Pe(o[i],a[i]);else Pe(e,s);return(a=be(s,"script")).length>0&&_e(a,!l&&be(e,"script")),s},cleanData:function(e){for(var t,n,i,r=C.event.special,o=0;void 0!==(n=e[o]);o++)if(Y(n)){if(t=n[J.expando]){if(t.events)for(i in t.events)r[i]?C.event.remove(n,i):C.removeEvent(n,i,t.handle);n[J.expando]=void 0}n[Q.expando]&&(n[Q.expando]=void 0)}}}),C.fn.extend({detach:function(e){return Ze(this,e,!0)},remove:function(e){return Ze(this,e)},text:function(e){return V(this,(function(e){return void 0===e?C.text(this):this.empty().each((function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)}))}),null,e,arguments.length)},append:function(){return Fe(this,arguments,(function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Ne(this,e).appendChild(e)}))},prepend:function(){return Fe(this,arguments,(function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Ne(this,e);t.insertBefore(e,t.firstChild)}}))},before:function(){return Fe(this,arguments,(function(e){this.parentNode&&this.parentNode.insertBefore(e,this)}))},after:function(){return Fe(this,arguments,(function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)}))},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(C.cleanData(be(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map((function(){return C.clone(this,e,t)}))},html:function(e){return V(this,(function(e){var t=this[0]||{},n=0,i=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!Ae.test(e)&&!xe[(ve.exec(e)||["",""])[1].toLowerCase()]){e=C.htmlPrefilter(e);try{for(;n<i;n++)1===(t=this[n]||{}).nodeType&&(C.cleanData(be(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)}),null,e,arguments.length)},replaceWith:function(){var e=[];return Fe(this,arguments,(function(t){var n=this.parentNode;C.inArray(this,e)<0&&(C.cleanData(be(this)),n&&n.replaceChild(t,this))}),e)}}),C.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},(function(e,t){C.fn[e]=function(e){for(var n,i=[],r=C(e),o=r.length-1,a=0;a<=o;a++)n=a===o?this:this.clone(!0),C(r[a])[t](n),d.apply(i,n.get());return this.pushStack(i)}}));var He=new RegExp("^("+ie+")(?!px)[a-z%]+$","i"),Be=/^--/,je=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=i),t.getComputedStyle(e)},ze=function(e,t,n){var i,r,o={};for(r in t)o[r]=e.style[r],e.style[r]=t[r];for(r in i=n.call(e),t)e.style[r]=o[r];return i},Ge=new RegExp(oe.join("|"),"i"),Ve="[\\x20\\t\\r\\n\\f]",We=new RegExp("^"+Ve+"+|((?:^|[^\\\\])(?:\\\\.)*)"+Ve+"+$","g");function $e(e,t,n){var i,r,o,a,s=Be.test(t),l=e.style;return(n=n||je(e))&&(a=n.getPropertyValue(t)||n[t],s&&a&&(a=a.replace(We,"$1")||void 0),""!==a||se(e)||(a=C.style(e,t)),!g.pixelBoxStyles()&&He.test(a)&&Ge.test(t)&&(i=l.width,r=l.minWidth,o=l.maxWidth,l.minWidth=l.maxWidth=l.width=a,a=n.width,l.width=i,l.minWidth=r,l.maxWidth=o)),void 0!==a?a+"":a}function Ke(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}!function(){function e(){if(c){d.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",c.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",ae.appendChild(d).appendChild(c);var e=i.getComputedStyle(c);n="1%"!==e.top,l=12===t(e.marginLeft),c.style.right="60%",a=36===t(e.right),r=36===t(e.width),c.style.position="absolute",o=12===t(c.offsetWidth/3),ae.removeChild(d),c=null}}function t(e){return Math.round(parseFloat(e))}var n,r,o,a,s,l,d=x.createElement("div"),c=x.createElement("div");c.style&&(c.style.backgroundClip="content-box",c.cloneNode(!0).style.backgroundClip="",g.clearCloneStyle="content-box"===c.style.backgroundClip,C.extend(g,{boxSizingReliable:function(){return e(),r},pixelBoxStyles:function(){return e(),a},pixelPosition:function(){return e(),n},reliableMarginLeft:function(){return e(),l},scrollboxSize:function(){return e(),o},reliableTrDimensions:function(){var e,t,n,r;return null==s&&(e=x.createElement("table"),t=x.createElement("tr"),n=x.createElement("div"),e.style.cssText="position:absolute;left:-11111px;border-collapse:separate",t.style.cssText="border:1px solid",t.style.height="1px",n.style.height="9px",n.style.display="block",ae.appendChild(e).appendChild(t).appendChild(n),r=i.getComputedStyle(t),s=parseInt(r.height,10)+parseInt(r.borderTopWidth,10)+parseInt(r.borderBottomWidth,10)===t.offsetHeight,ae.removeChild(e)),s}}))}();var qe=["Webkit","Moz","ms"],Ye=x.createElement("div").style,Xe={};function Je(e){return C.cssProps[e]||Xe[e]||(e in Ye?e:Xe[e]=function(e){for(var t=e[0].toUpperCase()+e.slice(1),n=qe.length;n--;)if((e=qe[n]+t)in Ye)return e}(e)||e)}var Qe=/^(none|table(?!-c[ea]).+)/,et={position:"absolute",visibility:"hidden",display:"block"},tt={letterSpacing:"0",fontWeight:"400"};function nt(e,t,n){var i=re.exec(t);return i?Math.max(0,i[2]-(n||0))+(i[3]||"px"):t}function it(e,t,n,i,r,o){var a="width"===t?1:0,s=0,l=0;if(n===(i?"border":"content"))return 0;for(;a<4;a+=2)"margin"===n&&(l+=C.css(e,n+oe[a],!0,r)),i?("content"===n&&(l-=C.css(e,"padding"+oe[a],!0,r)),"margin"!==n&&(l-=C.css(e,"border"+oe[a]+"Width",!0,r))):(l+=C.css(e,"padding"+oe[a],!0,r),"padding"!==n?l+=C.css(e,"border"+oe[a]+"Width",!0,r):s+=C.css(e,"border"+oe[a]+"Width",!0,r));return!i&&o>=0&&(l+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-o-l-s-.5))||0),l}function rt(e,t,n){var i=je(e),r=(!g.boxSizingReliable()||n)&&"border-box"===C.css(e,"boxSizing",!1,i),o=r,a=$e(e,t,i),s="offset"+t[0].toUpperCase()+t.slice(1);if(He.test(a)){if(!n)return a;a="auto"}return(!g.boxSizingReliable()&&r||!g.reliableTrDimensions()&&A(e,"tr")||"auto"===a||!parseFloat(a)&&"inline"===C.css(e,"display",!1,i))&&e.getClientRects().length&&(r="border-box"===C.css(e,"boxSizing",!1,i),(o=s in e)&&(a=e[s])),(a=parseFloat(a)||0)+it(e,t,n||(r?"border":"content"),o,i,a)+"px"}function ot(e,t,n,i,r){return new ot.prototype.init(e,t,n,i,r)}C.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=$e(e,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,n,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var r,o,a,s=q(t),l=Be.test(t),d=e.style;if(l||(t=Je(s)),a=C.cssHooks[t]||C.cssHooks[s],void 0===n)return a&&"get"in a&&void 0!==(r=a.get(e,!1,i))?r:d[t];"string"==(o=typeof n)&&(r=re.exec(n))&&r[1]&&(n=ce(e,t,r),o="number"),null!=n&&n==n&&("number"!==o||l||(n+=r&&r[3]||(C.cssNumber[s]?"":"px")),g.clearCloneStyle||""!==n||0!==t.indexOf("background")||(d[t]="inherit"),a&&"set"in a&&void 0===(n=a.set(e,n,i))||(l?d.setProperty(t,n):d[t]=n))}},css:function(e,t,n,i){var r,o,a,s=q(t);return Be.test(t)||(t=Je(s)),(a=C.cssHooks[t]||C.cssHooks[s])&&"get"in a&&(r=a.get(e,!0,n)),void 0===r&&(r=$e(e,t,i)),"normal"===r&&t in tt&&(r=tt[t]),""===n||n?(o=parseFloat(r),!0===n||isFinite(o)?o||0:r):r}}),C.each(["height","width"],(function(e,t){C.cssHooks[t]={get:function(e,n,i){if(n)return!Qe.test(C.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?rt(e,t,i):ze(e,et,(function(){return rt(e,t,i)}))},set:function(e,n,i){var r,o=je(e),a=!g.scrollboxSize()&&"absolute"===o.position,s=(a||i)&&"border-box"===C.css(e,"boxSizing",!1,o),l=i?it(e,t,i,s,o):0;return s&&a&&(l-=Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-parseFloat(o[t])-it(e,t,"border",!1,o)-.5)),l&&(r=re.exec(n))&&"px"!==(r[3]||"px")&&(e.style[t]=n,n=C.css(e,t)),nt(0,n,l)}}})),C.cssHooks.marginLeft=Ke(g.reliableMarginLeft,(function(e,t){if(t)return(parseFloat($e(e,"marginLeft"))||e.getBoundingClientRect().left-ze(e,{marginLeft:0},(function(){return e.getBoundingClientRect().left})))+"px"})),C.each({margin:"",padding:"",border:"Width"},(function(e,t){C.cssHooks[e+t]={expand:function(n){for(var i=0,r={},o="string"==typeof n?n.split(" "):[n];i<4;i++)r[e+oe[i]+t]=o[i]||o[i-2]||o[0];return r}},"margin"!==e&&(C.cssHooks[e+t].set=nt)})),C.fn.extend({css:function(e,t){return V(this,(function(e,t,n){var i,r,o={},a=0;if(Array.isArray(t)){for(i=je(e),r=t.length;a<r;a++)o[t[a]]=C.css(e,t[a],!1,i);return o}return void 0!==n?C.style(e,t,n):C.css(e,t)}),e,t,arguments.length>1)}}),C.Tween=ot,ot.prototype={constructor:ot,init:function(e,t,n,i,r,o){this.elem=e,this.prop=n,this.easing=r||C.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=i,this.unit=o||(C.cssNumber[n]?"":"px")},cur:function(){var e=ot.propHooks[this.prop];return e&&e.get?e.get(this):ot.propHooks._default.get(this)},run:function(e){var t,n=ot.propHooks[this.prop];return this.options.duration?this.pos=t=C.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):ot.propHooks._default.set(this),this}},ot.prototype.init.prototype=ot.prototype,ot.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=C.css(e.elem,e.prop,""))&&"auto"!==t?t:0},set:function(e){C.fx.step[e.prop]?C.fx.step[e.prop](e):1!==e.elem.nodeType||!C.cssHooks[e.prop]&&null==e.elem.style[Je(e.prop)]?e.elem[e.prop]=e.now:C.style(e.elem,e.prop,e.now+e.unit)}}},ot.propHooks.scrollTop=ot.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},C.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},C.fx=ot.prototype.init,C.fx.step={};var at,st,lt=/^(?:toggle|show|hide)$/,dt=/queueHooks$/;function ct(){st&&(!1===x.hidden&&i.requestAnimationFrame?i.requestAnimationFrame(ct):i.setTimeout(ct,C.fx.interval),C.fx.tick())}function ut(){return i.setTimeout((function(){at=void 0})),at=Date.now()}function pt(e,t){var n,i=0,r={height:e};for(t=t?1:0;i<4;i+=2-t)r["margin"+(n=oe[i])]=r["padding"+n]=e;return t&&(r.opacity=r.width=e),r}function ht(e,t,n){for(var i,r=(ft.tweeners[t]||[]).concat(ft.tweeners["*"]),o=0,a=r.length;o<a;o++)if(i=r[o].call(n,t,e))return i}function ft(e,t,n){var i,r,o=0,a=ft.prefilters.length,s=C.Deferred().always((function(){delete l.elem})),l=function(){if(r)return!1;for(var t=at||ut(),n=Math.max(0,d.startTime+d.duration-t),i=1-(n/d.duration||0),o=0,a=d.tweens.length;o<a;o++)d.tweens[o].run(i);return s.notifyWith(e,[d,i,n]),i<1&&a?n:(a||s.notifyWith(e,[d,1,0]),s.resolveWith(e,[d]),!1)},d=s.promise({elem:e,props:C.extend({},t),opts:C.extend(!0,{specialEasing:{},easing:C.easing._default},n),originalProperties:t,originalOptions:n,startTime:at||ut(),duration:n.duration,tweens:[],createTween:function(t,n){var i=C.Tween(e,d.opts,t,n,d.opts.specialEasing[t]||d.opts.easing);return d.tweens.push(i),i},stop:function(t){var n=0,i=t?d.tweens.length:0;if(r)return this;for(r=!0;n<i;n++)d.tweens[n].run(1);return t?(s.notifyWith(e,[d,1,0]),s.resolveWith(e,[d,t])):s.rejectWith(e,[d,t]),this}}),c=d.props;for(function(e,t){var n,i,r,o,a;for(n in e)if(r=t[i=q(n)],o=e[n],Array.isArray(o)&&(r=o[1],o=e[n]=o[0]),n!==i&&(e[i]=o,delete e[n]),(a=C.cssHooks[i])&&"expand"in a)for(n in o=a.expand(o),delete e[i],o)n in e||(e[n]=o[n],t[n]=r);else t[i]=r}(c,d.opts.specialEasing);o<a;o++)if(i=ft.prefilters[o].call(d,e,c,d.opts))return v(i.stop)&&(C._queueHooks(d.elem,d.opts.queue).stop=i.stop.bind(i)),i;return C.map(c,ht,d),v(d.opts.start)&&d.opts.start.call(e,d),d.progress(d.opts.progress).done(d.opts.done,d.opts.complete).fail(d.opts.fail).always(d.opts.always),C.fx.timer(C.extend(l,{elem:e,anim:d,queue:d.opts.queue})),d}C.Animation=C.extend(ft,{tweeners:{"*":[function(e,t){var n=this.createTween(e,t);return ce(n.elem,e,re.exec(t),n),n}]},tweener:function(e,t){v(e)?(t=e,e=["*"]):e=e.match(F);for(var n,i=0,r=e.length;i<r;i++)n=e[i],ft.tweeners[n]=ft.tweeners[n]||[],ft.tweeners[n].unshift(t)},prefilters:[function(e,t,n){var i,r,o,a,s,l,d,c,u="width"in t||"height"in t,p=this,h={},f=e.style,m=e.nodeType&&de(e),g=J.get(e,"fxshow");for(i in n.queue||(null==(a=C._queueHooks(e,"fx")).unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,p.always((function(){p.always((function(){a.unqueued--,C.queue(e,"fx").length||a.empty.fire()}))}))),t)if(r=t[i],lt.test(r)){if(delete t[i],o=o||"toggle"===r,r===(m?"hide":"show")){if("show"!==r||!g||void 0===g[i])continue;m=!0}h[i]=g&&g[i]||C.style(e,i)}if((l=!C.isEmptyObject(t))||!C.isEmptyObject(h))for(i in u&&1===e.nodeType&&(n.overflow=[f.overflow,f.overflowX,f.overflowY],null==(d=g&&g.display)&&(d=J.get(e,"display")),"none"===(c=C.css(e,"display"))&&(d?c=d:(he([e],!0),d=e.style.display||d,c=C.css(e,"display"),he([e]))),("inline"===c||"inline-block"===c&&null!=d)&&"none"===C.css(e,"float")&&(l||(p.done((function(){f.display=d})),null==d&&(c=f.display,d="none"===c?"":c)),f.display="inline-block")),n.overflow&&(f.overflow="hidden",p.always((function(){f.overflow=n.overflow[0],f.overflowX=n.overflow[1],f.overflowY=n.overflow[2]}))),l=!1,h)l||(g?"hidden"in g&&(m=g.hidden):g=J.access(e,"fxshow",{display:d}),o&&(g.hidden=!m),m&&he([e],!0),p.done((function(){for(i in m||he([e]),J.remove(e,"fxshow"),h)C.style(e,i,h[i])}))),l=ht(m?g[i]:0,i,p),i in g||(g[i]=l.start,m&&(l.end=l.start,l.start=0))}],prefilter:function(e,t){t?ft.prefilters.unshift(e):ft.prefilters.push(e)}}),C.speed=function(e,t,n){var i=e&&"object"==typeof e?C.extend({},e):{complete:n||!n&&t||v(e)&&e,duration:e,easing:n&&t||t&&!v(t)&&t};return C.fx.off?i.duration=0:"number"!=typeof i.duration&&(i.duration in C.fx.speeds?i.duration=C.fx.speeds[i.duration]:i.duration=C.fx.speeds._default),null!=i.queue&&!0!==i.queue||(i.queue="fx"),i.old=i.complete,i.complete=function(){v(i.old)&&i.old.call(this),i.queue&&C.dequeue(this,i.queue)},i},C.fn.extend({fadeTo:function(e,t,n,i){return this.filter(de).css("opacity",0).show().end().animate({opacity:t},e,n,i)},animate:function(e,t,n,i){var r=C.isEmptyObject(e),o=C.speed(t,n,i),a=function(){var t=ft(this,C.extend({},e),o);(r||J.get(this,"finish"))&&t.stop(!0)};return a.finish=a,r||!1===o.queue?this.each(a):this.queue(o.queue,a)},stop:function(e,t,n){var i=function(e){var t=e.stop;delete e.stop,t(n)};return"string"!=typeof e&&(n=t,t=e,e=void 0),t&&this.queue(e||"fx",[]),this.each((function(){var t=!0,r=null!=e&&e+"queueHooks",o=C.timers,a=J.get(this);if(r)a[r]&&a[r].stop&&i(a[r]);else for(r in a)a[r]&&a[r].stop&&dt.test(r)&&i(a[r]);for(r=o.length;r--;)o[r].elem!==this||null!=e&&o[r].queue!==e||(o[r].anim.stop(n),t=!1,o.splice(r,1));!t&&n||C.dequeue(this,e)}))},finish:function(e){return!1!==e&&(e=e||"fx"),this.each((function(){var t,n=J.get(this),i=n[e+"queue"],r=n[e+"queueHooks"],o=C.timers,a=i?i.length:0;for(n.finish=!0,C.queue(this,e,[]),r&&r.stop&&r.stop.call(this,!0),t=o.length;t--;)o[t].elem===this&&o[t].queue===e&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;t<a;t++)i[t]&&i[t].finish&&i[t].finish.call(this);delete n.finish}))}}),C.each(["toggle","show","hide"],(function(e,t){var n=C.fn[t];C.fn[t]=function(e,i,r){return null==e||"boolean"==typeof e?n.apply(this,arguments):this.animate(pt(t,!0),e,i,r)}})),C.each({slideDown:pt("show"),slideUp:pt("hide"),slideToggle:pt("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},(function(e,t){C.fn[e]=function(e,n,i){return this.animate(t,e,n,i)}})),C.timers=[],C.fx.tick=function(){var e,t=0,n=C.timers;for(at=Date.now();t<n.length;t++)(e=n[t])()||n[t]!==e||n.splice(t--,1);n.length||C.fx.stop(),at=void 0},C.fx.timer=function(e){C.timers.push(e),C.fx.start()},C.fx.interval=13,C.fx.start=function(){st||(st=!0,ct())},C.fx.stop=function(){st=null},C.fx.speeds={slow:600,fast:200,_default:400},C.fn.delay=function(e,t){return e=C.fx&&C.fx.speeds[e]||e,t=t||"fx",this.queue(t,(function(t,n){var r=i.setTimeout(t,e);n.stop=function(){i.clearTimeout(r)}}))},function(){var e=x.createElement("input"),t=x.createElement("select").appendChild(x.createElement("option"));e.type="checkbox",g.checkOn=""!==e.value,g.optSelected=t.selected,(e=x.createElement("input")).value="t",e.type="radio",g.radioValue="t"===e.value}();var mt,gt=C.expr.attrHandle;C.fn.extend({attr:function(e,t){return V(this,C.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each((function(){C.removeAttr(this,e)}))}}),C.extend({attr:function(e,t,n){var i,r,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return void 0===e.getAttribute?C.prop(e,t,n):(1===o&&C.isXMLDoc(e)||(r=C.attrHooks[t.toLowerCase()]||(C.expr.match.bool.test(t)?mt:void 0)),void 0!==n?null===n?void C.removeAttr(e,t):r&&"set"in r&&void 0!==(i=r.set(e,n,t))?i:(e.setAttribute(t,n+""),n):r&&"get"in r&&null!==(i=r.get(e,t))?i:null==(i=C.find.attr(e,t))?void 0:i)},attrHooks:{type:{set:function(e,t){if(!g.radioValue&&"radio"===t&&A(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,i=0,r=t&&t.match(F);if(r&&1===e.nodeType)for(;n=r[i++];)e.removeAttribute(n)}}),mt={set:function(e,t,n){return!1===t?C.removeAttr(e,n):e.setAttribute(n,n),n}},C.each(C.expr.match.bool.source.match(/\w+/g),(function(e,t){var n=gt[t]||C.find.attr;gt[t]=function(e,t,i){var r,o,a=t.toLowerCase();return i||(o=gt[a],gt[a]=r,r=null!=n(e,t,i)?a:null,gt[a]=o),r}}));var vt=/^(?:input|select|textarea|button)$/i,yt=/^(?:a|area)$/i;function xt(e){return(e.match(F)||[]).join(" ")}function bt(e){return e.getAttribute&&e.getAttribute("class")||""}function _t(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(F)||[]}C.fn.extend({prop:function(e,t){return V(this,C.prop,e,t,arguments.length>1)},removeProp:function(e){return this.each((function(){delete this[C.propFix[e]||e]}))}}),C.extend({prop:function(e,t,n){var i,r,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&C.isXMLDoc(e)||(t=C.propFix[t]||t,r=C.propHooks[t]),void 0!==n?r&&"set"in r&&void 0!==(i=r.set(e,n,t))?i:e[t]=n:r&&"get"in r&&null!==(i=r.get(e,t))?i:e[t]},propHooks:{tabIndex:{get:function(e){var t=C.find.attr(e,"tabindex");return t?parseInt(t,10):vt.test(e.nodeName)||yt.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),g.optSelected||(C.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),C.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],(function(){C.propFix[this.toLowerCase()]=this})),C.fn.extend({addClass:function(e){var t,n,i,r,o,a;return v(e)?this.each((function(t){C(this).addClass(e.call(this,t,bt(this)))})):(t=_t(e)).length?this.each((function(){if(i=bt(this),n=1===this.nodeType&&" "+xt(i)+" "){for(o=0;o<t.length;o++)r=t[o],n.indexOf(" "+r+" ")<0&&(n+=r+" ");a=xt(n),i!==a&&this.setAttribute("class",a)}})):this},removeClass:function(e){var t,n,i,r,o,a;return v(e)?this.each((function(t){C(this).removeClass(e.call(this,t,bt(this)))})):arguments.length?(t=_t(e)).length?this.each((function(){if(i=bt(this),n=1===this.nodeType&&" "+xt(i)+" "){for(o=0;o<t.length;o++)for(r=t[o];n.indexOf(" "+r+" ")>-1;)n=n.replace(" "+r+" "," ");a=xt(n),i!==a&&this.setAttribute("class",a)}})):this:this.attr("class","")},toggleClass:function(e,t){var n,i,r,o,a=typeof e,s="string"===a||Array.isArray(e);return v(e)?this.each((function(n){C(this).toggleClass(e.call(this,n,bt(this),t),t)})):"boolean"==typeof t&&s?t?this.addClass(e):this.removeClass(e):(n=_t(e),this.each((function(){if(s)for(o=C(this),r=0;r<n.length;r++)i=n[r],o.hasClass(i)?o.removeClass(i):o.addClass(i);else void 0!==e&&"boolean"!==a||((i=bt(this))&&J.set(this,"__className__",i),this.setAttribute&&this.setAttribute("class",i||!1===e?"":J.get(this,"__className__")||""))})))},hasClass:function(e){var t,n,i=0;for(t=" "+e+" ";n=this[i++];)if(1===n.nodeType&&(" "+xt(bt(n))+" ").indexOf(t)>-1)return!0;return!1}});var wt=/\r/g;C.fn.extend({val:function(e){var t,n,i,r=this[0];return arguments.length?(i=v(e),this.each((function(n){var r;1===this.nodeType&&(null==(r=i?e.call(this,n,C(this).val()):e)?r="":"number"==typeof r?r+="":Array.isArray(r)&&(r=C.map(r,(function(e){return null==e?"":e+""}))),(t=C.valHooks[this.type]||C.valHooks[this.nodeName.toLowerCase()])&&"set"in t&&void 0!==t.set(this,r,"value")||(this.value=r))}))):r?(t=C.valHooks[r.type]||C.valHooks[r.nodeName.toLowerCase()])&&"get"in t&&void 0!==(n=t.get(r,"value"))?n:"string"==typeof(n=r.value)?n.replace(wt,""):null==n?"":n:void 0}}),C.extend({valHooks:{option:{get:function(e){var t=C.find.attr(e,"value");return null!=t?t:xt(C.text(e))}},select:{get:function(e){var t,n,i,r=e.options,o=e.selectedIndex,a="select-one"===e.type,s=a?null:[],l=a?o+1:r.length;for(i=o<0?l:a?o:0;i<l;i++)if(((n=r[i]).selected||i===o)&&!n.disabled&&(!n.parentNode.disabled||!A(n.parentNode,"optgroup"))){if(t=C(n).val(),a)return t;s.push(t)}return s},set:function(e,t){for(var n,i,r=e.options,o=C.makeArray(t),a=r.length;a--;)((i=r[a]).selected=C.inArray(C.valHooks.option.get(i),o)>-1)&&(n=!0);return n||(e.selectedIndex=-1),o}}}}),C.each(["radio","checkbox"],(function(){C.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=C.inArray(C(e).val(),t)>-1}},g.checkOn||(C.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})})),g.focusin="onfocusin"in i;var Et=/^(?:focusinfocus|focusoutblur)$/,Ct=function(e){e.stopPropagation()};C.extend(C.event,{trigger:function(e,t,n,r){var o,a,s,l,d,c,u,p,f=[n||x],m=h.call(e,"type")?e.type:e,g=h.call(e,"namespace")?e.namespace.split("."):[];if(a=p=s=n=n||x,3!==n.nodeType&&8!==n.nodeType&&!Et.test(m+C.event.triggered)&&(m.indexOf(".")>-1&&(g=m.split("."),m=g.shift(),g.sort()),d=m.indexOf(":")<0&&"on"+m,(e=e[C.expando]?e:new C.Event(m,"object"==typeof e&&e)).isTrigger=r?2:3,e.namespace=g.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+g.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=n),t=null==t?[e]:C.makeArray(t,[e]),u=C.event.special[m]||{},r||!u.trigger||!1!==u.trigger.apply(n,t))){if(!r&&!u.noBubble&&!y(n)){for(l=u.delegateType||m,Et.test(l+m)||(a=a.parentNode);a;a=a.parentNode)f.push(a),s=a;s===(n.ownerDocument||x)&&f.push(s.defaultView||s.parentWindow||i)}for(o=0;(a=f[o++])&&!e.isPropagationStopped();)p=a,e.type=o>1?l:u.bindType||m,(c=(J.get(a,"events")||Object.create(null))[e.type]&&J.get(a,"handle"))&&c.apply(a,t),(c=d&&a[d])&&c.apply&&Y(a)&&(e.result=c.apply(a,t),!1===e.result&&e.preventDefault());return e.type=m,r||e.isDefaultPrevented()||u._default&&!1!==u._default.apply(f.pop(),t)||!Y(n)||d&&v(n[m])&&!y(n)&&((s=n[d])&&(n[d]=null),C.event.triggered=m,e.isPropagationStopped()&&p.addEventListener(m,Ct),n[m](),e.isPropagationStopped()&&p.removeEventListener(m,Ct),C.event.triggered=void 0,s&&(n[d]=s)),e.result}},simulate:function(e,t,n){var i=C.extend(new C.Event,n,{type:e,isSimulated:!0});C.event.trigger(i,null,t)}}),C.fn.extend({trigger:function(e,t){return this.each((function(){C.event.trigger(e,t,this)}))},triggerHandler:function(e,t){var n=this[0];if(n)return C.event.trigger(e,t,n,!0)}}),g.focusin||C.each({focus:"focusin",blur:"focusout"},(function(e,t){var n=function(e){C.event.simulate(t,e.target,C.event.fix(e))};C.event.special[t]={setup:function(){var i=this.ownerDocument||this.document||this,r=J.access(i,t);r||i.addEventListener(e,n,!0),J.access(i,t,(r||0)+1)},teardown:function(){var i=this.ownerDocument||this.document||this,r=J.access(i,t)-1;r?J.access(i,t,r):(i.removeEventListener(e,n,!0),J.remove(i,t))}}}));var Tt=i.location,kt={guid:Date.now()},St=/\?/;C.parseXML=function(e){var t,n;if(!e||"string"!=typeof e)return null;try{t=(new i.DOMParser).parseFromString(e,"text/xml")}catch(e){}return n=t&&t.getElementsByTagName("parsererror")[0],t&&!n||C.error("Invalid XML: "+(n?C.map(n.childNodes,(function(e){return e.textContent})).join("\n"):e)),t};var Dt=/\[\]$/,Rt=/\r?\n/g,At=/^(?:submit|button|image|reset|file)$/i,Ot=/^(?:input|select|textarea|keygen)/i;function Mt(e,t,n,i){var r;if(Array.isArray(t))C.each(t,(function(t,r){n||Dt.test(e)?i(e,r):Mt(e+"["+("object"==typeof r&&null!=r?t:"")+"]",r,n,i)}));else if(n||"object"!==w(t))i(e,t);else for(r in t)Mt(e+"["+r+"]",t[r],n,i)}C.param=function(e,t){var n,i=[],r=function(e,t){var n=v(t)?t():t;i[i.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==n?"":n)};if(null==e)return"";if(Array.isArray(e)||e.jquery&&!C.isPlainObject(e))C.each(e,(function(){r(this.name,this.value)}));else for(n in e)Mt(n,e[n],t,r);return i.join("&")},C.fn.extend({serialize:function(){return C.param(this.serializeArray())},serializeArray:function(){return this.map((function(){var e=C.prop(this,"elements");return e?C.makeArray(e):this})).filter((function(){var e=this.type;return this.name&&!C(this).is(":disabled")&&Ot.test(this.nodeName)&&!At.test(e)&&(this.checked||!ge.test(e))})).map((function(e,t){var n=C(this).val();return null==n?null:Array.isArray(n)?C.map(n,(function(e){return{name:t.name,value:e.replace(Rt,"\r\n")}})):{name:t.name,value:n.replace(Rt,"\r\n")}})).get()}});var Nt=/%20/g,Ut=/#.*$/,It=/([?&])_=[^&]*/,Pt=/^(.*?):[ \t]*([^\r\n]*)$/gm,Lt=/^(?:GET|HEAD)$/,Ft=/^\/\//,Zt={},Ht={},Bt="*/".concat("*"),jt=x.createElement("a");function zt(e){return function(t,n){"string"!=typeof t&&(n=t,t="*");var i,r=0,o=t.toLowerCase().match(F)||[];if(v(n))for(;i=o[r++];)"+"===i[0]?(i=i.slice(1)||"*",(e[i]=e[i]||[]).unshift(n)):(e[i]=e[i]||[]).push(n)}}function Gt(e,t,n,i){var r={},o=e===Ht;function a(s){var l;return r[s]=!0,C.each(e[s]||[],(function(e,s){var d=s(t,n,i);return"string"!=typeof d||o||r[d]?o?!(l=d):void 0:(t.dataTypes.unshift(d),a(d),!1)})),l}return a(t.dataTypes[0])||!r["*"]&&a("*")}function Vt(e,t){var n,i,r=C.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((r[n]?e:i||(i={}))[n]=t[n]);return i&&C.extend(!0,e,i),e}jt.href=Tt.href,C.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Tt.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Tt.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Bt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":C.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Vt(Vt(e,C.ajaxSettings),t):Vt(C.ajaxSettings,e)},ajaxPrefilter:zt(Zt),ajaxTransport:zt(Ht),ajax:function(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};var n,r,o,a,s,l,d,c,u,p,h=C.ajaxSetup({},t),f=h.context||h,m=h.context&&(f.nodeType||f.jquery)?C(f):C.event,g=C.Deferred(),v=C.Callbacks("once memory"),y=h.statusCode||{},b={},_={},w="canceled",E={readyState:0,getResponseHeader:function(e){var t;if(d){if(!a)for(a={};t=Pt.exec(o);)a[t[1].toLowerCase()+" "]=(a[t[1].toLowerCase()+" "]||[]).concat(t[2]);t=a[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return d?o:null},setRequestHeader:function(e,t){return null==d&&(e=_[e.toLowerCase()]=_[e.toLowerCase()]||e,b[e]=t),this},overrideMimeType:function(e){return null==d&&(h.mimeType=e),this},statusCode:function(e){var t;if(e)if(d)E.always(e[E.status]);else for(t in e)y[t]=[y[t],e[t]];return this},abort:function(e){var t=e||w;return n&&n.abort(t),T(0,t),this}};if(g.promise(E),h.url=((e||h.url||Tt.href)+"").replace(Ft,Tt.protocol+"//"),h.type=t.method||t.type||h.method||h.type,h.dataTypes=(h.dataType||"*").toLowerCase().match(F)||[""],null==h.crossDomain){l=x.createElement("a");try{l.href=h.url,l.href=l.href,h.crossDomain=jt.protocol+"//"+jt.host!=l.protocol+"//"+l.host}catch(e){h.crossDomain=!0}}if(h.data&&h.processData&&"string"!=typeof h.data&&(h.data=C.param(h.data,h.traditional)),Gt(Zt,h,t,E),d)return E;for(u in(c=C.event&&h.global)&&0==C.active++&&C.event.trigger("ajaxStart"),h.type=h.type.toUpperCase(),h.hasContent=!Lt.test(h.type),r=h.url.replace(Ut,""),h.hasContent?h.data&&h.processData&&0===(h.contentType||"").indexOf("application/x-www-form-urlencoded")&&(h.data=h.data.replace(Nt,"+")):(p=h.url.slice(r.length),h.data&&(h.processData||"string"==typeof h.data)&&(r+=(St.test(r)?"&":"?")+h.data,delete h.data),!1===h.cache&&(r=r.replace(It,"$1"),p=(St.test(r)?"&":"?")+"_="+kt.guid+++p),h.url=r+p),h.ifModified&&(C.lastModified[r]&&E.setRequestHeader("If-Modified-Since",C.lastModified[r]),C.etag[r]&&E.setRequestHeader("If-None-Match",C.etag[r])),(h.data&&h.hasContent&&!1!==h.contentType||t.contentType)&&E.setRequestHeader("Content-Type",h.contentType),E.setRequestHeader("Accept",h.dataTypes[0]&&h.accepts[h.dataTypes[0]]?h.accepts[h.dataTypes[0]]+("*"!==h.dataTypes[0]?", "+Bt+"; q=0.01":""):h.accepts["*"]),h.headers)E.setRequestHeader(u,h.headers[u]);if(h.beforeSend&&(!1===h.beforeSend.call(f,E,h)||d))return E.abort();if(w="abort",v.add(h.complete),E.done(h.success),E.fail(h.error),n=Gt(Ht,h,t,E)){if(E.readyState=1,c&&m.trigger("ajaxSend",[E,h]),d)return E;h.async&&h.timeout>0&&(s=i.setTimeout((function(){E.abort("timeout")}),h.timeout));try{d=!1,n.send(b,T)}catch(e){if(d)throw e;T(-1,e)}}else T(-1,"No Transport");function T(e,t,a,l){var u,p,x,b,_,w=t;d||(d=!0,s&&i.clearTimeout(s),n=void 0,o=l||"",E.readyState=e>0?4:0,u=e>=200&&e<300||304===e,a&&(b=function(e,t,n){for(var i,r,o,a,s=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===i&&(i=e.mimeType||t.getResponseHeader("Content-Type"));if(i)for(r in s)if(s[r]&&s[r].test(i)){l.unshift(r);break}if(l[0]in n)o=l[0];else{for(r in n){if(!l[0]||e.converters[r+" "+l[0]]){o=r;break}a||(a=r)}o=o||a}if(o)return o!==l[0]&&l.unshift(o),n[o]}(h,E,a)),!u&&C.inArray("script",h.dataTypes)>-1&&C.inArray("json",h.dataTypes)<0&&(h.converters["text script"]=function(){}),b=function(e,t,n,i){var r,o,a,s,l,d={},c=e.dataTypes.slice();if(c[1])for(a in e.converters)d[a.toLowerCase()]=e.converters[a];for(o=c.shift();o;)if(e.responseFields[o]&&(n[e.responseFields[o]]=t),!l&&i&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=o,o=c.shift())if("*"===o)o=l;else if("*"!==l&&l!==o){if(!(a=d[l+" "+o]||d["* "+o]))for(r in d)if((s=r.split(" "))[1]===o&&(a=d[l+" "+s[0]]||d["* "+s[0]])){!0===a?a=d[r]:!0!==d[r]&&(o=s[0],c.unshift(s[1]));break}if(!0!==a)if(a&&e.throws)t=a(t);else try{t=a(t)}catch(e){return{state:"parsererror",error:a?e:"No conversion from "+l+" to "+o}}}return{state:"success",data:t}}(h,b,E,u),u?(h.ifModified&&((_=E.getResponseHeader("Last-Modified"))&&(C.lastModified[r]=_),(_=E.getResponseHeader("etag"))&&(C.etag[r]=_)),204===e||"HEAD"===h.type?w="nocontent":304===e?w="notmodified":(w=b.state,p=b.data,u=!(x=b.error))):(x=w,!e&&w||(w="error",e<0&&(e=0))),E.status=e,E.statusText=(t||w)+"",u?g.resolveWith(f,[p,w,E]):g.rejectWith(f,[E,w,x]),E.statusCode(y),y=void 0,c&&m.trigger(u?"ajaxSuccess":"ajaxError",[E,h,u?p:x]),v.fireWith(f,[E,w]),c&&(m.trigger("ajaxComplete",[E,h]),--C.active||C.event.trigger("ajaxStop")))}return E},getJSON:function(e,t,n){return C.get(e,t,n,"json")},getScript:function(e,t){return C.get(e,void 0,t,"script")}}),C.each(["get","post"],(function(e,t){C[t]=function(e,n,i,r){return v(n)&&(r=r||i,i=n,n=void 0),C.ajax(C.extend({url:e,type:t,dataType:r,data:n,success:i},C.isPlainObject(e)&&e))}})),C.ajaxPrefilter((function(e){var t;for(t in e.headers)"content-type"===t.toLowerCase()&&(e.contentType=e.headers[t]||"")})),C._evalUrl=function(e,t,n){return C.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){C.globalEval(e,t,n)}})},C.fn.extend({wrapAll:function(e){var t;return this[0]&&(v(e)&&(e=e.call(this[0])),t=C(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map((function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e})).append(this)),this},wrapInner:function(e){return v(e)?this.each((function(t){C(this).wrapInner(e.call(this,t))})):this.each((function(){var t=C(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)}))},wrap:function(e){var t=v(e);return this.each((function(n){C(this).wrapAll(t?e.call(this,n):e)}))},unwrap:function(e){return this.parent(e).not("body").each((function(){C(this).replaceWith(this.childNodes)})),this}}),C.expr.pseudos.hidden=function(e){return!C.expr.pseudos.visible(e)},C.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},C.ajaxSettings.xhr=function(){try{return new i.XMLHttpRequest}catch(e){}};var Wt={0:200,1223:204},$t=C.ajaxSettings.xhr();g.cors=!!$t&&"withCredentials"in $t,g.ajax=$t=!!$t,C.ajaxTransport((function(e){var t,n;if(g.cors||$t&&!e.crossDomain)return{send:function(r,o){var a,s=e.xhr();if(s.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(a in e.xhrFields)s[a]=e.xhrFields[a];for(a in e.mimeType&&s.overrideMimeType&&s.overrideMimeType(e.mimeType),e.crossDomain||r["X-Requested-With"]||(r["X-Requested-With"]="XMLHttpRequest"),r)s.setRequestHeader(a,r[a]);t=function(e){return function(){t&&(t=n=s.onload=s.onerror=s.onabort=s.ontimeout=s.onreadystatechange=null,"abort"===e?s.abort():"error"===e?"number"!=typeof s.status?o(0,"error"):o(s.status,s.statusText):o(Wt[s.status]||s.status,s.statusText,"text"!==(s.responseType||"text")||"string"!=typeof s.responseText?{binary:s.response}:{text:s.responseText},s.getAllResponseHeaders()))}},s.onload=t(),n=s.onerror=s.ontimeout=t("error"),void 0!==s.onabort?s.onabort=n:s.onreadystatechange=function(){4===s.readyState&&i.setTimeout((function(){t&&n()}))},t=t("abort");try{s.send(e.hasContent&&e.data||null)}catch(e){if(t)throw e}},abort:function(){t&&t()}}})),C.ajaxPrefilter((function(e){e.crossDomain&&(e.contents.script=!1)})),C.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return C.globalEval(e),e}}}),C.ajaxPrefilter("script",(function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")})),C.ajaxTransport("script",(function(e){var t,n;if(e.crossDomain||e.scriptAttrs)return{send:function(i,r){t=C("<script>").attr(e.scriptAttrs||{}).prop({charset:e.scriptCharset,src:e.url}).on("load error",n=function(e){t.remove(),n=null,e&&r("error"===e.type?404:200,e.type)}),x.head.appendChild(t[0])},abort:function(){n&&n()}}}));var Kt,qt=[],Yt=/(=)\?(?=&|$)|\?\?/;C.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=qt.pop()||C.expando+"_"+kt.guid++;return this[e]=!0,e}}),C.ajaxPrefilter("json jsonp",(function(e,t,n){var r,o,a,s=!1!==e.jsonp&&(Yt.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&Yt.test(e.data)&&"data");if(s||"jsonp"===e.dataTypes[0])return r=e.jsonpCallback=v(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,s?e[s]=e[s].replace(Yt,"$1"+r):!1!==e.jsonp&&(e.url+=(St.test(e.url)?"&":"?")+e.jsonp+"="+r),e.converters["script json"]=function(){return a||C.error(r+" was not called"),a[0]},e.dataTypes[0]="json",o=i[r],i[r]=function(){a=arguments},n.always((function(){void 0===o?C(i).removeProp(r):i[r]=o,e[r]&&(e.jsonpCallback=t.jsonpCallback,qt.push(r)),a&&v(o)&&o(a[0]),a=o=void 0})),"script"})),g.createHTMLDocument=((Kt=x.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===Kt.childNodes.length),C.parseHTML=function(e,t,n){return"string"!=typeof e?[]:("boolean"==typeof t&&(n=t,t=!1),t||(g.createHTMLDocument?((i=(t=x.implementation.createHTMLDocument("")).createElement("base")).href=x.location.href,t.head.appendChild(i)):t=x),o=!n&&[],(r=O.exec(e))?[t.createElement(r[1])]:(r=Ee([e],t,o),o&&o.length&&C(o).remove(),C.merge([],r.childNodes)));var i,r,o},C.fn.load=function(e,t,n){var i,r,o,a=this,s=e.indexOf(" ");return s>-1&&(i=xt(e.slice(s)),e=e.slice(0,s)),v(t)?(n=t,t=void 0):t&&"object"==typeof t&&(r="POST"),a.length>0&&C.ajax({url:e,type:r||"GET",dataType:"html",data:t}).done((function(e){o=arguments,a.html(i?C("<div>").append(C.parseHTML(e)).find(i):e)})).always(n&&function(e,t){a.each((function(){n.apply(this,o||[e.responseText,t,e])}))}),this},C.expr.pseudos.animated=function(e){return C.grep(C.timers,(function(t){return e===t.elem})).length},C.offset={setOffset:function(e,t,n){var i,r,o,a,s,l,d=C.css(e,"position"),c=C(e),u={};"static"===d&&(e.style.position="relative"),s=c.offset(),o=C.css(e,"top"),l=C.css(e,"left"),("absolute"===d||"fixed"===d)&&(o+l).indexOf("auto")>-1?(a=(i=c.position()).top,r=i.left):(a=parseFloat(o)||0,r=parseFloat(l)||0),v(t)&&(t=t.call(e,n,C.extend({},s))),null!=t.top&&(u.top=t.top-s.top+a),null!=t.left&&(u.left=t.left-s.left+r),"using"in t?t.using.call(e,u):c.css(u)}},C.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each((function(t){C.offset.setOffset(this,e,t)}));var t,n,i=this[0];return i?i.getClientRects().length?(t=i.getBoundingClientRect(),n=i.ownerDocument.defaultView,{top:t.top+n.pageYOffset,left:t.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,n,i=this[0],r={top:0,left:0};if("fixed"===C.css(i,"position"))t=i.getBoundingClientRect();else{for(t=this.offset(),n=i.ownerDocument,e=i.offsetParent||n.documentElement;e&&(e===n.body||e===n.documentElement)&&"static"===C.css(e,"position");)e=e.parentNode;e&&e!==i&&1===e.nodeType&&((r=C(e).offset()).top+=C.css(e,"borderTopWidth",!0),r.left+=C.css(e,"borderLeftWidth",!0))}return{top:t.top-r.top-C.css(i,"marginTop",!0),left:t.left-r.left-C.css(i,"marginLeft",!0)}}},offsetParent:function(){return this.map((function(){for(var e=this.offsetParent;e&&"static"===C.css(e,"position");)e=e.offsetParent;return e||ae}))}}),C.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},(function(e,t){var n="pageYOffset"===t;C.fn[e]=function(i){return V(this,(function(e,i,r){var o;if(y(e)?o=e:9===e.nodeType&&(o=e.defaultView),void 0===r)return o?o[t]:e[i];o?o.scrollTo(n?o.pageXOffset:r,n?r:o.pageYOffset):e[i]=r}),e,i,arguments.length)}})),C.each(["top","left"],(function(e,t){C.cssHooks[t]=Ke(g.pixelPosition,(function(e,n){if(n)return n=$e(e,t),He.test(n)?C(e).position()[t]+"px":n}))})),C.each({Height:"height",Width:"width"},(function(e,t){C.each({padding:"inner"+e,content:t,"":"outer"+e},(function(n,i){C.fn[i]=function(r,o){var a=arguments.length&&(n||"boolean"!=typeof r),s=n||(!0===r||!0===o?"margin":"border");return V(this,(function(t,n,r){var o;return y(t)?0===i.indexOf("outer")?t["inner"+e]:t.document.documentElement["client"+e]:9===t.nodeType?(o=t.documentElement,Math.max(t.body["scroll"+e],o["scroll"+e],t.body["offset"+e],o["offset"+e],o["client"+e])):void 0===r?C.css(t,n,s):C.style(t,n,r,s)}),t,a?r:void 0,a)}}))})),C.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],(function(e,t){C.fn[t]=function(e){return this.on(t,e)}})),C.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,i){return this.on(t,e,n,i)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)},hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),C.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),(function(e,t){C.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}));var Xt=/^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;C.proxy=function(e,t){var n,i,r;if("string"==typeof t&&(n=e[t],t=e,e=n),v(e))return i=s.call(arguments,2),r=function(){return e.apply(t||this,i.concat(s.call(arguments)))},r.guid=e.guid=e.guid||C.guid++,r},C.holdReady=function(e){e?C.readyWait++:C.ready(!0)},C.isArray=Array.isArray,C.parseJSON=JSON.parse,C.nodeName=A,C.isFunction=v,C.isWindow=y,C.camelCase=q,C.type=w,C.now=Date.now,C.isNumeric=function(e){var t=C.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},C.trim=function(e){return null==e?"":(e+"").replace(Xt,"$1")},void 0===(n=function(){return C}.apply(t,[]))||(e.exports=n);var Jt=i.jQuery,Qt=i.$;return C.noConflict=function(e){return i.$===C&&(i.$=Qt),e&&i.jQuery===C&&(i.jQuery=Jt),C},void 0===r&&(i.jQuery=i.$=C),C}))},5428:(e,t,n)=>{"use strict";n.r(t)},6830:(e,t,n)=>{"use strict";n.r(t)},1317:(e,t,n)=>{"use strict";n.r(t)},4121:(e,t,n)=>{"use strict";n.r(t)},9557:function(e,t,n){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.delMap=t.map=void 0;var r=i(n(3316)),o=i(n(8514));t.map=function(){var e=document.getElementsByTagName("body")[0],t=document.createElement("div");t.classList.add("map"),t.innerHTML=r.default,e.appendChild(t),(0,o.default)()},t.delMap=function(){document.getElementsByClassName("map")[0].remove()},t.default={map:t.map,delMap:t.delMap}},3316:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default='\n  <svg xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.2" baseProfile="tiny" id="svg2" x="0px" y="0px" width="950px" height="620px" viewBox="0 0 1090 620" xml:space="preserve" xmlns:xml="http://www.w3.org/XML/1998/namespace"> \n    <path d="m 130.24729,259.26463 -0.71301,-1.3323 -0.83965,1.13893 -1.20312,0.61639 -0.3652,1.98343 -2.7566,-1.20341 -1.29507,1.2557 -1.79887,-1.96928 -0.51738,2.08913 -1.70104,0.51357 0.48353,2.36036 1.41813,-1.06374 1.07846,1.34199 2.31013,-0.11587 0.63117,-1.4221 0.77636,1.28888 1.63087,-0.86752 1.60105,1.08107 2.52028,-0.21377 0.38854,-1.63667 -0.76508,-2.45949 0.30997,-0.96605 c -0.75062,0.0982 -0.83803,-0.13605 -1.19347,-0.41925 z" stroke="#888888" stroke-width="0.5" id="RU-MOW"></path>\n    <path d="m 136.30673,181.67516 -2.95955,-0.98651 -3.94605,0.98651 -0.98652,3.94606 0.98652,2.95954 3.94605,1.97303 2.95955,-1.97303 1.97302,-2.95954 -1.97302,-3.94606 z" stroke="#888888" stroke-width="0.5" id="RU-SPE"></path>\n    <path d="m 305.00066,165.89094 -4.93257,0 -3.94605,3.94605 0.98651,3.94606 4.93257,0.98651 0.98652,0 0.98651,-0.98651 0.98651,0 0,0 0.98652,-0.98651 0,0.98651 0,0 -0.98652,0.98651 0,0 0.98652,0 0.98651,-0.98651 0,-3.94606 -1.97303,-3.94605 z m 45.37966,22.68982 1.97303,0.98652 0,0.98651 0,0.98652 0,0.98651 2.95954,1.97303 1.97303,-2.95954 -0.98652,-2.95955 -0.98651,-2.95954 0,0 0,-1.97303 -0.98651,-1.97303 -1.97303,0 0,1.97303 -0.98652,0 -0.98651,0 0,4.93257 z m -27.6224,-0.98651 -2.95954,-0.98651 -3.94606,-0.98652 -4.93257,0.98652 0,0 0.98651,0.98651 0,1.97303 -1.97303,0 -0.98651,-0.98652 0,-0.98651 0.98651,-0.98651 -2.95954,-0.98652 -2.95954,0 -0.98651,0 -0.98652,-0.98651 -5.91908,0.98651 -5.91909,-0.98651 -0.98651,-0.98652 0,-0.98651 0,0.98651 0,0 0,0.98652 -0.98652,0 0,0.98651 0,1.97303 0,0 -0.98651,-1.97303 -1.97303,-0.98651 -0.98652,-0.98652 -3.94605,2.95955 -3.94606,3.94605 -4.93257,-1.97303 -3.94606,-2.95954 0.98652,-2.95954 0.98651,-1.97303 -0.98651,-1.97303 -0.98652,-1.97303 3.94606,-1.97303 2.95954,-0.98651 4.93257,2.95954 0.98652,-0.98651 0.98651,-0.98652 0,-0.98651 0.98652,0 0,-2.95954 0,-2.95955 -2.95955,-3.94605 -3.94605,-2.95955 -0.98652,-2.95954 -0.98651,-0.98651 0,2.95954 0,4.93257 -5.91909,4.93257 -4.93257,3.94606 0,2.95954 0,2.95955 -3.94606,2.95954 -1.97302,1.97303 0,0.98651 0,1.97303 3.94605,5.91908 2.95954,5.91909 0.98652,1.97303 0.98651,0.98651 0,0.98652 1.97303,0 0,0 0,-0.98652 1.97303,-0.98651 1.97303,0 1.97303,0.98651 1.97303,1.97303 0,0 6.9056,0 7.89211,0.98652 1.97303,-0.98652 0.98651,-0.98651 0.98652,0.98651 0,0.98652 1.97303,-0.98652 1.97302,0 4.93258,3.94606 5.91908,4.93257 29.59543,17.75726 0.98651,0.98651 0.98652,0.98652 5.91908,-0.98652 6.9056,-1.97303 0,-0.98651 0.98652,-1.97303 0.98651,0.98651 0.98651,0 1.97303,-0.98651 1.97303,-0.98651 1.97303,-0.98652 1.97303,-0.98651 0.98651,-0.98652 0.98652,0 0.98651,0 1.97303,0.98652 1.97303,-2.95955 0,-1.97302 -0.98652,-0.98652 -1.97302,-2.95954 0.98651,-0.98652 0.98651,-0.98651 1.97303,-1.97303 0,-1.97303 -2.95954,-4.93257 -3.94606,-3.94606 -4.93257,-3.94605 -0.98651,-0.98652 -0.98652,-0.98651 -0.98651,0.98651 -0.98652,0.98652 0,0 -0.98651,-0.98652 -0.98651,0 -0.98652,0.98652 0,5.91908 -0.98651,5.91909 0,0 0,0 -0.98652,-0.98652 -0.98651,0 -1.97303,0.98652 -1.97303,-0.98652 -0.98651,0 -0.98652,1.97303 -2.95954,0.98652 -0.98651,-1.97303 0.98651,-1.97303 1.97303,-0.98651 0.98651,0 0,-1.97303 -0.98651,-1.97303 0.98651,0 -6.9056,-0.98652 -5.91908,0.98652 -1.97303,-2.95954 -5.91909,-1.97303 -3.94605,0.98651 0,0.98652 -0.98652,0.98651 -0.98651,-1.97303 -1.97303,0 -0.98651,0.98652 -0.98652,0 0,0 0.98652,-0.98652 0,-0.98651 0,-0.98652 -1.97303,-0.98651 -1.97303,0 0.98651,-0.98652 0,-0.98651 0.98652,0 0.98651,0 1.97303,0.98651 0.98651,-1.97302 0.98652,-1.97303 0.98651,0 0.98652,-0.98652 0,-0.98651 -0.98652,0 1.97303,0 1.97303,0 0,0 z" stroke="#888888" stroke-width="0.5" id="RU-NEN"></path>\n    <path d="m 157.02353,237.90648 0.98651,-0.98652 -2.95954,-0.98651 -0.98652,0.98651 0.98652,0.98652 1.97303,0 z m 6.9056,0.98651 -0.98652,0 -0.98651,0.98651 -2.95955,-1.97302 0,3.94605 -0.98651,2.95955 -1.97303,1.97302 0,-0.98651 0,-0.98651 0,-0.98652 -2.95954,0.98652 -0.98652,-0.98652 0.98652,-0.98651 0.98651,0 -0.98651,-5.91909 -1.97303,0 -1.97303,0.98652 0.98652,0.98651 -0.98652,0.98651 -0.98651,0.98652 -1.97303,0 0,0.98651 0,0.98652 -0.98652,1.97303 0,2.95954 0,1.97303 0.98652,0.98651 -2.95954,1.97303 -2.95955,2.95954 0,0.98652 0,0.98651 0,1.97303 2.95955,2.95954 2.95954,-0.98651 5.91908,-1.97303 4.93258,1.97303 5.91908,-3.94606 6.9056,-2.95954 0,-0.98652 0.98651,-1.97302 -3.94605,-4.93258 0,-4.93257 -2.95954,-2.95954 z" stroke="#888888" stroke-width="0.5" id="RU-YAR"></path>\n    <path d="m 255.67495,352.34213 m 0,0 0,2.95954 -1.97303,3.94606 0.98652,0.98651 0.98651,0.98652 -1.97303,0 -0.98651,0 -0.98652,0 -0.98651,0.98651 -0.98651,0 -1.97303,-0.98651 -0.98652,1.97303 -0.98651,0.98651 -0.98652,0 0,-0.98651 0,-0.98652 -0.98651,-0.98651 -1.97303,0.98651 0,-1.97303 0.98652,-0.98651 -2.95955,-2.95954 -2.95954,0.98651 -0.98651,0.98652 0,0.98651 -0.98652,0 0,0.98651 1.97303,6.9056 0,0.98652 1.97303,0 1.97303,0 0,0.98651 0.98651,0.98652 5.91909,0 4.93257,0 -1.97303,2.95954 -2.95954,2.95954 -0.98652,1.97303 -0.98651,-0.98651 -0.98652,-0.98652 -0.98651,0.98652 -1.97303,0 -0.98651,0 -0.98652,0 -2.95954,4.93257 -2.95954,4.93257 -0.98652,0.98651 -1.97303,1.97303 0,0.98652 0,0.98651 -0.98651,0 0,0.98651 0.98651,0.98652 0,0.98651 0,0.98652 0.98652,0 0.98651,-0.98652 2.95955,1.97303 2.95954,1.97303 -1.97303,1.97303 -1.97303,1.97303 0.98652,0 3.94605,0.98651 3.94606,-0.98651 0.98651,-2.95955 0,-1.97302 0.98652,-0.98652 0.98651,0 0.98652,-0.98651 0.98651,0 3.94606,1.97303 2.95954,1.97302 -1.97303,-3.94605 -1.97303,-2.95955 1.97303,-1.97302 1.97303,0 -1.97303,-0.98652 -1.97303,-1.97303 0.98652,0 0.98651,-0.98651 0.98652,-0.98652 -0.98652,-0.98651 0.98652,0 0.98651,0 0.98652,0 0.98651,0 0,0.98651 0.98651,0.98652 2.95955,0.98651 1.97302,0.98652 0,0.98651 0.98652,0.98652 0.98651,-0.98652 2.95955,0 2.95954,0.98652 0,-0.98652 0,0 0,-0.98651 -0.98652,-0.98652 1.97303,-1.97303 0,-1.97302 -2.95954,-1.97303 -3.94606,-2.95955 1.97303,-1.97302 0.98652,-0.98652 0.98651,-1.97303 0,-0.98651 0.98651,0 0.98652,-0.98651 0.98651,0 0.98652,0 0.98651,-3.94606 0,-4.93257 -0.98651,-1.97303 0,-0.98652 -0.98652,-0.98651 -1.97303,-0.98651 0,0 -0.98651,0 -0.98651,0.98651 -4.93258,-2.95954 -4.93257,-3.94606 0,-0.98651 -0.98651,0 -0.98651,0 -0.98652,0.98651 z" stroke="#888888" stroke-width="0.5" id="RU-CHE"></path>\n    <path d="m 178.72684,324.71973 -0.98652,-1.97303 -3.94605,-0.98651 0,-1.97303 -2.95955,-1.97303 -1.97302,-2.95954 -3.94606,5.91908 -1.97303,-0.98651 -3.94606,0 0.98652,3.94606 -0.98652,3.94605 0.98652,1.97303 0,1.97303 -2.95954,3.94606 -2.95955,1.97303 2.95955,4.93257 5.91908,0 0.98652,0.98651 0,0.98652 1.97302,-2.95955 1.97303,-4.93257 0.98652,0 1.97302,0 1.97303,-0.98651 0.98652,0 1.97303,0.98651 1.97302,0 1.97303,1.97303 2.95955,1.97303 0,-0.98652 0.98651,0 0.98651,0 0.98652,0 1.97303,-2.95954 0.98651,-1.97303 -1.97303,-2.95954 0,-2.95954 -0.98651,-1.97303 -2.95954,0 -1.97303,0 -1.97303,-1.97303 z" stroke="#888888" stroke-width="0.5" id="RU-ULY"></path>\n    <path d="m 337.55563,344.45002 -3.94605,0.98651 -0.98652,0.98651 0,0.98652 -1.97303,0 -1.97302,-0.98652 -1.97303,0 -2.95955,0 -0.98651,-0.98651 -0.98651,0 -1.97303,0.98651 -0.98652,1.97303 -2.95954,0 -2.95954,-0.98651 0,1.97303 -0.98652,0.98651 0,1.97303 0,1.97303 -1.97303,0.98651 -1.97302,0 -1.97303,0 0,0 0,-0.98651 -2.95954,0 -1.97303,0.98651 -1.97303,3.94606 -0.98652,4.93257 0,0.98652 0.98652,0 -0.98652,0.98651 -0.98651,0 -0.98651,0 -0.98652,2.95954 0,2.95955 1.97303,0.98651 1.97303,0.98651 0,1.97303 0,1.97303 0.98651,0 1.97303,0 0,0.98651 0.98652,0.98652 0.98651,-0.98652 0.98651,0.98652 1.97303,2.95954 0.98652,2.95954 0.98651,0.98652 1.97303,0.98651 0,0 0.98651,0 0.98652,2.95955 1.97303,3.94605 0,0 0.98651,0 0,-0.98651 0.98651,0.98651 0,0.98652 0.98652,0 1.97303,0.98651 1.97303,1.97303 0.98651,1.97303 1.97303,0 0.98651,-0.98652 0,-1.97302 0.98652,0 1.97303,-0.98652 -0.98652,-0.98651 0,-0.98652 0.98652,0 0.98651,0 0,-0.98651 -0.98651,-0.98652 0.98651,-0.98651 1.97303,-0.98651 0,-0.98652 0.98651,-0.98651 0,0 0.98652,0 0,-0.98652 0,-0.98651 0.98651,-0.98652 0.98652,0 0,-0.98651 0,-0.98651 0,-0.98652 1.97302,0.98652 2.95955,-0.98652 -0.98652,-6.9056 0,-0.98651 -0.98651,0 -1.97303,0 -0.98651,-0.98652 0.98651,-0.98651 1.97303,-0.98651 0,-2.95955 0,-2.95954 2.95954,-1.97303 2.95954,-1.97303 0.98652,0.98652 0.98651,1.97303 -0.98651,0.98651 0,1.97303 1.97303,0 1.97303,0.98651 1.97302,0.98652 2.95955,1.97303 0.98651,-0.98652 1.97303,0 6.9056,1.97303 7.89211,-2.95954 -1.97303,-1.97303 -2.95954,0 -0.98651,-0.98652 -0.98652,-0.98651 -2.95954,-1.97303 -1.97303,-0.98651 0,-1.97303 0.98652,-2.95954 -1.97303,0 -1.97303,-1.97303 0.98651,-0.98652 0,-0.98651 -0.98651,-0.98652 -0.98652,0 -0.98651,-3.94605 -1.97303,-2.95955 -0.98651,-0.98651 -0.98652,0 -0.98651,-0.98651 -2.95954,-0.98652 -0.98652,0 -1.97303,0 -0.98651,-0.98651 -0.98651,-1.97303 -1.97303,0 -0.98652,0.98651 -1.97303,2.95955 z" stroke="#888888" stroke-width="0.5" id="RU-TYU"></path>\n    <path d="m 114.40611,270.46145 -1.57842,0 -0.29596,0.98651 -1.08516,0.98652 -0.78921,0 -0.49326,-0.98652 -2.36765,-0.98651 -2.26898,-0.98652 -0.29595,0 -0.39461,0.98652 -1.97304,0 -1.67707,0.98651 -0.49326,0.98652 -0.69056,0.98651 0.69056,4.93257 2.17033,3.94606 1.08517,0.98651 0.98652,0.98652 -0.1973,1.97302 0.0987,2.95955 1.67708,1.97303 1.28246,0.98651 1.87439,0 0.39461,-0.98651 0.78921,-0.98652 0.78921,0 0.78921,0 1.28247,-0.98651 1.57842,0 4.83392,-7.89212 -0.0986,-1.97302 1.47977,-1.97303 0.98652,0 -0.98652,-0.98652 0,-0.98651 0,-1.97303 0,-0.98651 -1.47977,0 -2.07168,-2.95955 0,0 -1.18382,0 -1.38112,0.98652 -0.98651,0 z" stroke="#888888" stroke-width="0.5" id="RU-TUL"></path>\n    <path d="m 304.01415,296.11082 -2.95954,-1.97303 -2.95955,-1.97303 0,-1.97303 0,-0.98651 -0.98651,-0.98652 0,-0.98651 -1.97303,0.98651 0,0.98652 -2.95954,3.94605 -1.97303,3.94606 0,0.98652 0,0.98651 -4.93257,4.93257 -4.93257,4.93257 -1.97303,0.98652 -1.97303,0.98651 -2.95954,2.95954 1.97303,4.93258 -1.97303,2.95954 0,2.95954 0,0.98652 0,0 -2.95955,2.95954 -4.93257,0.98651 -0.98651,2.95954 0,1.97303 -2.95954,0 -1.97303,-1.97303 -1.97303,1.97303 -1.97303,2.95955 -4.93257,0 -1.97303,0.98651 0,0 0,0.98651 -0.98651,2.95955 -1.97303,1.97303 0,0.98651 0,1.97303 0.98651,0 0.98652,0.98651 3.94605,1.97303 2.95955,1.97303 0.98651,0 0,0 0.98652,-0.98651 0.98651,0 0.98651,0 0,0.98651 4.93257,3.94606 4.93258,2.95954 0.98651,-0.98651 0.98651,0 0,0 1.97303,0.98651 0.98652,0.98651 0,0.98652 0.98651,1.97303 2.95954,-1.97303 2.95955,-0.98652 1.97303,0.98652 1.97302,1.97303 0.98652,0 0,0 0.98651,0 0.98652,0.98651 1.97303,1.97303 2.95954,-1.97303 4.93257,0 -0.98651,1.97303 0.98651,0 0.98651,0 0.98652,-0.98651 -0.98652,0 0,-0.98652 0.98652,-4.93257 1.97303,-3.94606 1.97303,-0.98651 2.95954,0 0,0.98651 0,0 1.97303,0 1.97302,0 1.97303,-0.98651 0,-1.97303 0,-1.97303 0.98652,-1.97303 0,-0.98651 0,-1.97303 -0.98652,-0.98651 0,-4.93258 0,-3.94605 -2.95954,-1.97303 -2.95954,-2.95954 0.98651,-2.95955 0.98652,-3.94605 0,-1.97303 -0.98652,-0.98652 0,0 0,-2.95954 0,-1.97303 0.98652,-3.94605 1.97302,-3.94606 -1.97302,-2.95954 -0.98652,-1.97303 -2.95954,-6.9056 z" stroke="#888888" stroke-width="0.5" id="RU-SVE"></path>\n    <path d="m 136.30673,279.34008 -1.97303,-0.98652 0,0.98652 -0.98652,0 -0.98651,0 -0.98652,0 -2.95954,0 -1.97303,0.98651 -0.98651,0 -0.98652,-0.98651 -0.98651,0.98651 -1.97303,0.98651 -1.38112,0 -4.83392,7.89212 0.69056,1.97303 0,1.97302 2.17033,0 2.26899,0.98652 -0.29596,1.97303 0.39461,1.97303 1.97303,0.98651 2.95954,0 0.98651,1.97303 0.98652,0.98651 1.97303,0 0.98651,-0.98651 5.91909,2.95954 0.98651,0 0.98651,0 0.98652,-0.98651 0,0 0,-0.98652 0.98651,0.98652 1.97303,0 0,0 -0.98651,-1.97303 -1.97303,0 1.97303,-0.98652 1.97303,0 0.98651,-0.98651 1.97303,-0.98651 0,-1.97303 0,0 0.98651,-1.97303 0,-1.97303 -1.97303,-0.98651 -0.98651,0 0,0 0.98651,-0.98652 0,-0.98651 0,-0.98652 -3.94605,-4.93257 -2.95955,-3.94605 -1.97302,0 z" stroke="#888888" stroke-width="0.5"  id="RU-RYA"></path>\n    <path d="m 100.00298,273.42099 -3.946056,-0.98651 -3.946057,-0.98652 -0.394606,0.98652 -0.69056,0 -2.170331,0.98651 -1.578423,0 -0.394606,0.98651 -0.295954,1.97303 -2.367634,0.98652 -1.085166,1.97303 1.282468,0.98651 1.677075,0.98651 0,0.98652 0,1.97303 2.564937,0.98651 1.874377,0.98651 0.09865,1.97303 0.197303,2.95955 0.986514,0.98651 0.986515,0.98651 -0.295955,0.98652 0,1.97303 0.789212,0 0.69056,0 0.295954,0.98651 0.69056,0 3.255497,-0.98651 1.183818,0.98651 0.295954,-1.97303 -0.09865,-0.98651 0.493254,-0.98652 0.59191,-1.97302 4.14337,-1.97303 -0.0987,-2.95955 0.1973,-1.97302 -0.98652,-0.98652 -1.08517,-0.98651 -2.17033,-4.93257 -0.69056,-3.94606 z" stroke="#888888" stroke-width="0.5" id="RU-ORL"></path>\n    <path d="m 372.08363,371.0859 m 0,-0.98651 -7.89211,2.95954 -6.9056,-1.97303 -1.97303,0 -0.98651,0.98652 -2.95955,-1.97303 -1.97302,-0.98652 -1.97303,-0.98651 -1.97303,0 0,-1.97303 0.98651,-0.98651 -0.98651,-1.97303 -0.98652,-0.98652 -2.95954,1.97303 -2.95954,1.97303 0,3.94606 0,1.97303 -1.97303,0.98651 -0.98651,0.98651 0.98651,0.98652 1.97303,0 0.98651,0 0,0.98651 0.98652,7.89212 -2.95955,0 -1.97302,-0.98652 0,0.98652 0,0.98651 0,0.98651 -0.98652,0 -0.98651,0.98652 0,0.98651 0,0.98652 -0.98652,0 0,0 -0.98651,0.98651 0,0.98652 -1.97303,0.98651 -0.98651,0.98651 0.98651,0.98652 -0.98651,0.98651 0,0 -0.98652,0 0,0.98652 0.98652,0.98651 -1.97303,0.98652 -0.98652,0 0,1.97302 1.97303,2.95955 -0.98651,4.93257 0,1.97303 0.98651,0 -2.95954,3.94605 0.98651,1.97303 0.98652,0.98652 0.98651,0.98651 0.98652,0 0.98651,-0.98651 0.98651,0 0,0.98651 0.98652,0 0,-0.98651 0.98651,-0.98652 0,2.95955 0,3.94605 1.97303,-0.98651 0,-0.98652 1.97303,0.98652 1.97303,1.97303 0.98651,0.98651 1.97303,0 0,0.98651 -0.98651,0.98652 -1.97303,-0.98652 -1.97303,2.95955 0.98651,1.97303 1.97303,-0.98652 4.93257,2.95954 0.98652,0 3.94606,-1.97302 2.95954,0 1.97303,-1.97303 1.97302,0 0.98652,-2.95955 0.98651,-1.97302 0.98652,-0.98652 0,-0.98651 -0.98652,-2.95954 -0.98651,-1.97303 0.98651,-4.93257 1.97303,-1.97303 -0.98651,-0.98652 0,-1.97303 0.98651,0 0.98652,0 0,0 1.97302,-1.97302 1.97303,-0.98652 2.95955,0 0.98651,0 0,-1.97303 -0.98651,-1.97303 0.98651,-1.97302 1.97303,-0.98652 0,-0.98651 0,-0.98652 0.98651,-1.97303 0.98652,-0.98651 0,-1.97303 -0.98652,-0.98651 -0.98651,-1.97303 0.98651,-0.98652 0,-0.98651 0,-0.98651 -0.98651,-1.97303 0,-0.98652 0,-0.98651 0,-1.97303 -0.98652,-0.98651 0,-0.98652 0.98652,0 0,-0.98651 0,-1.97303 0.98651,0 0,-1.97303 z" stroke="#888888" stroke-width="0.5" id="RU-OMS"></path>\n    <path d="m 127.4281,199.43242 0,-0.98651 -2.95955,0 -1.97302,0.98651 -0.98652,-1.97303 -1.38112,-0.98651 -1.87437,0.98651 -1.57843,0 -4.93257,1.97303 0.69056,3.94606 0.98652,2.95954 -0.88787,0.98651 -1.18381,0 -0.0987,0.98652 -0.1973,0.98651 -2.95955,0.98652 -0.49326,1.97303 -1.77572,1.97302 0.1973,1.97303 1.28247,1.97303 1.38112,0.98652 5.52449,1.97302 5.42583,0.98652 1.87437,0.98651 0.98652,0.98652 0,0 2.95954,-0.98652 2.95954,-0.98651 0.98652,-0.98652 0.98651,-0.98651 2.95954,1.97303 1.97303,2.95954 0,0 0.98652,0 0.98651,0.98652 1.97303,0.98651 0.98651,-0.98651 0.98652,0 1.97303,0.98651 0.98651,1.97303 0.98651,0 1.97303,0.98651 0,-2.95954 0,-2.95954 -0.98651,-0.98652 -0.98652,0 0,-0.98651 -0.98651,0 0,-1.97303 0.98651,-2.95954 -1.97302,-2.95955 -0.98652,-1.97302 0,-2.95955 -1.97303,-1.97303 0,-0.98651 -0.98651,-0.98651 -1.97303,0 -1.97303,0 0,-1.97303 0,-1.97303 -0.98651,-0.98652 -0.98652,-0.98651 0,0 0,-0.98651 -1.97303,0.98651 -1.97302,0.98651 -1.97303,-0.98651 z" stroke="#888888" stroke-width="0.5" id="RU-NGR"></path>\n    <path d="m 115.29397,289.20522 -1.57842,0 -1.28247,0.98651 -0.78921,0 -0.78921,0 -0.78921,0.98652 -0.39461,0.98651 -1.87439,0 -1.28246,-0.98651 -1.67708,-1.97303 -2.17034,0.98651 -1.97303,0.98652 -0.59191,1.97302 -0.493254,0.98652 0.09865,1.97303 -0.295954,0.98651 -1.183818,-0.98651 -3.255497,0.98651 0.591909,1.97303 1.874377,1.97303 2.762237,0.98651 2.36764,0.98652 0,0.98651 -0.0987,0 0.88786,0.98652 1.18383,0 0.88786,1.97302 -0.29595,0.98652 2.46628,1.97303 2.6636,2.95954 1.87438,-0.98651 1.57842,-0.98652 -0.98651,-5.91908 3.4528,-3.94606 4.34066,-2.95954 -0.39461,-1.97303 0.29596,-1.97303 -2.26899,-0.98652 -2.17033,0 0,-1.97302 -0.69056,-1.97303 z" stroke="#888888" stroke-width="0.5" id="RU-LIP"></path>\n    <path d="m 86.09313,282.29962 0,-0.98652 -1.677075,-0.98651 -1.282468,-0.98651 -2.466286,0 -0.394605,0 -0.591909,0 -0.493257,0 -0.69056,0.98651 -1.775726,-1.97303 -1.874377,1.97303 -0.986514,0.98651 -1.775726,-0.98651 -0.295954,0.98651 -0.197303,0.98652 -2.466285,1.97303 1.677074,2.95954 2.268983,2.95954 -0.295955,0.98652 -0.493257,0.98651 0.493257,0 0.295955,0.98651 -0.493258,0 -0.493257,0.98652 1.874377,1.97303 2.268983,0 0.591909,0 0.69056,0 0.887863,1.97303 1.085165,0.98651 4.636617,1.97303 5.919086,2.95954 0.887863,0.98652 0.887862,1.97302 1.38112,-1.97302 1.085166,-1.97303 1.282469,0.98651 1.183817,0 0.295954,0 0,-0.98651 0.591909,-0.98652 -0.197303,-0.98651 0,0 -1.874377,-1.97303 -0.591909,-1.97303 -0.69056,0 -0.295954,-0.98651 -0.69056,0 -0.789212,0 0,-0.98652 0.295955,-0.98651 -0.986515,-1.97303 -0.986514,-0.98651 -0.197303,-2.95955 -0.09865,-1.97303 -1.874377,-0.98651 -2.564937,-0.98651 0,-1.97303 z" stroke="#888888" stroke-width="0.5"  id="RU-KRS"></path>\n    <path d="m 296.12204,366.15333 m 0.98651,-1.97303 -4.93257,0.98652 -2.95954,0.98651 -1.97303,-1.97303 -0.98652,-0.98651 -0.98651,0 0,0 -0.98652,0 -1.97302,-1.97303 -1.97303,-0.98652 -2.95955,0.98652 -2.95954,1.97303 0,4.93257 -0.98651,3.94606 -0.98652,0 -0.98651,0 -0.98652,0.98651 -0.98651,0 0,0.98651 -0.98651,1.97303 -0.98652,0.98652 -1.97303,1.97302 3.94606,2.95955 2.95954,1.97303 0,1.97302 -1.97303,0.98652 0.98652,0.98651 0,0.98652 0,0.98651 0,0.98652 4.93257,0.98651 4.93257,0.98651 1.97303,0.98652 0.98651,0.98651 0.98652,-0.98651 0.98651,-0.98652 1.97303,0 2.95954,0.98652 0.98652,0.98651 7.89211,0.98652 7.89212,0.98651 0.98651,-0.98651 0.98651,-0.98652 0.98652,0 1.97303,0.98652 0.98651,-0.98652 0.98652,0 -1.97303,-3.94605 -0.98652,-2.95955 -0.98651,0 0,0 -1.97303,-0.98651 -0.98651,-0.98652 -0.98652,-2.95954 -1.97303,-2.95954 -0.98651,-0.98652 -0.98651,0.98652 -0.98652,-0.98652 0,-0.98651 -1.97303,0 -0.98651,0 0,-1.97303 0,-1.97303 -1.97303,-0.98651 -1.97303,-0.98651 0,-3.94606 0.98652,-1.97303 z" stroke="#888888" stroke-width="0.5" id="RU-KGN"></path>\n    <path d="m 32.525406,170.82351 m -1.677075,0 m -0.69056,0 0,0 2.367635,0 0,0 z m 4.439315,-0.98652 1.183817,-0.98651 -1.183817,0.98651 -1.085166,0.98652 0.09865,0 0.986515,-0.98652 z m 9.766491,2.95955 0,0 -5.623132,-0.98652 -1.381119,-1.97303 -1.578423,-0.98651 -1.183817,0.98651 -0.986515,0.98652 0.394606,0 1.085166,2.95954 -2.268983,-0.98651 -2.959543,-0.98652 4.14336,7.89212 4.735268,6.9056 2.76224,3.94605 0.493258,0 0.394605,0 1.085166,-0.98651 3.4528,-0.98652 -0.887863,-6.9056 -0.295954,-2.95954 -0.09865,-2.95954 -0.493257,-0.98652 -0.591908,0 -0.69056,0 -1.085166,0.98652 -1.085166,0.98651 -1.775725,-1.97303 -0.69056,-1.97302 0.493257,0 0.69056,0 3.058194,0 0.887863,0 z" stroke="#888888" stroke-width="0.5" id="RU-KGD"></path>\n    <path d="m 172.80775,269.47493 -1.97303,-0.98651 -1.97302,-0.98652 -0.98652,-1.97302 -0.98651,-1.97303 -0.98652,0.98651 -1.97302,0.98652 -6.9056,-3.94606 -4.93258,-1.97303 -4.93257,1.97303 0,0 0.98652,2.95954 -0.98652,3.94606 1.97303,0 1.97303,0 0.98651,1.97303 0.98652,1.97303 2.95954,2.95954 0.98652,0 0,0 0,1.97303 0,0.98651 1.97302,0.98652 1.97303,0.98651 0.98652,0 0.98651,0.98651 0.98652,-0.98651 1.97302,-1.97303 1.97303,0.98652 1.97303,0.98651 1.97303,-0.98651 0.98651,-1.97303 1.97303,-0.98652 0.98652,0 0,-0.98651 -1.97303,-2.95954 -2.95955,0 0.98652,-0.98652 0.98651,-1.97303 z" stroke="#888888" stroke-width="0.5" id="RU-IVA"></path>\n    <path d="m 83.922798,256.65025 -0.986514,0.98651 -1.085166,0 -0.69056,0 -0.295954,0 -0.986514,0 -0.986514,0 -1.874377,-0.98651 -2.07168,0 -1.677075,-2.95955 -2.959542,-0.98651 -0.887863,0.98651 -0.295954,1.97303 -0.591909,0.98652 -0.69056,0 -1.479771,1.97303 -1.578423,1.97302 -0.887863,1.97303 -0.69056,0 0.789211,0.98652 -0.197302,0.98651 0.591908,0 2.466286,0.98652 1.874377,-0.98652 0.887863,0.98652 0.591908,1.97302 1.874377,0.98652 1.578423,0.98651 2.367634,2.95955 0.295955,2.95954 -1.282469,1.97303 -0.197303,2.95954 1.874377,-1.97303 1.775726,1.97303 0.69056,-0.98651 0.493257,-0.98652 0.591909,0.98652 0.394605,0 2.466286,-0.98652 1.085166,-0.98651 2.367634,-0.98652 0.295954,-1.97303 0.394606,-1.97302 1.578423,0.98651 2.170331,-0.98651 0.69056,0 0.394606,-0.98652 -2.268983,-3.94606 0.986514,-1.97302 1.578423,-0.98652 -0.986514,-4.93257 -0.591909,-3.94606 -3.4528,0.98652 -3.4528,0 z" stroke="#888888" stroke-width="0.5" id="RU-BRY"></path>\n    <path d="m 113.8142,372.07242 -1.28247,0 -1.08516,-0.98652 -0.19731,0.98652 -0.1973,0 -0.78921,-0.98652 -1.28248,0 -1.67707,0.98652 0.98651,1.97302 0.59191,2.95955 1.18383,0.98651 0.78921,0.98651 -1.28248,0.98652 -0.88786,1.97303 0.29595,2.95954 0.98653,1.97303 2.56493,0 2.07168,1.97303 -1.67707,0 -2.17033,0.98651 -0.49326,4.93257 -0.39461,3.94606 -3.55146,0.98651 -3.65011,0 0.1973,0.98652 0.98652,0.98651 -0.39461,0.98652 -0.29595,0.98651 0.98652,0.98652 0.69056,0.98651 -3.35416,0.98651 -0.88786,2.95955 0.39461,0.98651 0.3946,0 0.78921,0 0.78921,0 0.69056,0.98652 0.69057,0.98651 0,0.98651 0.29596,0 0,0 0.29595,0 0.39461,0 -0.1973,0.98652 0.1973,0 0.69056,0 0.59191,-0.98652 2.86089,1.97303 0.0987,0.98652 0.0987,0 1.08517,-0.98652 0.29595,0 0.1973,0 -0.1973,0.98652 0.69056,-0.98652 0.98652,-0.98651 0.5919,0.98651 -0.0986,0.98652 -0.78921,0.98651 -0.3946,0.98652 1.18381,-0.98652 1.18382,-0.98651 2.76224,-1.97303 2.86089,-0.98652 0.49326,0.98652 -1.77573,-7.89212 0.59191,0 1.18382,1.97303 1.97303,0 0.98651,-6.9056 0,-7.89211 -1.97303,-1.97303 -1.57842,-1.97303 -0.98651,0.98652 -0.98652,-0.98652 0.88786,-2.95954 1.67708,-1.97303 -0.39461,-2.95954 -0.98651,-2.95955 2.36763,-1.97302 -0.98651,-1.97303 -0.59191,-1.97303 -2.95954,-0.98651 -3.15685,0 z" stroke="#888888" stroke-width="0.5" id="RU-AST"></path>\n    <path d="m 817.98808,309.92202 -1.97303,-1.97303 -0.98652,-0.98652 -0.98651,0.98652 -0.98651,0.98651 -0.98652,-0.98651 -1.97303,0 -0.98651,1.97303 -1.97303,2.95954 -0.98651,-0.98651 -0.98652,-0.98652 -0.98651,0.98652 -1.97303,0 -4.93257,-1.97303 -3.94606,0 -0.98651,5.91908 0,5.91909 -0.98652,0.98651 -1.97303,0.98652 0,0.98651 0,0.98652 -0.98651,0.98651 -0.98652,0.98651 0,0.98652 0,0.98651 -0.98651,3.94606 1.97303,2.95954 0.98651,4.93257 0.98652,3.94606 1.97303,1.97303 0.98651,2.95954 -0.98651,0.98652 -1.97303,-1.97303 -0.98652,0.98651 -0.98651,0.98652 -0.98652,3.94605 -3.94605,2.95955 0,0 -1.97303,0.98651 -0.98652,0 -1.97302,-0.98651 0,0 -0.98652,0.98651 0,1.97303 0,0.98651 -0.98651,0.98652 -4.93257,1.97303 -4.93257,1.97302 -0.98652,0 -0.98651,0 -1.97303,1.97303 -0.98652,1.97303 -0.98651,5.91909 -0.98651,2.95954 0.98651,3.94606 -1.97303,0 -0.98651,0 1.97303,2.95954 2.95954,1.97303 -0.98652,0.98651 -0.98651,0.98652 0,0.98651 0,1.97303 -1.97303,0.98651 -0.98651,1.97303 0.98651,0 0.98652,0 0.98651,0.98652 1.97303,0.98651 0.98651,1.97303 0,1.97303 -0.98651,0.98651 -1.97303,0 0,4.93257 -0.98651,4.93257 3.94605,0.98652 2.95955,-1.97303 0.98651,0.98651 0.98651,0 1.97303,-0.98651 0.98652,-0.98651 1.97302,0.98651 0.98652,0.98651 0.98651,0 0.98652,0 -0.98652,2.95955 -1.97303,1.97303 0,0.98651 0,0.98651 -1.97302,1.97303 -1.97303,1.97303 -0.98652,0.98651 -0.98651,0.98652 0,2.95954 0,2.95954 -2.95954,1.97303 0,3.94606 2.95954,0.98651 3.94606,0 1.97302,1.97303 1.97303,2.95955 0.98652,0 0.98651,0 0.98652,0 0.98651,0 0,0 0.98651,-0.98652 1.97303,-0.98651 3.94606,-1.97303 1.97303,-1.97303 0.98651,-1.97303 1.97303,0 2.95954,-0.98651 0.98652,-0.98652 0.98651,0 0,-0.98651 2.95955,0.98651 0.98651,3.94606 0,3.94606 0.98651,1.97303 0,1.97302 -0.98651,0.98652 -3.94606,0 -4.93257,0.98651 0,0 0.98652,1.97303 0,3.94606 -1.97303,0.98651 -1.97303,0.98652 -0.98652,0.98651 -0.98651,1.97303 0,0.98651 0,0.98652 -2.95954,1.97303 -2.95955,1.97303 0.98652,1.97302 0,0.98652 -0.98652,1.97303 -0.98651,2.95954 0,2.95954 0,2.95954 0.98651,-0.98651 0,0 0.98652,0.98651 0,0.98652 0.98651,0 0.98652,-0.98652 0.98651,0.98652 0,0.98651 0.98652,0 1.97302,0.98652 0,3.94605 0,2.95955 0.98652,2.95954 0,2.95954 3.94606,-1.97303 0,0 0.98651,0 0,0 0.98651,-0.98651 0.98652,-1.97303 1.97303,0 1.97303,0.98652 1.97302,-0.98652 1.97303,0 0,0 0.98652,0.98652 1.97303,2.95954 1.97302,0 1.97303,0.98651 1.97303,0 0.98652,0 0.98651,-1.97303 1.97303,0 1.97303,0 0.98651,0 1.97303,-0.98651 0.98651,1.97303 0,0 0.98652,1.97303 -2.95955,1.97303 -0.98651,1.97302 0.98651,1.97303 0.98652,0.98652 1.97303,1.97303 -1.97303,2.95954 -0.98652,0.98651 0,4.93257 0.98652,4.93257 1.97303,-1.97302 0,-1.97303 0.98651,-2.95954 1.97303,-2.95955 0.98651,0 0.98652,0.98652 0.98651,-0.98652 0.98652,0.98652 0,0.98651 0,0.98652 0.98651,-0.98652 0.98652,-0.98651 0.98651,0.98651 0.98651,0.98652 4.93258,-1.97303 3.94605,-2.95955 0,-1.97302 0,-1.97303 3.94606,-1.97303 1.97303,-5.91909 -1.97303,0 -1.97303,0 -0.98651,-0.98651 0,-0.98652 -0.98652,-0.98651 -0.98651,-0.98651 0,-0.98652 0.98651,0 0,0 0.98652,0 1.97303,-2.95954 3.94605,-1.97303 0,0 0,0.98651 1.97303,1.97303 1.97303,1.97303 -0.98651,1.97303 0,1.97303 1.97302,0.98651 2.95955,0 1.97303,-8.87863 1.97302,-6.9056 0,-0.98651 -0.98651,-1.97303 0,-0.98651 0,-1.97303 0,-0.98652 -0.98651,-0.98651 0,-2.95954 -0.98652,-2.95954 -0.98651,-1.97303 -0.98652,-1.97303 0,-1.97303 0,-0.98651 0,0 0,0 -4.93257,-13.8112 0,-0.98652 0,-0.98651 0.98652,-4.93257 -0.98652,-3.94606 0.98652,-1.97303 -0.98652,-0.98651 -0.98651,0.98651 -1.97303,-2.95954 0,-2.95955 -0.98652,0 -0.98651,-0.98651 -3.94606,-1.97303 0,0 0.98652,0 1.97303,0 0.98651,-1.97303 -0.98651,-1.97302 -1.97303,0 -1.97303,-0.98652 0,0 -0.98652,-0.98651 -2.95954,0 -2.95954,-1.97303 0,-0.98652 -1.97303,-0.98651 0,0 -0.98651,0 -0.98652,-0.98651 -1.97303,0 -0.98651,0.98651 -0.98652,0.98651 -2.95954,0.98652 -1.97303,0 0,0 0.98652,0 0.98651,1.97303 0,3.94605 0,3.94606 -0.98651,-1.97303 0,-2.95954 0,-0.98651 0,0 -1.97303,3.94605 -4.93257,4.93257 0,-2.95954 1.97303,-3.94606 -0.98652,0 -0.98651,0.98652 -0.98652,0 -1.97302,-0.98652 0.98651,-0.98651 0.98651,-0.98651 0,-0.98652 -2.95954,2.95954 0.98652,0.98652 0,1.97303 0,0.98651 -0.98652,0 -0.98651,0 0,0.98651 0,0 -1.97303,-4.93257 -2.95954,-4.93257 -6.9056,2.95955 -4.93258,-1.97303 1.97303,-2.95955 0.98652,-1.97302 1.97303,-2.95955 0.98651,-2.95954 0.98651,-1.97303 0.98652,-0.98651 2.95954,-4.93257 0.98652,-5.91909 0.98651,-0.98651 0.98651,-0.98652 0,-0.98651 -0.98651,-0.98652 0.98651,-1.97303 0,-2.95954 0.98652,-0.98651 1.97303,-4.93257 1.97303,-3.94606 0.98651,-1.97303 0,-1.97303 0.98651,-0.98651 0.98652,-1.97303 0,-1.97303 0,-2.95954 0.98651,-3.94606 1.97303,-1.97303 0.98651,-7.89211 4.93258,-6.9056 0.98651,0 0.98651,-0.98652 0.98652,-0.98651 0.98651,-0.98651 4.93257,-1.97303 4.93258,-2.95955 0.98651,0 0.98651,-0.98651 0.98652,0 0,1.97303 1.97303,0.98651 0.98651,-1.97303 -0.98651,-2.95954 1.97303,0 1.97302,0 0,-1.97303 0,-0.98651 -2.95954,-2.95954 -3.94606,-1.97303 -3.94605,0 -2.95955,-0.98652 0,-3.94605 2.95955,-0.98652 -0.98652,-1.97303 0,-0.98651 0,-0.98651 0.98652,-0.98652 -2.95955,-4.93257 -5.91908,-3.94606 -3.94606,0.98652 -4.93257,0.98651 0,2.95954 -0.98651,2.95955 z" stroke="#888888" stroke-width="0.5" id="RU-KHA" style=""></path>\n    <path d="m 73.959004,415.47904 -0.394605,-0.98651 -1.479772,0.98651 -2.170331,0.98652 -0.887863,0 0.789212,0.98651 2.170331,0.98652 -2.07168,4.93257 -0.09865,0 0,0 0,0 -0.09865,0 -0.394606,0.98651 0,0 -3.156845,0.98651 -2.76224,-0.98651 -0.394606,-0.98651 -0.591908,0 -1.282469,0 -0.493257,0 0.295954,0.98651 -0.197303,0.98651 1.38112,0 1.578423,1.97303 0.493257,1.97303 0.197303,0.98652 1.085166,0.98651 1.085165,1.97303 2.07168,-0.98652 2.170332,0 1.085165,0.98652 0.394606,-0.98652 0.493257,0 1.479772,0 1.578422,0 0.986515,-1.97302 1.677074,-2.95955 2.466286,-0.98651 2.170331,-0.98652 0.295954,-1.97302 -0.493257,-1.97303 -1.677074,0 -1.677074,0 0.09865,-0.98652 0.295954,-0.98651 -1.282468,0 -1.38112,-0.98651 -0.09865,-0.98652 -0.197302,-0.98651 -0.493258,0 -0.986514,0 -0.789211,0 -0.789212,-0.98652 z" stroke="#888888" stroke-width="0.5" id="RU-CE"></path>\n    <path d="m 239.89072,306.96247 -1.97303,-0.98651 -0.98651,-0.98651 0,-0.98652 -0.98651,-0.98651 -0.98652,0 -0.98651,0 -1.97303,-0.98652 -1.97303,-1.97303 -3.94606,2.95955 -1.97303,4.93257 -1.97302,0.98651 -1.97303,0 -0.98652,0 -1.97303,-0.98651 -1.97302,2.95954 -0.98652,3.94606 -0.98651,0.98651 -1.97303,0 -0.98651,3.94606 -0.98652,2.95954 0.98652,0.98652 -0.98652,0 -1.97303,0.98651 0.98652,0.98652 0.98651,0 1.97303,1.97302 1.97303,0 0.98651,0 0,0.98652 0.98652,0 0,0 0.98651,0.98651 1.97303,-0.98651 0,-0.98652 -0.98652,-0.98651 1.97303,-0.98651 1.97303,0.98651 -0.98651,0 0,1.97303 0,1.97303 0.98651,-0.98652 1.97303,0.98652 -2.95954,1.97302 -2.95955,0 0.98652,1.97303 0.98651,0 1.97303,1.97303 0.98652,1.97303 1.97302,0.98651 1.97303,-0.98651 2.95955,-0.98651 2.95954,-0.98652 -0.98652,-1.97303 -0.98651,-2.95954 -0.98651,0 -0.98652,0.98651 0,-4.93257 0.98652,-0.98651 0.98651,0 0.98651,-0.98651 0,-0.98652 0.98652,0.98652 0.98651,-0.98652 3.94606,-8.87863 2.95954,-8.87863 z" stroke="#888888" stroke-width="0.5" id="RU-UD"></path>\n    <path d="m 65.869587,414.49253 -1.479771,0.98651 -1.183817,0 -0.789211,-0.98651 -0.986515,0 -1.085165,0.98651 -0.591909,-0.98651 -0.789211,-0.98652 -2.170332,0.98652 -2.268982,0.98651 -0.887863,-0.98651 -0.887863,0 1.479771,4.93257 0.09865,1.97303 2.860891,0.98651 3.4528,0.98652 0.493257,0 1.282469,0 2.07168,0 0.789211,-2.95955 -0.986514,-0.98651 1.085165,-1.97303 1.578423,-1.97303 0.493257,0 0.295955,0 2.170331,0.98652 -0.394606,-2.95955 -2.466285,-1.97302 -1.183818,1.97302 z" stroke="#888888" stroke-width="0.5" id="RU-SE"></path>\n    <path d="m 166.88867,306.96247 -2.95954,0.98652 -1.97303,0.98651 -0.98652,0 0,-0.98651 -1.97303,0.98651 -1.97302,0.98652 -1.97303,-3.94606 -1.97303,-6.9056 -1.97303,-0.98651 -1.97303,0 -0.98651,-0.98652 -1.97303,-1.97303 0,0.98652 0,1.97303 -1.97303,0.98651 -0.98651,0.98651 -1.97303,0 -1.97303,0 1.97303,0.98652 0.98651,1.97303 0,0 -1.97303,-0.98652 -0.98651,0 0,0 0,0.98652 -1.97303,0.98651 1.97303,2.95954 1.97303,1.97303 0.98651,-0.98651 0.98652,-0.98652 1.97302,3.94606 2.95955,5.91909 1.97303,0 1.97302,-1.97303 2.95955,2.95954 3.94605,1.97303 3.94606,0 1.97303,0.98651 3.94606,-5.91908 0.98651,-3.94606 -0.98651,0 0,-0.98651 -0.98652,0 -0.98651,-0.98652 0.98651,-0.98651 -0.98651,-0.98652 z" stroke="#888888" stroke-width="0.5" id="RU-MO"></path>\n    <path d="m 203.3897,127.41688 -3.94606,-4.93257 -2.95954,6.9056 -3.94606,4.93257 -0.98652,0 -1.97302,0 -2.95955,1.97303 -0.98651,0 0,0.98651 -0.98652,0.98652 -2.95954,0.98651 -0.98651,2.95954 0.98651,0.98652 0,0 -0.98651,0.98651 -2.95955,2.95954 -0.98651,3.94606 -2.95954,0.98652 -2.95955,0 -0.98651,6.9056 -0.98651,7.89211 -12.82469,1.97303 -13.8112,0.98651 0,1.97303 1.97303,2.95954 0,-0.98651 0.98651,0.98651 0.98652,0 2.95954,0 2.95954,0 0.98652,-0.98651 0,0 0.98651,9.86514 -2.95954,10.85166 1.97303,0 1.97303,0 1.97303,0 0.98651,0.98651 1.97303,0 -0.98652,-1.97303 0,-0.98651 0.98652,0 0,0 1.97303,1.97303 1.97303,1.97303 1.97302,0 0.98652,0.98651 0.98651,3.94606 0,0 0.98652,0.98651 0.98651,-2.95954 -0.98651,-4.93257 0.98651,-4.93257 0,0.98651 0.98651,0 0.98652,-1.97303 0.98651,-1.97302 0,2.95954 0.98652,0 0.98651,-2.95954 0.98652,-1.97303 0,0.98651 0,0.98652 0,0.98651 0,0 0.98651,-1.97303 0.98651,-0.98651 -0.98651,2.95954 -1.97303,3.94606 0.98652,0 0,0 0.98651,-1.97303 0,0.98651 1.97303,0.98652 1.97303,-3.94606 0,-0.98651 -0.98652,0 0,0.98651 0,-0.98651 0,-0.98652 -0.98651,0.98652 0,0 0.98651,-2.95955 0.98652,-2.95954 0.98651,8.87863 -4.93257,6.9056 -0.98651,2.95954 -0.98652,3.94606 0.98652,0 0.98651,0 1.97303,1.97303 2.95954,2.95954 0.98652,-0.98652 0.98651,-0.98651 0.98651,0 0,0.98651 1.97303,-2.95954 0.98652,-2.95954 0,0 0,-0.98652 1.97303,-1.97302 1.97302,-1.97303 -1.97302,-2.95955 -0.98652,-3.94605 1.97303,-1.97303 0.98651,-1.97303 0.98652,-2.95954 0.98651,-2.95954 0.98652,0.98651 0.98651,0.98651 1.97303,-0.98651 1.97303,-1.97303 0,-1.97303 0.98651,-1.97303 0,-1.97302 0,-0.98652 -0.98651,0 -0.98652,0 0,-2.95954 0,-1.97303 0.98652,-0.98651 0,0 3.94606,-4.93258 0.98651,-1.97302 0.98651,-2.95955 0.98652,0 0.98651,0.98652 1.97303,-1.97303 0.98652,-0.98652 0,0.98652 0.98651,0 0.98651,-5.91909 -1.97302,-5.91908 0.98651,0 1.97303,0 -0.98652,-1.97303 -0.98651,-1.97303 0.98651,-0.98651 -0.98651,0 -0.98651,-0.98652 -2.95955,0.98652 -0.98651,-2.95955 0.98651,-2.95954 -3.94605,-4.93257 z" stroke="#888888" stroke-width="0.5" id="RU-KR"></path>\n    <path d="m 108.28971,374.04544 -0.98651,-1.97302 -1.57843,0 -1.38112,0 0,-1.97303 -1.47978,-0.98652 -0.69056,1.97303 -1.28247,1.97303 -3.650099,-1.97303 -4.83392,1.97303 -0.591909,0.98651 1.677075,0.98652 2.959542,0 -1.38112,2.95954 -2.762239,1.97303 -0.197303,0.98651 -0.197303,0.98652 -2.466286,0 -2.564937,0 -0.789211,1.97303 -1.085166,0.98651 -0.394606,0 -0.493257,-0.98651 -1.479771,0.98651 -1.775726,-0.98651 -3.058194,-6.9056 -4.242011,-2.95955 -2.663589,0.98652 -3.551451,0.98651 0.69056,0.98652 0.986514,0 -0.09865,0.98651 0.197303,0.98651 1.183817,-0.98651 1.282468,0 0.295954,0.98651 -0.591908,0.98652 2.76224,0 3.156845,0 0.887863,2.95954 0.789212,1.97303 1.479771,1.97303 1.183817,1.97303 -0.295954,1.97303 -0.394606,2.95954 0.591909,1.97303 1.38112,1.97303 2.268982,4.93257 0.789212,4.93257 0.69056,0.98651 1.578423,0.98652 2.959542,4.93257 2.07168,2.95954 1.085166,0 0.69056,0.98652 0.789211,-0.98652 0.591909,0 3.058195,-1.97303 3.255496,-0.98651 0.69056,-0.98652 0.98652,0 0,-0.98651 -0.69057,-0.98651 -0.69056,-0.98652 -0.78921,0 -0.78921,0 -0.3946,-0.98651 -0.39461,0 0.88786,-2.95955 3.35416,-0.98651 -0.69056,-0.98651 -0.98652,-0.98652 0.29595,-0.98651 0.39461,-0.98652 -0.98652,-0.98651 -0.1973,-0.98652 3.65011,0 3.55146,-0.98651 0.39461,-3.94606 0.49326,-4.93257 2.17033,-0.98651 1.67707,0 -2.07168,-1.97303 -2.56493,0 -0.98653,-1.97303 -0.29595,-2.95954 0.88786,-1.97303 1.28248,-0.98652 -0.78921,-0.98651 -1.18383,-0.98651 -0.59191,-2.95955 z" stroke="#888888" stroke-width="0.5" id="RU-KL"></path>\n    <path d="m 69.815645,417.45207 -0.789212,-0.98651 -1.282468,0 -0.295955,-0.98652 -0.493257,0 -1.578423,1.97303 -1.085165,1.97303 0.986514,0.98651 -0.789211,2.95955 -1.479772,0.98651 3.156846,0.98651 3.156845,-0.98651 0,0 0.394606,-0.98651 0.197303,0 2.07168,-3.94606 -2.170331,-1.97303 z" stroke="#888888" stroke-width="0.5" id="RU-IN"></path>\n    <path d="m 444.09917,473.68338 -0.98651,0 -0.98651,-0.98651 -0.98652,-0.98652 -0.98651,0.98652 -0.98652,0 -0.98651,-0.98652 -1.97303,-1.97302 -2.95954,0.98651 -0.98652,1.97303 0.98652,1.97303 -1.97303,1.97303 -0.98652,-0.98652 0,0 -1.97302,0 -0.98652,0 -0.98651,-0.98651 -0.98652,-0.98652 -0.98651,1.97303 -0.98652,1.97303 -0.98651,0 -0.98651,0 -0.98652,0.98651 -0.98651,0.98652 -2.95955,0 -3.94605,0 -1.97303,0.98651 -0.98652,0.98652 0,0 -1.97302,-0.98652 -1.97303,0.98652 1.97303,1.97303 1.97302,1.97302 0,0.98652 0,1.97303 0,0.98651 -2.95954,0 1.97303,4.93257 2.95954,3.94606 0.98652,2.95954 0.98651,2.95955 0.98652,0.98651 0.98651,0 1.97303,0.98651 0.98651,0.98652 3.94606,-0.98652 2.95954,-0.98651 0,0.98651 -0.98651,0.98652 4.93257,6.9056 1.97303,0 1.97303,0 1.97303,-0.98652 0.98651,-1.97302 4.93257,0.98651 0,0 0.98652,0 0.98651,0 0.98651,0 0.98652,-0.98651 0.98651,0 0.98652,0.98651 1.97302,-2.95954 0.98652,-1.97303 -0.98652,-1.97303 0,-0.98651 -1.97302,0 0,-0.98652 2.95954,-1.97303 1.97303,0 0,-1.97303 -1.97303,-0.98651 0,-1.97303 0,-1.97303 -0.98652,0 -0.98651,-0.98651 0,-2.95954 -0.98651,-3.94606 -0.98652,0.98651 -1.97303,0.98652 -2.95954,-0.98652 -1.97303,-2.95954 0.98652,-0.98651 0.98651,-0.98652 0,-0.98651 0,-1.97303 1.97303,-0.98652 1.97303,-1.97302 0,-1.97303 0,-0.98652 -0.98652,0 z" stroke="#888888" stroke-width="0.5" id="RU-AL"></path>\n    <path d="m 238.90421,339.51744 -0.98652,-0.98651 0,-0.98651 -2.95954,0 -2.95954,-0.98652 -2.95954,0.98652 -2.95955,0.98651 -1.97303,0 -1.97302,0 -3.94606,1.97303 -3.94606,0.98651 -0.98651,-0.98651 0,0.98651 -0.98652,0.98652 0,0 0.98652,0.98651 0,1.97303 -0.98652,1.97303 -0.98651,0.98651 -1.97303,0 0,0.98652 -0.98651,1.97303 -1.97303,3.94605 0,0 -0.98652,2.95955 0,2.95954 0,2.95954 0.98652,0.98652 0.98651,0.98651 0,0 0,0.98651 0.98652,0.98652 0.98651,0 -0.98651,2.95954 0,1.97303 0.98651,1.97303 0,0.98651 -0.98651,0 -0.98652,0 0.98652,2.95954 0.98651,2.95955 0.98652,0 1.97302,-1.97303 2.95955,0.98651 -1.97303,2.95955 -1.97303,1.97302 0.98651,0.98652 0.98652,0.98651 -1.97303,4.93257 0.98651,0 0.98652,1.97303 0.98651,0.98652 1.97303,0 1.97303,0 1.97303,0.98651 0.98651,0.98652 3.94606,0.98651 1.97303,-3.94606 1.97303,0 0.98651,-1.97303 0,-0.98651 0.98651,0 0,-0.98651 0,-0.98652 1.97303,-1.97303 0.98652,-0.98651 2.95954,-4.93257 2.95954,-4.93257 0.98652,0 0.98651,0 1.97303,-0.98652 0.98651,0 1.97303,0.98652 0,0.98651 0.98652,-1.97303 2.95954,-2.95954 1.97303,-2.95954 -4.93257,-0.98652 -5.91909,0.98652 -0.98651,-0.98652 0,-0.98651 -1.97303,0 -1.97303,0 0,-0.98652 -1.97303,-6.9056 0,-0.98651 0.98652,0 0,-0.98651 0.98651,-0.98652 2.95954,-0.98651 2.95955,1.97303 -0.98652,1.97302 0,1.97303 1.97303,-0.98651 0.98651,0.98651 0,0.98652 0,0.98651 0.98652,0 0.98651,-0.98651 0.98652,-1.97303 1.97303,0.98651 0.98651,0 0.98651,-0.98651 0.98652,0 0.98651,0 1.97303,0 -0.98651,-0.98652 -0.98652,-0.98651 1.97303,-3.94606 0,-2.95954 -0.98651,0 -2.95955,-1.97303 -3.94605,-1.97303 -0.98652,-0.98651 -0.98651,0 0,-1.97303 0,-0.98651 -1.97303,0 -1.97303,0 0,-0.98652 -0.98651,-2.95954 -0.98652,0 -0.98651,-0.98652 z" stroke="#888888" stroke-width="0.5" id="RU-BA"></path>\n    <path d="m 48.309634,373.05893 -0.493257,-2.95954 -2.663589,0.98651 -3.354148,-0.98651 -1.578423,-1.97303 -0.986514,-0.98652 -0.789212,0.98652 0.295954,0.98651 0.493258,0.98652 1.775725,1.97303 1.578423,1.97302 0.591909,0 0.887862,-1.97302 1.085166,0 0.69056,2.95954 -0.295954,2.95954 -2.268983,0 -2.268983,2.95954 0.197303,0.98652 0.295954,0.98651 -0.986514,0.98652 -1.282468,0 0.197302,-0.98652 -0.394605,-0.98651 -0.789212,0.98651 -0.986514,0 -0.394606,0.98652 1.183817,2.95954 1.973029,1.97303 1.973029,-0.98652 1.282468,-2.95954 0.887863,0 0.789211,-0.98651 1.282469,-1.97303 2.170331,-0.98652 -0.295954,1.97303 -0.394606,1.97303 0.986514,0 0.591909,0 0.493257,-0.98651 0.493257,-0.98652 0.591909,-0.98651 1.183817,-0.98652 -0.986514,-4.93257 -2.76224,-2.95954 z" stroke="#888888" stroke-width="0.5" id="RU-AD"></path>\n    <path d="m 4.7369647,336.1116 2.5917148,-3.75913 -2.0103373,-5.02106 -1.953777,-1.09559 -0.2193535,-1.31469 4.5203802,0.2271 4.7309991,0.9551 3.179042,2.66438 -0.5698,-3.87073 2.516025,2.90662 0.316811,1.32955 2.95264,2.67352 1.420589,3.65025 -1.148432,2.97188 -0.520731,5.61101 1.852233,0.50526 1.366564,-0.19511 0.409477,1.68659 1.813921,0.396 2.409184,3.18908 -2.923806,0.039 -1.062951,1.77511 -4.119921,-3.42138 -0.948011,-2.34864 -2.262906,-0.2121 -4.660777,-1.81476 -3.1557142,-0.99192 -4.1139536,0.12157 z" stroke="#888888" stroke-width="0.5" id="RU-CR"></path>\n    <path d="M 5.1460742,342.76851 2.6451191,341.03593 1.7504522,337.47254 4.7369647,336.1116 z" stroke="#888888" stroke-width="0.5" id="RU-SEV"></path>\n    <path d="m 308.94672,213.24362 -5.91908,-4.93257 -4.93258,-3.94606 -1.97302,0 -1.97303,0 0,0 -0.98652,-0.98651 -0.98651,0.98651 -1.97303,0.98652 -7.89211,-0.98652 -6.9056,0 0,0 -2.95955,3.94606 -2.95954,3.94606 -0.98651,2.95954 1.97302,0 0.98652,0.98651 -0.98652,2.95955 -0.98651,2.95954 0.98651,1.97303 0,0.98651 -0.98651,0.98652 -0.98651,0.98651 -0.98652,-0.98651 -1.97303,-1.97303 -0.98651,0 -0.98652,0.98651 -0.98651,-0.98651 0,-0.98652 -0.98651,0 -1.97303,0 -0.98652,-0.98651 -1.97302,0.98651 -0.98652,-0.98651 0,-1.97303 -6.9056,-4.93257 -6.9056,-2.95954 0,4.93257 1.97303,3.94605 0,4.93258 -1.97303,2.95954 0,1.97303 0.98652,1.97303 -2.95955,0.98651 -1.97303,0 -2.95954,3.94606 -0.98651,3.94605 0.98651,0.98652 0.98652,0 0.98651,-0.98652 0.98651,0.98652 1.97303,0.98651 0,-0.98651 0.98652,-1.97303 2.95954,-0.98652 0.98651,0.98652 0.98652,-0.98652 0.98651,0 0.98652,1.97303 0.98651,1.97303 -3.94606,3.94606 -4.93257,3.94606 -0.98651,2.95954 -0.98652,1.97303 -5.91908,1.97303 -1.97303,0 -1.97303,0.98651 -2.95954,4.93257 0,1.97303 0,0.98651 -3.94606,0.98652 -1.97303,2.95954 1.97303,1.97303 0.98652,1.97303 0,0 0,1.97303 0.98651,2.95954 -0.98651,0.98651 0,1.97303 2.95954,-1.97303 1.97303,-1.97302 0,0 0.98651,0 0.98652,0 0,-0.98652 3.94605,1.97303 2.95955,0.98651 3.94605,-0.98651 2.95955,0 0,0.98651 1.97302,-0.98651 -0.98651,-2.95954 1.97303,-4.93257 5.91908,1.97302 0.98652,0 0.98651,0 1.97303,1.97303 -0.98651,1.97303 0,0 2.95954,1.97303 1.97303,-0.98651 1.97303,2.95954 1.97302,0.98651 1.97303,0 2.95955,-0.98651 0.98651,0.98651 0,0.98652 0.98651,-0.98652 1.97303,0 0.98652,0 0.98651,0.98652 0,0 1.97303,-0.98652 2.95954,-0.98651 5.91909,5.91908 9.86514,0.98652 0,-0.98652 1.97303,-0.98651 0.98651,-1.97303 0.98652,-2.95954 1.97303,0 0.98651,-1.97303 -0.98651,-0.98651 0,-0.98652 1.97303,-3.94606 1.97302,-3.94605 3.94606,-3.94606 3.94606,-3.94606 0.98651,-5.91908 0.98652,-0.98652 1.97302,-0.98651 0,0 0.98652,-0.98652 0.98651,0 1.97303,-0.98651 1.97303,0 0,0 0,0.98651 0.98651,1.97303 1.97303,-0.98651 1.97303,-0.98652 1.97303,-0.98651 0,0 0,-0.98651 2.95954,-0.98652 1.97303,-0.98651 2.95954,0 1.97303,0.98651 0,0 2.95955,-2.95954 2.95954,-0.98652 0,-0.98651 1.97303,-1.97303 2.95954,0 3.94606,-0.98651 0.98651,0 0.98651,0 0.98652,0 0.98651,0 0.98652,-0.98652 0.98651,-1.97303 4.93257,-1.97302 3.94606,-2.95955 -0.98651,-2.95954 -1.97303,-2.95954 0.98651,-3.94606 0.98652,0 0.98651,-0.98651 -1.97303,-0.98652 -0.98651,0 -0.98652,0 -0.98651,0.98652 -1.97303,0.98651 -1.97303,0.98652 -1.97303,0.98651 -1.97303,0.98651 -0.98651,0 -0.98651,-0.98651 -0.98652,1.97303 0,0.98651 -6.9056,1.97303 -5.91908,0.98652 -0.98652,-0.98652 -0.98651,-0.98651 -29.59543,-17.75726 z" stroke="#888888" stroke-width="0.5" id="RU-KO"></path>\n    <path d="m 225.09301,255.66373 -4.93257,-0.98651 -1.97303,1.97303 -3.94606,2.95954 -1.97303,-0.98651 -1.97302,0.98651 0,1.97303 0.98651,0.98651 1.97303,0 0.98651,0 0,0 -0.98651,0.98652 -0.98652,0.98651 0.98652,1.97303 -1.97303,1.97303 -0.98651,1.97303 -0.98652,2.95954 0,2.95954 -1.97303,0.98652 0,0 -0.98651,0 -0.98652,0 -0.98651,0 -0.98651,0 0,0.98651 -1.97303,-0.98651 -0.98652,0 -2.95954,1.97303 -1.97303,0.98651 2.95954,3.94606 2.95955,3.94605 -0.98652,0.98652 0,0 -1.97303,0.98651 -1.97302,0.98652 -3.94606,-1.97303 -0.98652,0.98651 -0.98651,1.97303 -0.98651,0.98651 -0.98652,0.98652 0.98652,0.98651 0.98651,0.98652 0.98651,1.97303 2.95955,0 0.98651,0 0.98652,0.98651 0.98651,0 0.98651,0 0.98652,0.98651 1.97303,0.98652 0,0.98651 0,0 0.98651,-0.98651 1.97303,0 0,0.98651 -0.98651,1.97303 0.98651,0.98652 0,0 0.98651,0 0,1.97302 0,0.98652 0,0.98651 0.98652,0.98652 -0.98652,0.98651 -0.98651,0.98652 2.95954,0.98651 -0.98651,2.95954 0,1.97303 0.98651,0 0,0.98652 -0.98651,0 0.98651,2.95954 1.97303,0.98651 0.98652,-2.95954 0.98651,-3.94606 1.97303,0 0.98651,-0.98651 0.98652,-3.94606 1.97302,-2.95954 1.97303,0 0.98652,0.98651 1.97303,0 1.97302,-0.98651 1.97303,-5.91909 3.94606,-1.97303 1.97303,1.97303 1.97303,0.98652 0.98651,0 0.98652,0 0.98651,0.98651 0,0.98652 0.98651,0.98651 1.97303,0 0.98652,-0.98651 1.97303,-0.98652 0.98651,-2.95954 0.98651,-0.98652 -1.97302,-1.97302 0,-2.95955 4.93257,-2.95954 2.95954,-3.94606 -3.94606,-2.95954 -3.94605,-3.94606 0,-0.98651 -2.95955,0 -3.94605,0.98651 -2.95955,-0.98651 -3.94605,-1.97303 0,0.98652 -0.98652,0 -0.98651,0 0,0 -1.97303,1.97302 -2.95954,1.97303 0,-1.97303 0.98651,-0.98651 -0.98651,-2.95954 0,-1.97303 0,0 -0.98652,-1.97303 -1.97303,-1.97303 1.97303,-2.95954 3.94606,-0.98652 0,-0.98651 0,-1.97303 2.95954,-4.93257 -1.97303,-1.97303 -0.98651,-2.95954 z" stroke="#888888" stroke-width="0.5" id="RU-KIR"></path>\n    <path d="m 152.09095,314.85459 -1.97302,1.97303 -1.97303,0 -2.95955,-5.91909 -1.97302,-3.94606 -0.98652,0.98652 -0.98651,0.98651 -2.95955,-1.97303 -0.98651,-2.95954 -1.97303,0 0,0 -0.98651,0.98652 -0.98652,1.97302 -0.98651,0.98652 0.98651,0.98651 0,0 0,1.97303 -1.97303,0.98652 0.98652,2.95954 0,4.93257 -0.98652,0.98651 -1.97302,0.98652 1.97302,1.97303 2.95955,1.97303 0.98651,1.97302 0.98652,0.98652 1.97302,0 0.98652,0.98651 0.98651,0.98652 0,0.98651 2.95955,1.97303 1.97302,0 0.98652,0.98651 0,1.97303 2.95954,-0.98651 1.97303,0 1.97303,0.98651 0.98651,0.98652 2.95955,-1.97303 2.95954,-3.94606 0,-1.97303 -0.98652,-1.97303 0.98652,-3.94605 -0.98652,-3.94606 -3.94605,-1.97303 -2.95955,-2.95954 z" stroke="#888888" stroke-width="0.5" id="RU-PNZ"></path>\n    <path d="m 130.38764,301.04339 -0.98651,0.98651 -1.97303,0 -0.98652,-0.98651 -0.98651,-1.97303 -2.95954,0 -1.97303,-0.98651 -4.34066,2.95954 -3.4528,3.94606 0.98651,5.91908 -1.57842,0.98652 -1.87438,0.98651 0.78921,0.98651 0.98652,0.98652 -0.49326,1.97303 -0.29596,0.98651 1.77573,0.98652 2.07168,0.98651 1.08517,1.97303 0.98651,1.97303 0.69056,0 0.78921,0 -0.1973,0.98651 1.28247,0.98652 4.73526,-1.97303 4.93258,-1.97303 1.97302,-0.98652 0.98652,-0.98651 0,-4.93257 -0.98652,-2.95954 0.98652,-0.98652 0.98651,-1.97303 0,0 -0.98651,-0.98651 0.98651,-0.98652 0.98652,-1.97302 0.98651,-0.98652 0,0 -4.93257,-2.95954 z" stroke="#888888" stroke-width="0.5"  id="RU-TAM"></path>\n    <path d="m 234.95815,97.821452 0,0.493257 -1.97303,1.479772 -2.95954,-1.183817 -1.97303,-0.69056 -0.98651,0.789211 -1.97303,1.085166 -0.98652,-1.578423 -0.98651,-0.09865 -1.97303,-0.295954 0,0.887863 0,1.085166 -3.94606,1.973027 -2.95954,3.94606 0,0.98651 0,0.98651 -0.98651,4.93258 -0.98652,3.94605 -2.95954,0.98652 -3.94606,0 -5.91908,4.93257 3.94606,4.93257 2.95954,4.93257 0,2.95954 0.98651,2.95955 2.95955,-0.98652 0.98651,0.98652 0.98651,0 0,0 0.98652,0.98651 0,-1.97303 0,-1.97303 0.98651,-1.97302 0,-0.98652 0,-0.98651 0,-1.97303 1.97303,3.94606 0,0.98651 -0.98651,0 0,1.97303 0,2.95954 0.98651,0 0.98651,0 0.98652,4.93257 0,0 -0.98652,0 0,0.98652 0.98652,0.98651 0.98651,0 0,1.97303 0,2.95954 1.97303,2.95954 2.95954,3.94606 2.95955,4.93257 1.97303,3.94606 9.86514,2.95954 5.91908,-0.98651 4.93258,-1.97303 0.98651,-0.98651 0,-1.97303 1.97303,-1.97303 1.97303,-2.95954 0,0 -0.98652,-1.97303 0,0 -0.98651,-0.98652 0.98651,-2.95954 0.98652,-2.95954 -0.98652,0 0,0 -0.98651,0 0,-2.95955 0,-2.95954 0,0 -0.98652,-0.98651 0,0.98651 0,0 0,0 -0.98651,-6.9056 0,-6.9056 0,-2.95954 0,-0.98651 0,0 -0.98651,-1.97303 -0.98652,0 0,0 0.98652,-0.98652 -0.98652,-0.98651 0,-0.98652 -0.98651,0 -0.98652,0 -0.98651,-2.95954 -0.98652,-1.97303 -1.97302,-0.98651 -1.97303,0.98651 -0.98652,-0.98651 0,0 0,0 1.97303,-0.98652 1.97303,-1.97302 -1.97303,-0.98652 -0.98651,0 0,0 0.98651,0 0.98652,-0.98651 -0.98652,-0.98652 -1.97303,-0.98651 0,0 0.98652,0 0.98651,-0.98652 -0.98651,-0.98651 0,-0.98651 1.97303,1.97302 2.95954,0.98652 -0.98652,-2.95954 -0.98651,-3.94606 0,0.98651 -0.98651,0 0,0 0,0 -0.98652,0 -0.98651,0 0,0.98652 -0.98652,-0.98652 0,0 0,0 0,0 0,-0.98651 -0.98651,-1.973027 0,-0.986515 -0.98652,0.986515 0,0.986507 -1.97302,0 -0.98652,-2.860884 0,-0.09865 z" stroke="#888888" stroke-width="0.5" id="RU-MUR"></path>\n    <path d="m 130.38764,168.85048 -1.97303,0.98651 0.98652,0.98652 0.98651,0.98651 1.97303,0 0.98651,0.98652 0,0 -0.98651,0 -0.98652,0.98651 0,0.98651 -0.98651,0 0,-0.98651 0,4.93257 0.98651,1.97303 1.97303,0 2.95955,0.98651 1.97302,3.94606 -1.97302,2.95954 -2.95955,1.97303 -3.94605,-1.97303 -0.98652,-2.95954 0.98652,-2.95954 -1.97303,-1.97303 -0.98652,0.98651 -0.98651,-0.98651 -0.98652,-0.98651 -0.98651,-0.98652 -0.98651,0.98652 -0.98652,0 0,-1.97303 0,0 -1.18381,0 -0.69056,0.98651 -1.47978,0.98652 0.49326,0 -1.18382,1.97302 -1.77572,-0.98651 -1.67708,0.98651 -1.77572,0 0.98651,2.95955 0.78921,1.97303 0.98652,1.97302 0.88786,1.97303 -0.69056,3.94606 1.47977,2.95954 1.47977,0 1.97303,-0.98651 1.38112,0.98651 0.98652,1.97303 1.97302,-0.98651 2.95955,0 0,0.98651 1.97303,0.98651 1.97302,-0.98651 1.97303,-0.98651 0,0.98651 0,0 0.98652,0.98651 0.98651,0.98652 0,1.97303 0,1.97303 1.97303,0 1.97303,0 0.98651,0.98651 0,0.98651 1.97303,2.95955 0,1.97303 0.98652,1.97302 1.97302,2.95955 2.95955,0 1.97303,0.98651 0.98651,-0.98651 0.98651,-0.98652 1.97303,0 0.98652,-0.98651 -0.98652,0 0,-0.98652 0.98652,-0.98651 0,-0.98651 0,-0.98652 0,-0.98651 2.95954,-1.97303 2.95954,-0.98652 1.97303,-1.97302 0,-0.98652 0.98652,-0.98651 1.97302,0 0.98652,0 1.97303,-0.98652 -0.98652,-0.98651 0,0 -0.98651,-3.94606 -0.98652,-0.98651 -1.97302,0 -1.97303,-1.97303 -1.97303,-1.97303 0,0 -0.98652,0 0,0.98651 0.98652,1.97303 -1.97303,0 -0.98651,-0.98651 -1.97303,0 -1.97303,0 -1.97303,0 0,0 -0.98651,0 -0.98652,-0.98652 -1.97303,1.97303 -2.95954,0.98652 -1.97303,-2.95955 -2.95954,0 -1.97303,-0.98651 -0.98651,-0.98651 0.98651,0 0.98651,-1.97303 0.98652,-1.97303 1.97303,-4.93257 2.95954,-3.94606 0,-1.97303 0,-0.98651 -1.97303,-2.95954 0,-2.95955 -6.9056,0 -4.93257,-0.98651 z" stroke="#888888" stroke-width="0.5" id="RU-LEN"></path>\n    <path d="m 183.65941,224.09528 -0.98651,0 -1.97303,-0.98652 0,-0.98651 0,-0.98652 -0.98652,-0.98651 -0.98651,0 0,-3.94606 0.98651,-1.97303 0.98652,-2.95954 0.98651,-2.95954 -2.95954,-2.95954 -1.97303,-1.97303 -0.98651,0 -0.98652,0 0,0.98651 -2.95954,0.98652 -3.94606,0.98651 -0.98651,-0.98651 -0.98652,-1.97303 -1.97302,0 -0.98652,0.98651 0,0.98652 -1.97303,1.97302 -2.95954,0.98652 -2.95954,1.97303 0,0.98651 0,0.98652 0,0.98651 -0.98652,0.98651 0,0.98652 0.98652,0 -0.98652,0.98651 -1.97303,0 -0.98651,0.98652 -0.98651,0.98651 -1.97303,-0.98651 -2.95955,0 -0.98651,2.95954 0,1.97303 0.98651,0 0,0.98651 0.98652,0 0.98651,0.98652 0,2.95954 0,2.95954 2.95955,0 3.94605,0.98652 0,0.98651 0,0.98652 0,0.98651 0,2.95954 0.98652,-0.98651 2.95954,0.98651 0,-2.95954 0.98651,-2.95954 0.98652,0.98651 -0.98652,1.97303 0,3.94606 2.95955,1.97302 0.98651,-0.98651 0.98652,0 2.95954,2.95954 0,4.93257 3.94605,4.93258 3.94606,-0.98652 0,-0.98651 0.98652,-0.98652 2.95954,0.98652 2.95954,0.98651 0.98652,-0.98651 0.98651,-0.98652 0,0.98652 0,0.98651 0.98651,0 0.98652,0.98652 0,0.98651 0,1.97303 3.94606,0.98651 0,0.98652 0,0 0.98651,0.98651 1.97303,0.98652 0.98651,1.97302 0.98652,1.97303 6.9056,4.93257 0.98651,0 0.98652,-0.98651 1.97302,0.98651 0.98652,0 0.98651,-0.98651 0.98652,-0.98651 1.97303,0.98651 0.98651,1.97303 1.97303,-1.97303 -0.98652,-1.97303 0.98652,-0.98651 0.98651,-0.98652 0,0 -0.98651,0 -1.97303,0 -0.98651,-1.97303 0,-0.98651 1.97302,-0.98651 1.97303,0 3.94606,-1.97303 1.97303,-1.97303 -0.98652,-3.94606 -1.97303,-0.98651 0,-1.97303 0,-0.98652 -3.94605,0 -1.97303,0 -2.95954,-3.94605 -1.97303,-2.95955 -1.97303,0.98652 -2.95954,0 0,-0.98652 0,-1.97302 -1.97303,0 -0.98652,-0.98652 -0.98651,-0.98651 0,-0.98652 -0.98651,-0.98651 -0.98652,-0.98651 -0.98651,0 0,0 0,-0.98652 -1.97303,0 -2.95954,0.98652 0,-1.97303 -0.98652,-0.98652 -0.98651,-0.98651 -0.98652,-0.98652 -0.98651,-0.98651 -0.98652,0 0,-0.98651 -0.98651,-1.97303 z" stroke="#888888" stroke-width="0.5" id="RU-VLG"></path>\n    <path d="m 185.63244,251.71768 -0.98652,-0.98652 -0.98651,0 0,-0.98651 0,-0.98652 -0.98651,0.98652 -0.98652,0.98651 -2.95954,-0.98651 -2.95954,-0.98652 -0.98652,0.98652 0,0.98651 -3.94606,0.98652 -0.98651,1.97302 0,0.98652 -6.9056,2.95954 -5.91908,3.94606 6.9056,3.94606 1.97302,-0.98652 0.98652,-0.98651 0.98651,1.97303 0.98652,1.97302 1.97302,0.98652 1.97303,0.98651 -0.98651,1.97303 -0.98652,0.98652 2.95955,0 1.97303,2.95954 3.94605,1.97303 3.94606,0 1.97303,-1.97303 0.98651,-0.98652 2.95955,2.95955 0,1.97303 0.98651,0 0.98651,0 3.94606,0.98651 1.97303,-0.98651 2.95954,-1.97303 0.98652,0 1.97303,0.98651 0,-0.98651 0.98651,0 0.98651,0 0.98652,0 0.98651,0 0,0 1.97303,-0.98652 0,-2.95954 0.98652,-2.95954 0.98651,-1.97303 -0.98651,-1.97303 -1.97303,-0.98651 -0.98652,0.98651 -0.98651,0.98651 -0.98652,0 -1.97302,-0.98651 -0.98652,0.98651 -0.98651,0 -6.9056,-4.93257 -0.98652,-1.97303 -0.98651,-1.97302 -1.97303,-0.98652 -0.98651,-0.98651 0,0 0,-0.98652 -3.94606,-0.98651 0,-1.97303 0,-0.98651 z" stroke="#888888" stroke-width="0.5" id="RU-KOS"></path>\n    <path d="m 114.0115,186.60774 -0.78921,-1.97303 -0.98651,-2.95955 -2.17033,2.95955 -2.269,1.97303 -0.49325,0 -2.56494,0 -1.57843,1.97302 0.69056,0.98652 0.49326,0.98651 -1.47978,2.95954 -1.38112,-0.98651 0.39461,-0.98651 0.29595,-0.98652 -0.59191,0 -0.1973,0.98652 0,0 -0.98651,0 -0.789214,-0.98652 -1.775727,0.98652 -1.874377,0 0,0.98651 0.394606,0 -0.09865,0.98651 -0.986515,2.95955 -2.268982,1.97303 -2.466286,0.98651 0.197303,0.98651 0.09865,0.98652 -2.466285,2.95954 -3.255498,3.94606 -0.09865,0 0.09865,0.98651 0.789212,0.98652 0.986514,0.98651 -0.394606,0.98652 -0.09865,0.98651 0.887863,0 1.282468,1.97303 -1.183817,2.95954 -0.789211,0.98652 1.479771,0 0.789212,0.98651 1.677074,0 1.775726,4.93257 0,1.97303 0.493257,0.98651 2.07168,0 1.38112,1.97303 2.564938,-1.97303 2.466284,-1.97302 0.59191,-2.95955 0,-1.97303 0.88786,-0.98651 0.88786,-0.98651 -0.49325,-0.98652 -0.0987,0 1.38113,-0.98651 1.57842,-0.98652 -0.1973,-1.97303 1.77572,-1.97302 0.49326,-1.97303 2.95955,-0.98652 0.1973,-0.98651 0.0987,-0.98652 1.18381,0 0.88787,-0.98651 -0.98652,-2.95954 -0.69056,-3.94606 4.93257,-1.97303 -1.47977,-2.95954 0.69056,-3.94606 -0.88786,-1.97303 -0.98652,-1.97302 z" stroke="#888888" stroke-width="0.5" id="RU-PSK"></path>\n    <path d="m 335.58261,155.03928 0,-1.97303 -1.97303,0 0,1.97303 0.98651,0.98651 -0.98651,3.94606 2.95954,-2.95954 0,-0.98652 -0.98651,-0.98651 z m 22.68982,-21.70331 -2.95954,-0.98652 -2.95954,0 0,0.98652 0,0.98651 -0.98652,0 0,0 0,0.98651 0,0.98652 -1.97302,-0.98652 -2.95955,0 0,0.98652 0,0.98651 0.98652,0.98652 0,0 -0.98652,0 0,0.98651 0,0 0.98652,0 0,0 -0.98652,0 -0.98651,0.98652 -2.95954,1.97302 -1.97303,1.97303 0,0 -0.98652,-0.98651 0,-0.98652 -0.98651,-0.98651 -1.97303,0.98651 -1.97303,1.97303 -0.98651,2.95954 0,2.95955 0.98651,0 0.98652,0 0,0 0,0.98651 0,0 0,0 0.98651,-0.98651 0.98651,-0.98652 0,0.98652 -0.98651,1.97303 1.97303,1.97302 0.98651,-0.98651 0,0 0,0 -0.98651,0.98651 -0.98652,3.94606 0.98652,0.98652 0.98651,1.97302 -0.98651,0 -0.98652,0 0,0 -0.98651,-0.98651 0,0.98651 -0.98651,0.98652 -0.98652,0 0,0 0,1.97303 0.98652,1.97303 1.97302,0 0,0 0.98652,1.97302 0,1.97303 0.98651,0 0,0 0.98652,0 0,0 0,-0.98651 0.98651,0 0.98652,1.97303 0.98651,1.97303 0.98651,0.98651 0,-0.98651 0,0 0,-0.98652 0.98652,-0.98651 0,1.97303 1.97303,2.95954 0,0 0,-0.98652 0,-0.98651 0,0 0.98651,0.98651 1.97303,0 0,0 -0.98651,-2.95954 -0.98652,-2.95954 0,-4.93257 0.98652,-4.93257 0.98651,-3.94606 1.97303,-3.94606 0.98651,0 0,0 0.98652,-1.97303 0.98651,-1.97303 0.98651,-1.97302 0,0 0,0 0.98652,0.98651 1.97303,-0.98651 0,-0.98652 -0.98652,-0.98651 0,0 0,0 0.98652,0 1.97303,0.98651 0.98651,-0.98651 0,-0.98652 -0.98651,0 -0.98652,-0.98651 2.95954,0.98651 0,-1.97302 0,0 0,0 0.98652,0 0.98651,0 -0.98651,-2.95955 -1.97303,-1.97303 0,-0.98651 -0.98651,-0.98651 -1.97303,0 -0.98652,0 z m 22.68983,-21.70332 -1.97303,1.97303 0,0 0,0.98651 0.98652,0 0,0.98652 0.98651,0.98651 0,0 -1.97303,0 -1.97303,0.98652 0.98652,0 0.98651,0.98651 0,0 0,0.98652 0.98652,0.98651 0,0 0,0 -1.97303,-0.98651 -2.95954,-0.98652 -0.98652,0.98652 0.98652,1.97302 0,0 -0.98652,0 -0.98651,0 -1.97303,0 0.98651,0.98652 0,0.98651 -0.98651,0 -0.98652,-0.98651 0,1.97303 0.98652,1.97303 -0.98652,-0.98652 -1.97302,-1.97303 -1.97303,0.98652 0,1.97303 0,0 0,-0.98652 -1.97303,-0.98651 -1.97303,0.98651 -0.98651,0.98652 -0.98652,-0.98652 0,0 1.97303,2.95954 3.94606,0.98652 0,0.98651 -2.95955,0 -2.95954,0 -1.97303,0.98652 0,0.98651 0.98652,0 1.97303,0 1.97302,1.97303 0.98652,1.97303 0.98651,-0.98652 0,0 0,2.95955 1.97303,0.98651 0,0 0.98652,-0.98651 0,0.98651 0.98651,-0.98651 1.97303,-0.98652 -0.98652,-1.97303 0,0 0,-0.98651 0,-0.98651 0,0 0.98652,2.95954 1.97303,0 0.98651,-0.98652 -0.98651,-1.97302 -0.98652,-0.98652 0,-0.98651 0,0 1.97303,0.98651 0.98652,1.97303 0,0 0,0.98651 0.98651,-1.97302 0.98651,-1.97303 -0.98651,-0.98652 0,-0.98651 0,0 0,0 0.98651,0 0,0 0,-0.98652 0.98652,0 0,0.98652 0,1.97303 0,1.97303 0.98651,-0.98652 0,0 0.98652,-0.98651 1.97303,-0.98652 1.97302,-2.95954 -0.98651,-0.98651 0,-0.98652 0.98651,0 0,1.97303 1.97303,0.98651 0,0 0.98652,-0.98651 0.98651,-1.97303 0,-0.98651 0,0.98651 0.98652,2.95954 0.98651,-0.98651 0,-1.97303 0.98651,0 0,0.98652 0,0.98651 1.97303,-0.98651 0,-0.98652 0.98652,0.98652 0.98651,-0.98652 0,0 0,-0.98651 -0.98651,-0.98652 0,0 0.98651,0 0.98652,0 0.98651,-0.98651 -0.98651,0.98651 1.97302,-0.98651 2.95955,-0.98652 0,0 0,0 0,0.98652 0.98651,-0.98652 0.98651,0 2.95955,-0.98651 2.95954,0 1.97303,0 0.98651,0 10.85166,0 9.86514,-0.98651 2.95955,-1.97303 1.97302,-2.95955 1.97303,-1.97302 -0.98651,-2.95955 -4.93257,-1.97303 -5.91909,1.97303 0,0.98652 -0.98651,0.98651 -0.98652,0 0,-0.98651 -12.82468,0 -2.95955,-2.95955 -1.97302,-0.98651 -0.98652,1.97303 -2.95954,0.98651 0.98651,0 0,-0.98651 -1.97303,0 -1.97302,0.98651 -1.97303,-0.98651 -2.95954,0 -1.97303,0.98651 -0.98652,0 -0.98651,0 0,0.98652 0,0 -2.95954,0 0,1.97303 -0.98652,0.98651 -0.98651,-0.98651 -0.98652,-0.98652 -0.98651,0.98652 -0.98652,0.98651 -1.97302,0.98651 0,0 0,-0.98651 -0.98652,-1.97303 z m 49.32571,-72.11419 0,-2.466286 -1.97302,-0.493257 -0.98652,2.07168 0,2.959543 2.95954,-2.07168 z m -10.85165,-8.779977 -0.98652,2.466285 2.95955,0.493258 0.98651,-2.959543 -2.95954,0 z m 10.85165,0.394605 2.95955,1.677075 0.98651,-0.986515 -1.97303,-2.170331 -1.97303,1.479771 z m -3.94605,3.946057 m -0.98652,0.493258 0,0.789211 1.97303,-1.282469 -0.98651,0 z m -0.98651,-7.892114 0,-0.789212 -0.98652,-0.09865 0,1.085165 0,1.282469 0,0 0.98652,-1.479771 z m 0.98651,1.085165 -0.98651,0.789212 0,0.789211 0,1.282469 1.97303,-1.973029 0,-0.591908 -0.98652,-0.295955 z m 5.91909,0.09865 0.98651,-0.789212 -2.95954,-3.255497 -0.98651,1.677074 0.98651,1.677075 1.97303,0.69056 z m -20.7168,4.242011 0,0.69056 0.98651,0.591909 0.98652,-1.38112 0,-1.578423 -1.97303,-0.09865 0,1.775726 z m 0.98651,-5.919086 -1.97303,1.282469 0.98652,1.183817 0.98651,-1.085166 0,-1.38112 z m -7.89211,-14.304456 0,1.282468 0.98651,0.197303 0,0.493257 0,0.789212 0,0.789211 2.95955,-0.09865 1.97302,-0.591909 0.98652,-0.197303 0,0.09865 0.98651,0.197303 0.98652,2.466285 0.98651,-0.789211 0,-2.170332 -0.98651,-2.07168 -1.97303,0 -1.97303,0.197303 -0.98651,-0.09865 -0.98652,-0.197303 -1.97303,-0.887863 -0.98651,0.591909 z m 15.78423,4.242011 0,-0.591909 -0.98652,0.295955 -1.97303,0.394605 -0.98651,0.394606 0,1.085166 0,1.183817 -3.94606,0.09865 -2.95954,-0.789211 0,0.69056 0.98651,0.887863 -0.98651,0 -0.98651,-0.493257 0,0.591908 0,0.789212 0,0.197302 -0.98652,0 0,-1.677074 -1.97303,-0.295954 -0.98651,1.38112 0,1.479771 1.97303,-0.09865 0,1.282468 -0.98652,0.591909 -0.98651,0.591909 0.98651,0.295954 0.98652,-0.09865 0.98651,0.789212 0.98652,-0.887863 0,0 0,0.591908 0.98651,0.09865 0,0 0.98651,-1.479771 -0.98651,-1.085166 0,-0.09865 2.95954,0.295955 0.98652,0.986514 0.98651,-0.69056 1.97303,-0.591909 5.91909,-0.295954 -0.98652,-2.07168 -1.97303,-0.69056 0,-0.197303 0.98652,-0.69056 0.98651,-0.09865 0.98652,-0.986514 0,-0.394606 0,0 -1.97303,0 0,-0.69056 z m 2.95954,-2.663588 -0.98651,0.887862 0.98651,0.295955 1.97303,-0.394606 0,-0.986514 -0.98652,-0.493257 -0.98651,0.69056 z m 35.51451,10.457051 1.97303,1.775725 0.98652,-1.578422 -1.97303,-1.874378 -0.98652,1.677075 z m -7.89211,15.192319 1.97303,1.874377 3.94605,0.197303 2.95955,-2.564937 0,-0.197303 0.98651,-3.354148 -1.97303,-0.986515 -0.98651,1.479772 -0.98652,1.282468 -0.98651,-0.197302 -2.95954,0.394605 -1.97303,2.07168 z m -13.8112,6.313691 -0.98651,-1.183817 -1.97303,1.677075 1.97303,1.479771 0.98651,-1.973029 z m 0.98651,-6.708297 m -0.98651,-1.183817 -4.93257,-0.591908 0,3.058194 0,2.170331 0.98651,0 0,-0.591908 0.98652,0.09865 0.98651,-0.394605 -0.98651,-0.69056 0,-0.493258 0,-0.09865 2.95954,0.394606 0.98651,-1.677075 z m 3.94606,-0.986514 -0.98652,0.986514 0,1.183817 0,1.183818 0.98652,0.197302 0,-0.09865 0.98651,-0.09865 0,0.986514 0.98652,1.38112 2.95954,-0.986514 2.95954,-2.268983 0.98651,-1.479772 0,-1.578422 -0.98651,-0.591909 -1.97303,0 -1.97303,-1.282469 -1.97302,-0.493257 -1.97303,2.959543 z m -1.97303,-5.327177 0.98651,1.479772 1.97303,-0.591909 -0.98651,-1.479771 -1.97303,0.591908 z m -1.97303,2.564937 -0.98651,-0.493257 -0.98652,1.085166 0.98652,0.295954 0.98651,-0.887863 z m 0,-8.385371 -0.98651,-1.183817 -0.98652,-0.986514 -0.98651,-0.986515 0,-0.986514 -0.98652,0.295954 -0.98651,0.69056 0.98651,2.07168 0.98652,2.466286 0.98651,2.959543 2.95954,1.578423 -0.98651,-5.919086 z m 1.97303,-0.69056 -0.98652,-1.183817 -0.98651,0.09865 0.98651,2.07168 0,2.268983 0.98652,1.775726 0.98651,0.197303 0,-4.044709 -0.98651,-1.183817 z m 2.95954,0.197303 0.98652,-1.183817 -1.97303,-0.09865 -0.98652,1.085166 1.97303,0.197303 z m 6.9056,8.484023 1.97303,-1.874378 -1.97303,-0.887862 -2.95954,1.578422 2.95954,1.183818 z m -0.98651,-11.443566 -0.98652,0.591909 0,1.578423 0.98652,-0.591909 0,-1.578423 z m 3.94605,-7.300205 -1.97303,-0.394606 0,-0.295954 -0.98651,0.09865 0,0.887863 -0.98651,0.986514 1.97302,0.887863 2.95955,-1.282469 -0.98652,-0.887862 z m -7.89211,3.156845 0,2.860892 2.95954,0.493257 -0.98651,-3.354149 -1.97303,0 z m -4.93257,2.170332 0,-1.183817 -0.98652,0.394605 0,2.367634 1.97303,0.986515 2.95955,0 0.98651,0.197303 0,-0.197303 -0.98651,-2.663589 -2.95955,0.887863 -0.98651,-0.789211 z m -189.41074,154.78409 -0.98651,0 -0.98652,0.98651 -2.95954,0 -2.95954,0.98652 -1.97303,-0.98652 -0.98652,-0.98651 -2.95954,0.98651 -3.94606,0 -3.94605,2.95955 -0.98652,3.94605 -0.98651,3.94606 -0.98652,0 -0.98651,0.98651 0.98651,-0.98651 0,0 -0.98651,-0.98651 -0.98651,-0.98652 0,0.98652 0,0 -0.98652,0 -1.97303,-0.98652 -0.98651,-2.95954 -1.97303,-2.95954 -1.97303,-0.98652 -0.98651,0.98652 0,-0.98652 0.98651,-0.98651 1.97303,0 -0.98651,-4.93257 -2.95955,-3.94606 -1.97302,0.98651 -1.97303,0.98652 -0.98652,7.89211 0.98652,0 1.97303,0.98652 -1.97303,2.95954 -2.95955,2.95954 0,0 -0.98651,-0.98651 -0.98651,0 0,0.98651 -1.97303,-2.95954 -1.97303,-3.94606 -1.97303,1.97303 -1.97303,0.98651 -0.98651,-0.98651 -0.98652,-0.98651 -0.98651,2.95954 -0.98652,2.95954 -0.98651,1.97303 -1.97303,1.97303 0.98652,3.94605 1.97302,2.95955 -1.97302,1.97303 -1.97303,1.97302 0,0.98652 0,0 -0.98652,2.95954 -1.97303,2.95954 0,0 -0.98651,-0.98651 -0.98651,0.98651 -0.98652,0.98652 -0.98651,2.95954 -0.98652,2.95954 -0.98651,1.97303 0,3.94606 0.98651,0 0.98652,0.98651 0,0.98652 0,0.98651 1.97303,0.98652 0.98651,0 0.98651,1.97303 0,0.98651 0.98652,0 0.98651,0.98651 0.98652,0.98652 0.98651,0.98651 0.98652,0.98652 0,1.97303 2.95954,0 1.97303,-0.98652 0,0.98652 0,0 0.98651,0 0.98652,0.98651 0.98651,0.98651 0,0.98652 0.98651,1.97303 0.98652,0 1.97303,0.98651 0,0.98651 0,0.98652 2.95954,0 1.97303,-0.98652 1.97303,2.95955 2.95954,4.93257 1.97303,-0.98652 3.94605,0 0,0.98652 0,2.95954 1.97303,0 0.98652,3.94606 4.93257,0.98651 0.98651,1.97303 1.97303,1.97303 1.97303,-0.98651 1.97303,0 5.91908,-1.97303 0.98652,-1.97303 0.98651,-2.95954 4.93257,-3.94606 3.94606,-3.94606 -0.98651,-1.97303 -0.98652,-1.97303 -0.98651,0 -0.98652,0.98652 -0.98651,0 -2.95954,0 -0.98652,1.97303 0,0.98651 -1.97303,0 -0.98651,-0.98651 -0.98651,0 -0.98652,0 -0.98651,-0.98652 0.98651,-3.94605 2.95954,-3.94606 1.97303,0 2.95955,-0.98651 -0.98652,-1.97303 0,-1.97303 1.97303,-2.95954 0,-4.93258 -1.97303,-3.94605 0,-3.94606 6.9056,1.97303 6.9056,4.93257 0,2.95954 0.98652,0.98652 1.97302,-1.97303 0.98652,1.97303 1.97303,-0.98652 0.98651,0 0,0.98652 0.98651,0.98651 0.98652,-0.98651 0.98651,0 1.97303,1.97303 0.98652,0.98651 0.98651,-0.98651 0.98651,-0.98652 0,-0.98651 -0.98651,-0.98652 0.98651,-3.94605 0.98652,-2.95955 -0.98652,-0.98651 -1.97302,0 0.98651,-2.95954 2.95954,-3.94606 2.95955,-3.94606 -1.97303,-1.97303 -1.97303,-0.98651 -1.97303,0 -1.97303,0.98651 0,0.98652 0,0 -1.97303,0 0,-0.98652 -0.98651,-0.98651 -0.98652,-1.97303 -2.95954,-5.91909 -3.94605,-5.91908 0,-1.97303 0,-0.98651 -4.93258,3.94605 0.98652,-1.97302 -0.98652,-0.98652 -0.98651,-0.98651 -0.98651,0.98651 0.98651,-0.98651 1.97303,-0.98652 -3.94606,-7.89211 z" stroke="#888888" stroke-width="0.5" id="RU-ARK" style=""></path>\n    <path d="m 426.34192,165.89094 0,-0.98652 -0.98652,0 -0.98651,0 -4.93257,1.97303 0,2.95954 0,0 3.94605,0.98652 2.95955,-0.98652 0,-0.98651 0,-1.97303 0,-0.98651 z m 12.82468,24.66285 0,-3.94605 0.98652,-2.95955 0,-1.97303 -0.98652,-0.98651 -0.98651,2.95954 -0.98652,4.93257 -2.95954,2.95955 -4.93257,0.98651 -0.98651,0.98651 -0.98652,0 -0.98651,1.97303 -0.98652,0.98652 -0.98651,0.98651 -0.98652,0.98652 0,0.98651 0.98652,0.98651 0,0.98652 -0.98652,1.97303 0.98652,3.94605 0,3.94606 -2.95954,2.95954 -1.97303,1.97303 -0.98652,2.95955 -0.98651,1.97302 -0.98652,1.97303 0,1.97303 0,1.97303 -0.98651,1.97303 -0.98651,2.95954 1.97302,0 0.98652,0 0.98651,0.98652 0.98652,0.98651 1.97303,-0.98651 1.97302,0 5.91909,3.94605 2.95954,5.91909 0,0.98651 -0.98651,0.98652 0.98651,2.95954 0,2.95954 -0.98651,0 -0.98652,0 -2.95954,1.97303 -0.98651,2.95954 3.94605,3.94606 2.95955,1.97303 -1.97303,0 -1.97303,-0.98652 -1.97303,0.98652 -0.98651,0 0,-0.98652 0,-1.97302 -0.98652,-1.97303 0,-0.98652 0.98652,-1.97303 0,-1.97302 0.98651,-0.98652 0.98652,-0.98651 -0.98652,0 0,-0.98652 0.98652,-0.98651 0,-0.98652 0,-2.95954 -0.98652,-1.97303 0,-1.97303 0,-1.97302 -4.93257,0 -5.91909,0 -1.97302,2.95954 -0.98652,1.97303 0,2.95954 -1.97303,6.9056 -1.97303,1.97303 -2.95954,0.98651 -0.98651,2.95955 -1.97303,1.97302 -2.95954,0.98652 -2.95955,1.97303 -1.97302,-0.98652 -0.98652,0.98652 -1.97303,2.95954 -2.95954,0 0,-0.98651 -0.98651,-0.98652 -3.94606,-0.98651 -2.95954,-1.97303 -1.97303,-0.98652 -0.98652,-1.97302 -0.98651,-2.95955 0,-2.95954 0,0 3.94606,1.97303 4.93257,1.97303 -0.98652,0.98651 -1.97303,0 0,0.98652 2.95955,1.97302 3.94605,0 0,-1.97302 0.98652,-1.97303 0.98651,0 0,0 1.97303,-0.98652 0.98652,-0.98651 0.98651,0 0,-0.98652 0,-0.98651 3.94606,-1.97303 3.94605,-1.97303 0.98652,-2.95954 0,-1.97303 2.95954,-1.97303 1.97303,-2.95954 -1.97303,-3.94606 -0.98651,-5.91908 2.95954,-4.93257 1.97303,-4.93257 1.97303,-5.91909 0.98651,-0.98651 0.98651,-0.98652 2.95955,-5.91908 -0.98652,-4.93258 0,-4.93257 3.94606,-3.94605 5.91909,-9.86515 0,-1.97302 0,-0.98652 -1.97303,-2.95954 -4.93257,-1.97303 -1.97303,-0.98651 -1.97303,-0.98652 0,0 -0.98652,0 0.98652,-0.98651 0,0 -0.98652,0 0,-0.98652 -4.93257,5.91909 -4.93257,6.9056 -7.89211,5.91908 -5.91909,2.95955 0.98652,0 0,0 -0.98652,1.97302 -0.98651,0 -0.98652,1.97303 1.97303,0 0.98652,0.98652 -1.97303,2.95954 -1.97303,3.94606 0,1.97303 -0.98651,1.97302 -0.98652,-0.98651 -0.98651,0 -1.97303,1.97303 -0.98652,2.95954 0,0.98652 0,0 0.98652,-0.98652 0,0 0.98651,0 0.98652,1.97303 0.98651,1.97303 0.98652,0 0,0 0,1.97303 -0.98652,0.98651 0,4.93257 1.97303,1.97303 0,0.98652 -5.91909,6.9056 -1.97302,0 0.98651,-0.98652 0,-0.98651 -0.98651,-0.98652 -0.98652,-0.98651 0,0 -0.98651,-6.9056 -1.97303,-2.95954 -2.95954,-3.94606 0.98651,0 1.97303,1.97303 0,0.98651 0,0.98652 0,-0.98652 -1.97303,-3.94606 -3.94606,-2.95954 -1.97303,0.98652 -0.98651,1.97302 -0.98651,0 1.97302,2.95955 0.98652,1.97303 0,1.97302 -1.97303,1.97303 -1.97303,1.97303 -0.98651,3.94606 1.97303,2.95954 0.98651,2.95954 -3.94606,1.97303 -4.93257,2.95954 -0.98651,0.98652 -0.98652,1.97303 -0.98651,0 -0.98652,0 -0.98651,0 -0.98651,0 -3.94606,0.98651 -2.95954,0 -1.97303,1.97303 0,0.98651 -2.95954,0.98652 -2.95955,1.97303 0,0.98651 -1.97303,-0.98651 -2.95954,0 0.98652,2.95954 0,1.97303 0.98651,1.97303 0,0.98651 -1.97303,1.97303 -0.98651,3.94606 -1.97303,0 -0.98652,1.97303 0.98652,1.97302 2.95954,0.98652 -0.98651,1.97303 0.98651,1.97303 0.98652,0 0.98651,0 0.98651,0 0.98652,0.98651 1.97303,-0.98651 1.97303,0 0,0.98651 0.98651,0.98651 0.98651,-0.98651 0.98652,0 2.95954,0.98651 2.95954,1.97303 0.98652,0.98652 1.97303,0.98651 -0.98652,0.98652 -1.97303,0.98651 1.97303,2.95954 2.95954,2.95954 0,0 1.97303,-0.98651 1.97303,-0.98651 2.95954,0.98651 0.98652,0 0.98651,-0.98651 1.97303,0 0,0.98651 0.98652,0.98651 0.98651,0 1.97303,1.97303 -0.98652,0.98652 -0.98651,1.97303 0,2.95954 0.98651,1.97303 1.97303,1.97303 0,3.94605 0,2.95955 4.93257,0.98651 4.93258,-0.98651 1.97302,2.95954 0.98652,2.95954 1.97303,1.97303 1.97303,0.98651 4.93257,0.98652 3.94605,2.95954 4.93257,2.95954 0.98652,2.95955 1.97303,2.95954 2.95954,0 3.94606,0 1.97303,0.98651 1.97302,0.98652 5.91909,-1.97303 3.94606,-1.97303 0.98651,0 0,0.98652 0,1.97302 2.95954,2.95955 1.97303,0 1.97303,0 1.97303,2.95954 1.97303,2.95954 1.97303,0 1.97303,0 1.97302,1.97303 1.97303,2.95954 4.93257,-2.95954 2.95955,-3.94606 0.98651,-1.97303 0,-0.98651 0.98651,-0.98651 0.98652,-1.97303 -1.97303,-0.98652 -0.98651,-0.98651 0,-1.97303 0.98651,-0.98651 1.97303,0 3.94606,-5.91909 0.98651,-5.91908 -0.98651,-2.95955 -1.97303,0.98652 -1.97303,-0.98652 -0.98652,-1.97303 -1.97302,0 -0.98652,-2.95954 0.98652,0 0.98651,-1.97303 0,-1.97303 0,-0.98651 0,-1.97303 0,-0.98651 0,-0.98652 0,0 -2.95954,-0.98651 -0.98652,-2.95954 0,-6.9056 0.98652,-3.94606 -0.98652,-4.93257 -0.98651,-2.95954 -0.98652,-0.98652 0,-0.98651 1.97303,-1.97303 0,-0.98652 -0.98651,-0.98651 0,-1.97303 0,-0.98651 0,-0.98652 3.94606,-1.97303 1.97302,-4.93257 0.98652,-6.9056 0.98651,-4.93257 -0.98651,-0.98651 -0.98652,-0.98652 0,-0.98651 -0.98651,-0.98652 -1.97303,1.97303 -1.97303,0 -0.98651,0 0,0 -1.97303,-1.97303 -2.95954,-1.97302 0,0 -0.98652,-2.95955 -0.98651,-1.97302 0,-1.97303 0,-0.98652 1.97303,-0.98651 0,0 0,0 0,-0.98652 0.98651,-0.98651 3.94606,-1.97303 1.97303,-1.97303 1.97303,0.98652 1.97302,0 0.98652,-4.93257 0,-5.91909 -1.97303,-0.98651 -1.97303,-1.97303 0,-1.97303 0,-1.97303 1.97303,0 0,0 0.98651,0 1.97303,-1.97303 0,-2.95954 -1.97303,-1.97303 -1.97302,-1.97303 -0.98652,-1.97303 -0.98651,-1.97303 -2.95955,0 -2.95954,1.97303 0.98652,0 0.98651,0 0.98651,1.97303 0,1.97303 -3.94605,-0.98651 -0.98652,-2.95955 -3.94605,0.98652 -0.98652,3.94605 0.98652,3.94606 1.97303,2.95954 1.97302,0 1.97303,1.97303 -0.98651,4.93257 -0.98652,-1.97302 -0.98651,-1.97303 -5.91909,-2.95955 -4.93257,-3.94605 0.98652,-0.98652 1.97303,-3.94605 -0.98652,-1.97303 2.95954,-2.95955 1.97303,-2.95954 z m 10.85166,1.97303 0.98651,-0.98651 0,-1.97303 -0.98651,-0.98652 -4.93257,1.97303 3.94605,1.97303 0.98652,0 z m -9.86514,-14.79771 -3.94606,-0.98652 0.98651,2.95955 0.98652,0 0,0 0.98651,-1.97303 0.98652,0 z m 3.94605,-4.93257 m 0.98652,0 0.98651,0.98651 0.98652,-0.98651 -1.97303,-0.98652 -0.98652,0.98652 z" stroke="#888888" stroke-width="0.5" id="RU-YAN" style=""></path>\n    <path d="m 870.27333,135.30899 -0.98651,0 -0.98652,2.95955 3.94606,1.97303 1.97303,-0.98652 1.97303,-1.97303 -0.98652,-0.98651 -0.98651,-1.97303 0,0 -1.97303,0 -1.97303,0.98651 z m 27.6224,-62.643651 -2.95954,1.973028 0,0.789212 0,0.591908 -0.98652,0.591909 -0.98651,0.789211 -0.98651,4.242011 0.98651,4.340663 0.98651,2.268983 1.97303,1.183817 0.98652,0.493257 0,0 1.97303,-5.425828 2.95954,-1.578423 0.98651,-0.986514 0,-1.183818 1.97303,-4.242011 -0.98651,-4.242011 -1.97303,0.295954 -3.94606,0.09865 z m 67.08297,20.519496 -0.98651,1.578423 -0.98652,1.085166 -0.98651,0.986514 0.98651,0.197303 0.98652,-0.69056 1.97302,0.493257 1.97303,0.789211 0,0.197303 0,0.986514 0,0.986515 1.97303,0 1.97303,0.986509 -0.98651,0 -0.98652,0 0,0.98652 0,0.98651 -0.98651,0 -0.98652,-0.98651 -0.98651,0.98651 -0.98652,0 -1.97302,0 0,-1.97303 -1.97303,-0.986509 -3.94606,-2.860892 -0.98651,-0.197303 -0.98652,0 0,-0.09865 0,0.887863 0,1.282468 -0.98651,-0.295954 0,-0.394606 -0.98652,-1.282468 -1.97302,-0.986514 -1.97303,0.591908 -0.98652,0.986514 2.95955,0.493258 -0.98652,0.887862 -1.97303,1.973023 -0.98651,-1.973023 -0.98652,-1.085165 -0.98651,0.887863 -1.97303,1.183817 -0.98651,-0.986515 -0.98652,-0.197302 -2.95954,1.183817 -2.95954,1.973028 -0.98652,-0.98652 -0.98651,0 -1.97303,0.98652 -1.97303,0.98651 -0.98651,-0.98651 -1.97303,-0.98652 -2.95954,0.98652 -2.95955,1.97303 -2.95954,0 -1.97303,0 -0.98651,0.98651 -1.97303,0.98652 0,0 0,-0.98652 0.98651,0 0,-0.98651 -0.98651,0 -1.97303,0.98651 -0.98651,0.98652 -1.97303,0.98651 -1.97303,0 -0.98651,0.98651 -2.95955,0.98652 -2.95954,0.98651 -0.98651,0 0,0.98652 0,0.98651 -0.98652,-0.98651 -0.98651,0 0,0 -3.94606,4.93257 -0.98651,0.98651 -1.97303,1.97303 0,0 -0.98652,0 -0.98651,0 0.98651,0.98652 0,0.98651 -1.97303,0 -1.97302,0.98651 0,0 -0.98652,0.98652 -1.97303,0.98651 -2.95954,1.97303 -2.95954,0.98652 0.98651,0.98651 0.98652,0.98651 0.98651,1.97303 0,1.97303 0,0.98652 1.97303,0 0.98651,-0.98652 4.93257,2.95954 0.98652,4.93258 -0.98652,1.97302 0,1.97303 -2.95954,0 -1.97303,-1.97303 -2.95954,0.98652 -2.95954,0.98651 -1.97303,-1.97303 -4.93257,-1.97302 -0.98652,0.98651 0,1.97303 0,2.95954 -1.97303,1.97303 -1.97302,0 -1.97303,0.98651 -0.98652,0.98652 -1.97302,1.97303 -2.95955,0.98651 -1.97303,-0.98651 0,0.98651 0,0 -0.98651,0.98651 -0.98651,0.98652 -0.98652,0 -0.98651,1.97303 0,0.98651 -0.98652,0.98652 -0.98651,0.98651 0,0 0.98651,1.97303 0.98652,0.98651 0.98651,0 0.98652,0.98652 0,0 0.98651,1.97303 0.98651,0 1.97303,0.98651 0,0.98651 0,0.98652 1.97303,2.95954 0.98652,1.97303 -1.97303,0.98651 -0.98652,0.98652 -6.9056,7.89211 -4.93257,6.9056 0.98652,0.98652 0.98651,0.98651 -0.98651,1.97303 0,1.97303 5.91908,3.94605 5.91909,1.97303 0,0.98652 -0.98652,0.98651 1.97303,3.94606 1.97303,2.95954 2.95954,0 1.97303,0.98652 0,0 0.98651,3.94605 1.97303,0 0.98652,0 1.97303,-0.98651 0.98651,0 0,0 1.97303,0 1.97303,0.98651 0.98651,0 3.94606,0 2.95954,-1.97303 2.95954,0.98652 2.95955,0 0.98651,0 0,0 0,0 0,0 0,0 0.98652,0 0,0 1.97302,-1.97303 2.95955,-1.97303 -0.98652,-1.97303 1.97303,-1.97303 0.98652,-0.98651 1.97302,-0.98651 0.98652,0 0.98651,0 0.98652,0 0,-0.98652 3.94605,-1.97303 0.98652,0 1.97303,-0.98651 1.97302,-1.97303 0.98652,-0.98651 0,0 1.97303,-0.98652 1.97303,0 0.98651,0.98652 0,0 2.95954,-0.98652 2.95955,-0.98651 1.97302,0 0.98652,0.98651 1.97303,0 2.95954,0 0.98651,4.93257 0.98652,5.91909 3.94606,-0.98652 3.94605,0 3.94606,0.98652 2.95954,0.98651 0.98652,0 0.98651,-0.98651 0.98652,0 0.98651,-0.98652 0,-1.97302 0,-0.98652 0.98651,0 1.97303,-1.97303 9.86514,-10.85165 0.98652,0.98651 1.97303,0.98651 1.97303,-0.98651 1.97302,0 0,0.98651 0.98652,0.98652 0.98651,-2.95954 0,-3.94606 1.97303,-5.91909 1.97303,-5.91908 0,0 -0.98651,0 -0.98652,0 0,-0.98652 -0.98651,-0.98651 0,0 0.98651,0 0,0 0,-0.98651 1.97303,1.97302 0,0 4.93257,-2.95954 4.93258,-2.95954 -0.98651,-0.98652 0,-0.98651 0,-2.95954 -2.95955,-0.98652 -2.95955,-0.98651 0,-1.97303 -2.95954,0.98651 -2.95954,-0.98651 -4.93257,-2.95954 -5.91909,-2.95955 -0.98651,2.95955 -3.94606,0.98651 -1.97303,-1.97303 -0.98651,-0.98651 -0.98652,2.95954 0,0.98652 -0.98651,0 -0.98652,0 0,0.98651 0,0.98651 -0.98651,-0.98651 0.98651,-0.98651 -0.98651,0 -0.98651,0 -1.97303,0 0,0.98651 0.98651,1.97303 -1.97303,0.98651 -0.98651,0.98652 0.98651,-1.97303 0.98652,-0.98652 0,-0.98651 -0.98652,-1.97303 0.98652,0 5.91908,-2.95954 -0.98651,-0.98652 0,-0.98651 1.97303,0 1.97302,0 3.94606,-2.95954 1.97303,-5.91909 -0.98651,-5.91908 -1.97303,-5.91909 -2.95955,0 -3.94605,-0.98651 -0.98652,-2.95955 0.98652,-1.97302 -0.98652,0 -0.98651,-0.98652 1.97303,-0.98651 0.98651,0.98651 0,-1.97303 0,-1.97303 1.97303,2.95955 0.98651,2.95954 1.97303,0 0.98652,-0.98651 0.98651,0 1.97303,3.94605 0.98651,-0.98651 0.98652,-0.98652 1.97303,-4.93257 1.97303,-2.95954 1.97302,-0.98651 2.95955,-0.98652 2.95954,1.97303 1.97303,0.98651 3.94606,-0.98651 2.95955,-1.97303 0.98651,-0.98651 0.98652,-0.98652 2.95954,0.98652 2.95954,-0.98652 0,-0.98651 0,-0.98652 -0.98651,-0.98651 0,-0.98651 1.97303,1.97302 0.98651,0.98652 0.98651,-1.97303 -1.97302,-1.97303 0,0 0.98651,0 0.98651,-0.98651 0,-0.98652 -1.97302,0 -1.97303,0.98652 -0.98652,-0.98652 -0.98651,-0.98651 0,0.98651 -0.98651,0 0.98651,-1.97303 0,-3.94605 -0.98651,-0.98652 -0.98652,-0.98651 -1.97303,-0.98652 -0.98651,0 -0.98652,0 -1.97303,0 -0.98652,0 1.97303,-0.986508 1.97304,-0.986515 1.97303,-1.677074 0.98651,-2.170331 0,-0.69056 -1.97303,0.295954 -1.97303,-0.69056 1.97303,-0.69056 2.95955,-1.775726 -1.97303,-1.282468 -0.98652,-0.986514 0,-3.255497 0,-2.367635 -0.98651,0.295955 -0.98652,0.789211 -0.98652,0.197303 -0.98651,0.09865 -2.95955,0.789212 -1.97303,0.69056 -4.93257,0.09865 -2.95954,0 -1.97303,2.466286 -0.98651,2.466285 -0.98652,0.789212 0,-0.09865 0,0.295955 0.98652,0.789211 0,0.789212 -1.97303,-0.591909 -0.98652,-0.986514 -0.98651,0.789211 z" stroke="#888888" stroke-width="0.5" id="RU-CHU"></path>\n    <path d="m 813.05551,494.40018 m 0,0 0,0 -0.98652,0 -1.97303,0 -0.98651,-0.98651 -1.97303,0 -2.95954,-2.95954 -0.98652,-0.98652 0,0 -1.97303,0 -1.97302,0.98652 -1.97303,-0.98652 -1.97303,0 -0.98652,1.97303 -0.98651,0.98651 0,0 -0.98651,0 0,0 -2.95955,1.97303 -0.98651,0 -0.98652,0.98652 -0.98651,2.95954 -0.98651,1.97303 0,1.97303 0,1.97303 0.98651,0.98651 1.97303,1.97303 0,0.98651 0,0.98652 0.98651,1.97303 0.98652,0.98651 0.98651,0.98651 0,0 1.97303,0.98652 1.97303,-0.98652 0.98651,0 0,0 5.91909,-2.95954 0.98651,0 0.98652,0 0.98651,-1.97303 0,-1.97303 1.97303,-0.98651 1.97303,-1.97303 0.98651,0 0.98652,0 1.97303,-3.94606 2.95954,-1.97302 1.97303,0 1.97302,0 2.95955,-1.97303 -0.98652,-1.97303 0,0 -0.98651,-1.97303 -1.97303,0.98651 -0.98651,0 -1.97303,0 -0.98652,0 -1.97302,1.97303 0,0 z" stroke="#888888" stroke-width="0.5" id="RU-YEV" style=""></path>\n    <path d="m 513.15517,466.77778 -1.97303,0 -4.93257,1.97303 -2.95954,-0.98651 -0.98652,0.98651 -0.98651,0 -0.98651,0 0,-0.98651 -0.98652,0 -0.98651,0.98651 -1.97303,0 -0.98652,0 -0.98651,1.97303 -0.98651,2.95954 -1.97303,0.98652 -1.97303,0.98651 -4.93257,6.9056 -6.9056,3.94606 -6.9056,-0.98652 -5.91909,-1.97302 -0.98651,-1.97303 -1.97303,-0.98652 -2.95954,0.98652 -2.95955,0.98651 0,2.95954 0,1.97303 -3.94605,0 -3.94606,-0.98651 0,3.94606 0,2.95954 0.98651,0.98651 0.98652,0 0,1.97303 0,1.97303 1.97303,0.98651 0,1.97303 -1.97303,0 -2.95954,1.97303 0.98651,0.98652 0.98651,0 0,0.98651 0.98652,1.97303 3.94606,-0.98652 3.94605,0 0,-1.97302 0.98652,-1.97303 4.93257,0.98651 1.97303,-0.98651 1.97303,-0.98652 1.97302,0 1.97303,0 0,-0.98651 0.98652,-0.98652 0.98651,0 0,0.98652 0.98652,0 0,0.98651 0.98651,0 1.97303,-0.98651 0,1.97303 0.98651,1.97303 3.94606,0 4.93257,0.98651 0.98652,2.95954 0.98651,3.94606 3.94606,0.98651 3.94605,0.98652 0.98652,0 0.98651,-0.98652 4.93257,1.97303 0.98652,0 0.98651,0 2.95954,0.98652 0.98652,0.98651 0.98651,0.98651 6.9056,-3.94605 0.98652,-2.95954 0.98651,-2.95955 -0.98651,0 -0.98652,-1.97303 0,-0.98651 0,-0.98651 0,-0.98652 -0.98651,-0.98651 1.97303,-4.93257 2.95954,-3.94606 0.98651,0 0.98652,-0.98652 1.97303,-1.97302 0.98651,-1.97303 0,-0.98652 0,-0.98651 -0.98651,-0.98652 0,-0.98651 0,-0.98651 0.98651,-0.98652 0,-2.95954 0,-1.97303 0.98652,0 0,0 0,-1.97303 -0.98652,-0.98651 -1.97303,0 -1.97303,0 -4.93257,-3.94606 -4.93257,-4.93257 z" stroke="#888888" stroke-width="0.5" id="RU-TY" style=""></path>\n    <path d="m 933.41024,501.30578 0,0 -1.97302,0.98652 -0.98652,0 -0.98651,0 0,0.98651 0,0.98652 -0.98652,3.94605 -0.98651,3.94606 0.98651,0.98651 0.98652,0 0,-3.94605 0.98651,-3.94606 1.97303,-1.97303 0.98651,-0.98651 0,-0.98652 z m 5.91909,6.9056 0,-1.97303 -0.98651,0.98652 -0.98652,0.98651 1.97303,0 z m 6.9056,-26.63588 -0.98651,-1.97303 -0.98652,0 -0.98651,2.95954 -0.98652,1.97303 -1.97303,0 -1.97302,0 0,0.98651 0.98651,0.98652 -0.98651,1.97303 -0.98652,1.97303 0,1.97302 -0.98651,1.97303 0,0.98652 0,0.98651 -0.98652,1.97303 0.98652,0.98651 0.98651,-4.93257 0.98652,-0.98651 0.98651,-0.98652 0,-0.98651 0,-0.98651 1.97303,-1.97303 0.98651,-2.95955 1.97303,-1.97302 1.97303,-1.97303 z m 6.9056,-14.79772 m 0,-1.97302 0,0 -0.98651,0.98651 -1.97303,4.93257 0,0.98651 -0.98652,0.98652 1.97303,0.98651 1.97303,-6.9056 z m 7.89211,-14.79772 -0.98651,-2.95954 0,2.95954 -0.98652,1.97303 0,0.98651 0,0 1.97303,-2.95954 z m 0.98652,-13.8112 m 0,0 0,1.97303 0.98651,-0.98651 0,-0.98652 -0.98651,0 z m 0,-3.94606 m 0,0 m -0.98652,0 m 0,0 m 0,0 m 0.98652,0.98652 m 0,-0.98652 m 0,0 z m 0.98651,-10.85165 0,0 0,0 -0.98651,-1.97303 0.98651,0.98651 0,0.98652 z m -0.98651,-11.83817 0.98651,1.97303 0,0.98651 0.98652,-0.98651 -0.98652,-2.95955 -0.98651,0.98652 z m 3.94605,-18.74377 0,-1.97303 -0.98651,0 -0.98651,1.97303 1.97302,0 z m -2.95954,5.91908 -1.97303,3.94606 0.98652,0.98651 1.97303,-1.97303 0.98651,-2.95954 0,-2.95954 -0.98651,-1.97303 -0.98652,-0.98651 -0.98651,0.98651 0.98651,1.97303 0,2.95954 z m -81.88068,49.32571 -4.93257,-5.91908 -3.94606,-4.93257 -2.95954,-3.94606 0,0.98651 -0.98652,0 0,-0.98651 0,-0.98651 -1.97303,-0.98652 -1.97302,-1.97303 -0.98652,-4.93257 -1.97303,-5.91908 0,0 0,-0.98652 0,0.98652 -0.98651,0 -1.97303,-1.97303 -0.98651,-1.97303 0.98651,0 0.98652,0.98651 0,0.98652 0.98651,0 -3.94606,-4.93257 -2.95954,-3.94606 0,-0.98651 0,-0.98652 -2.95954,-1.97303 -0.98652,-0.98651 0,0.98651 0,0.98652 -0.98651,0 -0.98652,0.98651 1.97303,0.98652 2.95955,1.97302 0,0.98652 0,0.98651 0,-0.98651 0.98651,0 0,1.97303 -0.98651,0 0,0.98651 0,0 0.98651,0.98652 -0.98651,2.95954 -0.98652,-0.98652 -0.98651,0 -1.97303,0.98652 0,1.97303 0.98651,1.97303 0.98652,0.98651 1.97303,6.9056 1.97302,6.9056 3.94606,2.95954 4.93257,3.94606 0.98652,2.95954 0,3.94606 1.97302,1.97303 0.98652,1.97303 5.91908,17.75725 0,0.98652 3.94606,2.95954 1.97303,3.94606 0.98651,2.95954 0,3.94606 1.97303,1.97302 0.98652,1.97303 1.97303,7.89212 3.94605,5.91908 0.98652,-0.98651 0,-1.97303 -0.98652,-4.93257 0.98652,-3.94606 0.98651,0.98652 0,0 2.95954,-0.98652 1.97303,0.98652 1.97303,0.98651 0.98652,1.97303 0.98651,0.98651 -1.97303,-4.93257 -1.97303,-3.94606 -0.98651,0.98652 -1.97303,-0.98652 -1.97303,-0.98651 -1.97303,-1.97303 -3.94605,-2.95954 -2.95955,-4.93257 -0.98651,-5.91909 0,-4.93257 -0.98652,-1.97303 0,-1.97303 0.98652,-0.98651 0.98651,-1.97303 4.93257,-0.98651 4.93258,1.97303 1.97302,0.98651 0.98652,0.98651 -1.97303,-1.97302 -2.95954,-1.97303 -1.97303,-1.97303 -0.98652,-1.97303 -5.91908,-5.91909 z" stroke="#888888" stroke-width="0.5" id="RU-SAK"></path>\n    <path d="m 773.59493,418.43859 1.97303,-1.97303 0.98652,-2.95955 -0.98652,0 -0.98651,0 -0.98652,-0.98651 -1.97302,-0.98651 -0.98652,0.98651 -1.97303,0.98651 -0.98651,0 -0.98651,-0.98651 -2.95955,1.97303 -3.94605,-0.98652 -1.97303,1.97303 -2.95955,0 -0.98651,0.98652 0,0.98651 -1.97303,0.98652 -1.97303,1.97302 0,0.98652 -0.98651,0.98651 -2.95954,-0.98651 -2.95955,-0.98652 0,0.98652 -1.97303,0 -0.98651,0 -0.98651,0 -0.98652,1.97303 0,0.98651 -1.97303,-0.98651 -0.98651,0 -1.97303,0.98651 -2.95954,1.97303 -2.95955,0 -0.98651,-0.98652 -2.95954,0 -2.95954,0.98652 -4.93258,-0.98652 -1.97302,-1.97302 -1.97303,-1.97303 -4.93257,-0.98652 -5.91909,0 -0.98651,-0.98651 -1.97303,-0.98651 -1.97303,0 -1.97303,0 -1.97303,-0.98652 -1.97303,-0.98651 -1.97303,-0.98652 -3.94605,0.98652 -3.94606,1.97303 0,3.94605 0,0 0.98651,0 0.98652,1.97303 0,0.98651 1.97303,0.98652 2.95954,0.98651 -1.97303,0.98652 -0.98651,0 0,1.97303 1.97303,1.97302 0.98651,0 0,-0.98651 1.97303,-0.98651 2.95954,-0.98652 1.97303,2.95954 0.98651,2.95955 0.98652,0 1.97303,-0.98652 1.97303,4.93257 -1.97303,4.93258 0.98651,0.98651 0.98652,0 2.95954,1.97303 -0.98652,0.98651 -0.98651,0.98652 0,0.98651 0,0.98652 0,0.98651 -0.98651,1.97303 0,0 2.95954,2.95954 1.97303,2.95954 0.98651,0 0.98652,0 2.95954,0 1.97303,-0.98651 1.97303,-0.98651 0,0 0.98651,0 0.98651,-0.98652 1.97303,0.98652 1.97303,0.98651 0,0 0.98652,-0.98651 2.95954,1.97302 2.95954,0.98652 0,-0.98652 0,0 5.91909,0 0.98651,0.98652 0,0.98651 0,0 0.98651,0 0,0 0.98652,0.98652 0,0 0.98651,0 0,0.98651 0,0.98652 0.98652,0 0,0 1.97303,1.97302 0.98651,0.98652 0.98651,3.94605 4.93258,5.91909 0.98651,0 0,0.98651 0.98651,0.98652 0,1.97303 1.97303,1.97303 1.97303,2.95954 0.98652,0.98651 0.98651,2.95955 0.98651,0 0.98652,0.98651 0,1.97303 2.95954,4.93257 3.94606,-0.98651 3.94606,-0.98652 0,0 0.98651,0.98652 0,0 0.98651,0 0.98652,0 0,0.98651 0.98651,0 0,0 0.98652,-0.98651 0.98651,0.98651 0,-0.98651 0.98651,0 0,-0.98652 3.94606,2.95954 6.9056,0.98652 0.98652,0 0.98651,-1.97303 0.98651,-2.95954 0.98652,-0.98652 0,0 0,0 0,-2.95954 -0.98652,-2.95954 0,-2.95955 0,-3.94605 -0.98651,-0.98652 -1.97303,0 0,-0.98651 -0.98651,-0.98652 -0.98652,0.98652 -0.98651,0 0,-0.98652 0,-0.98651 -0.98652,0 -0.98651,0.98651 0,-2.95954 0,-2.95954 0.98651,-2.95954 0.98652,-1.97303 0,-0.98652 -0.98652,-1.97302 2.95955,-1.97303 2.95954,-1.97303 0.98651,-0.98652 -0.98651,-0.98651 0.98651,-1.97303 0.98652,-0.98651 1.97303,-0.98652 1.97303,-0.98651 0,-3.94606 -0.98652,-1.97303 0,0 4.93257,-0.98651 3.94606,0 0.98651,-0.98652 0,-1.97302 -0.98651,-1.97303 0,-3.94606 -0.98651,-2.95954 -2.95955,-0.98652 0,0 -0.98651,0 -0.98652,0.98652 -2.95954,0.98651 -1.97303,0 -0.98651,1.97303 -1.97303,1.97303 -3.94606,1.97303 -1.97303,0.98651 -0.98651,0.98652 0,0 -0.98651,0 -0.98652,0 -0.98651,0 -0.98652,0 -1.97303,-2.95955 -1.97302,-1.97303 -3.94606,0 -2.95954,-0.98651 0,-3.94606 2.95954,-1.97303 0,-2.95954 0,-2.95954 0.98651,-0.98652 0.98652,-0.98651 1.97303,-1.97303 1.97302,-1.97303 0,-0.98651 0,-0.98651 z" stroke="#888888" stroke-width="0.5" id="RU-AMU" style=""></path>\n    <path d="m 633.50991,428.30373 -1.97303,0 -1.97303,-1.97303 0,-1.97303 -0.98651,0.98651 -2.95954,0 -0.98652,0 -1.97303,0 -0.98651,-0.98651 -0.98651,-0.98651 -0.98652,1.97302 -2.95954,1.97303 -1.97303,0 -2.95954,0 -0.98652,-0.98651 -0.98651,0 0,0 0,-0.98652 -0.98652,0 -1.97302,0.98652 -0.98652,1.97303 -0.98651,0 -0.98652,-0.98652 -1.97303,1.97303 -2.95954,1.97303 0.98652,4.93257 1.97302,0 0,0.98652 0,0.98651 1.97303,0.98651 0.98652,1.97303 -0.98652,0 -0.98651,0 0,1.97303 -1.97303,7.89212 0.98651,7.89211 2.95955,-10.85166 1.97303,-3.94605 2.95954,-0.98652 -0.98652,12.82469 -1.97302,13.8112 -0.98652,0.98651 -0.98651,0.98651 0,-0.98651 0,-1.97303 -0.98652,-0.98651 -0.98651,1.97303 -0.98652,1.97302 0.98652,0 1.97303,0 0,1.97303 -0.98652,1.97303 -0.98651,0 -0.98652,0 -1.97302,2.95954 -2.95955,3.94606 -11.83817,4.93257 -0.98651,2.95955 -0.98652,2.95954 -6.9056,3.94606 -3.94605,0.98651 -0.98652,0.98651 -2.95954,2.95955 -3.94606,0 -0.98651,0.98651 -0.98652,0 0,-1.97303 0,-1.97303 -0.98651,-1.97302 -1.97303,-0.98652 0,-1.97303 -0.98651,-1.97303 -6.9056,-5.91908 -0.98652,0.98651 -0.98651,0 -0.98652,-1.97303 -0.98651,-2.95954 -4.93257,-2.95954 -3.94606,-2.95954 -0.98651,-2.95955 0,-1.97303 -4.93257,3.94606 -3.94606,2.95954 -0.98651,-0.98651 0,0 -0.98652,0 0,1.97303 0,2.95954 -0.98651,0.98652 0,0.98651 0,0.98651 0.98651,0.98652 0,0.98651 0,0.98652 0.98652,0.98651 1.97302,0.98652 6.9056,3.94605 5.91909,2.95955 0.98651,0 0.98652,0.98651 3.94605,0.98651 2.95955,0.98652 0,5.91908 5.91908,6.9056 8.87863,1.97303 7.89212,-1.97303 1.97302,-0.98651 0.98652,0 3.94606,0.98651 3.94605,0.98652 1.97303,0 0.98651,0 2.95955,1.97303 1.97303,1.97302 1.97302,0 1.97303,0.98652 0,-3.94606 1.97303,-2.95954 1.97303,0 1.97303,-1.97303 -1.97303,-0.98651 -1.97303,-1.97303 0.98652,-1.97303 1.97302,-1.97303 0,0 0,0 -0.98651,-2.95954 0.98651,-1.97303 3.94606,0 2.95954,0.98651 0,0 1.97303,-1.97302 2.95955,-1.97303 2.95954,0 1.97303,0.98651 0.98651,-0.98651 1.97303,-1.97303 1.97303,-1.97303 1.97303,-0.98651 1.97303,-0.98652 0.98651,-2.95954 0.98651,-0.98652 0.98652,0 1.97303,0.98652 0.98651,-1.97303 1.97303,-0.98651 4.93257,-0.98652 4.93257,-3.94606 -1.97303,-5.91908 -1.97303,-3.94606 1.97303,-0.98651 0,-0.98652 5.91909,-4.93257 4.93257,-4.93257 1.97303,-0.98651 1.97303,-0.98652 1.97303,0 1.97302,-0.98651 0,-6.9056 -4.93257,-3.94606 -2.95954,-1.97303 0,-2.95954 0,-0.98651 0,0 0,0 -0.98651,-1.97303 0,0 0,-0.98652 0,0 -0.98652,-1.97303 0,-0.98651 0,0 0,-1.97303 -0.98651,-0.98651 -0.98652,-0.98652 0,0 0,0 -0.98651,0 0,0 1.97303,-0.98651 -0.98652,-1.97303 1.97303,-1.97303 0.98652,0 0.98651,-0.98651 -4.93257,-0.98652 -4.93257,5.91909 -4.93257,1.97303 -3.94606,-0.98652 -1.97303,0.98652 z" stroke="#888888" stroke-width="0.5" id="RU-BU" style=""></path>\n    <path d="m 466.789,444.08796 -1.97303,-1.97303 -1.97303,0.98651 -2.95954,0 -2.95954,-2.95954 -2.95954,-2.95954 -0.98652,0.98651 0,1.97303 0,1.97303 0,0.98651 -0.98651,2.95954 -0.98652,3.94606 2.95955,0 1.97302,1.97303 -0.98651,0.98651 -0.98651,0.98652 0.98651,1.97303 -0.98651,1.97303 -0.98652,0 -1.97303,1.97302 0,1.97303 0.98652,2.95955 -0.98652,1.97302 0.98652,1.97303 0.98651,2.95954 -3.94606,2.95955 -3.94605,1.97303 -1.97303,1.97302 -1.97303,0.98652 0,1.97303 0,0.98651 -0.98651,0.98652 0,0.98651 0.98651,2.95954 2.95954,0.98652 1.97303,-0.98652 1.97303,-0.98651 3.94606,0.98651 3.94605,0 0,-1.97303 0,-2.95954 2.95955,-0.98651 2.95954,-0.98652 0.98651,-2.95954 1.97303,-1.97303 0.98652,-0.98651 1.97303,0 0,0 1.97302,-3.94606 0,-0.98651 1.97303,-0.98652 1.97303,-1.97303 0,-0.98651 -0.98651,-0.98651 -0.98652,-0.98652 0,-0.98651 0,0 -0.98651,-0.98652 1.97303,-4.93257 -1.97303,-5.91908 -0.98652,-5.91909 -2.95954,-0.98651 z" stroke="#888888" stroke-width="0.5" id="RU-KK"></path>\n    <path d="m 446.0722,418.43859 -2.95954,0 -2.95954,0 -0.98652,0 -0.98651,0.98651 -0.98652,-0.98651 -0.98651,0 -1.97303,1.97302 -0.98651,0.98652 -0.98652,0 -0.98651,-0.98652 -1.97303,0.98652 -1.97303,0 -0.98651,1.97303 0,0.98651 0.98651,2.95954 0,1.97303 0,0.98652 0.98652,0.98651 -0.98652,1.97303 -0.98651,1.97303 0.98651,1.97303 0,1.97302 -0.98651,0.98652 -0.98652,1.97303 1.97303,1.97303 0.98652,1.97302 0.98651,0.98652 0.98651,0 0,1.97303 0.98652,0.98651 0.98651,0.98652 0.98652,0.98651 0,2.95954 0.98651,1.97303 1.97303,0.98652 0.98651,0.98651 -0.98651,0.98651 -0.98651,1.97303 0,0.98652 0.98651,0 0,0.98651 -0.98651,0.98652 0.98651,1.97302 0,2.95955 1.97303,1.97302 0.98651,0.98652 0.98652,0 0.98651,-0.98652 0.98652,0.98652 0.98651,0.98651 0.98651,0 0.98652,-0.98651 0,1.97303 0,1.97303 3.94605,-1.97303 3.94606,-2.95955 -0.98651,-2.95954 -0.98652,-1.97303 0.98652,-1.97302 -0.98652,-2.95955 0.98652,-1.97303 0.98651,-1.97302 1.97303,-0.98652 0,-0.98651 -0.98651,-1.97303 0.98651,-0.98652 0.98651,-0.98651 -1.97302,-1.97303 -2.95955,0 0.98652,-3.94606 1.97303,-2.95954 -0.98652,-0.98651 0,-1.97303 0,-1.97303 0.98652,-0.98651 2.95954,-2.95955 2.95954,-0.98651 0,-0.98652 -0.98651,-8.87862 -0.98652,-0.98652 -0.98651,-0.98651 0.98651,-1.97303 0.98652,0 -0.98652,-0.98651 0,-0.98652 -3.94605,0 -2.95955,1.97303 -1.97303,-0.98651 -1.97302,-0.98652 -0.98652,0.98652 0,0 z" stroke="#888888" stroke-width="0.5" id="RU-KEM"></path>\n    <path d="m 377.0162,392.78921 -1.97302,-0.98651 -1.97303,-1.97303 -0.98652,1.97303 0,0.98651 -0.98651,1.97303 0,0.98652 0,0.98651 -1.97303,0.98652 -0.98651,1.97302 0.98651,1.97303 0,1.97303 -0.98651,0 -2.95955,0 -1.97303,0.98652 -1.97302,1.97302 0,0 -0.98652,0 -0.98651,0 0,1.97303 0.98651,0.98652 -1.97303,1.97303 -0.98651,4.93257 0.98651,1.97303 0.98652,2.95954 0,0.98651 -0.98652,0.98652 -0.98651,1.97302 -0.98652,2.95955 1.97303,0 1.97303,0 0.98652,-0.98652 0.98651,-0.98651 0.98651,0.98651 0.98652,0 0.98651,0 0.98652,0 -1.97303,1.97303 -1.97303,0.98652 2.95954,5.91908 3.94606,6.9056 0.98651,-1.97303 1.97303,-0.98651 0.98652,0.98651 0,0.98652 1.97303,-0.98652 1.97302,0 2.95955,0.98652 2.95954,0 0,0 0.98651,-0.98652 0,0 6.9056,-2.95954 5.91909,-1.97303 0,0.98652 0.98651,2.95954 0.98652,0.98651 0,0.98652 0,0.98651 0.98651,0 0.98652,0.98652 -0.98652,0.98651 -0.98651,0 4.93257,5.91909 2.95954,-2.95955 4.93257,-2.95954 0,1.97303 1.97303,0 0,-1.97303 1.97303,0 1.97303,0 1.97303,0 1.97303,0 0.98651,-0.98651 2.95954,-1.97303 0.98652,-1.97303 0.98651,-0.98652 0,-1.97302 -0.98651,-1.97303 0.98651,-1.97303 0.98652,-1.97303 -0.98652,-0.98651 0,-0.98652 0,-1.97303 -0.98651,-2.95954 0,-0.98651 0.98651,-1.97303 -1.97303,0 -1.97303,0 -0.98651,0 -0.98651,-0.98652 -0.98652,2.95955 -1.97303,0.98651 -0.98651,0 0,-0.98651 0,0 -0.98652,-0.98652 0.98652,-0.98651 0.98651,-0.98652 0,-3.94605 0,-0.98652 0,-1.97303 -0.98651,0 -1.97303,0 -0.98651,0.98652 0,0.98651 -0.98652,-0.98651 -0.98651,0 -4.93257,0 -0.86436,-3.94606 -7.02776,-0.98651 -4.8742,-7.8498 -6.92458,-3.89609 0.92159,-1.02052 z" stroke="#888888" stroke-width="0.5" id="RU-NVS"></path>\n    <path d="m 417.46329,445.07447 -0.98652,0 -2.95954,0 0,1.97303 -0.98651,0 -0.98652,-1.97303 -4.93257,2.95954 -2.95954,2.95955 -3.94606,-5.91909 0,0 0.98652,-0.98651 -0.98652,-0.98652 -0.98651,0 0,-0.98651 0,-0.98652 -0.98652,-0.98651 -0.98651,-2.95954 0,-0.98652 -5.91909,1.97303 -6.9056,2.95954 0,0 -0.98651,0.98652 0,0 -2.95954,0 -2.95955,-0.98652 -1.97302,0 -0.98652,0.98652 -0.98651,-1.97303 -0.98652,0 -0.98651,0.98651 -1.97303,1.97303 6.9056,35.51451 3.94606,-0.98651 0,-0.98651 0,-0.98652 0.98651,0 0.98652,0 0,-0.98651 0.98651,-0.98652 1.97303,4.93257 1.97303,3.94606 3.94605,0.98652 1.97303,0.98651 2.95955,0 0.98651,0 0,-0.98651 0.98651,0 0.98652,0 0.98651,0 0.98652,-0.98652 3.94605,2.95954 1.97303,3.94606 2.95954,0 0,-0.98651 0,-1.97303 0,-0.98652 -1.97302,-1.97302 -1.97303,-1.97303 1.97303,-0.98652 1.97302,0.98652 0,-0.98652 0.98652,0 1.97303,-0.98651 3.94605,0 2.95955,0 0.98651,-0.98652 0.98652,-0.98651 0.98651,0 0.98651,0 0.98652,-1.97303 0.98651,-1.97303 0.98652,0.98652 0.98651,0.98651 0.98652,0 1.97302,0 0,0 0.98652,0.98652 1.97303,-1.97303 -0.98652,-1.97303 0.98652,-1.97303 2.95954,-0.98651 0,-2.95955 -0.98651,-1.97302 0.98651,-0.98652 0,-0.98651 -0.98651,-0.98652 0,0 0.98651,-1.97303 0.98651,-1.97302 -0.98651,0 -1.97303,-0.98652 -0.98651,-1.97303 0,-2.95954 -0.98652,-0.98651 -0.98651,-0.98652 -0.98652,-0.98651 0,-1.97303 -0.98651,0 -1.97303,-0.98652 0,-1.97302 -1.97303,-1.97303 -2.95954,1.97303 -0.98651,0.98651 -1.97303,0 -1.97303,-0.98651 z" stroke="#888888" stroke-width="0.5" id="RU-ALT"></path>\n    <path d="m 93.196032,417.45207 -2.07168,-2.95954 -2.959542,-4.93257 -1.578423,-0.98652 -0.69056,-0.98651 -1.775726,0.98651 -2.76224,1.97303 -1.38112,-0.98651 -1.479771,0.98651 0.591909,0 -0.197303,1.97303 -1.874377,0 -1.479772,0 1.479772,0.98651 -0.493258,2.95955 0.493258,0 0.197302,0.98651 0.09865,0.98652 1.38112,0.98651 1.282468,0 -0.295954,0.98651 -0.09865,0.98652 1.677074,0 1.677074,0 0.493257,1.97303 -0.295954,1.97302 -2.170331,0.98652 -2.466286,0.98651 -1.677074,2.95955 -0.986515,1.97302 -1.578422,0 -1.479772,0 -0.493257,0 -0.394606,0.98652 -1.085165,-0.98652 -2.170332,0 -2.07168,0.98652 -1.183817,0.98651 -1.479771,1.97303 1.973028,4.93257 2.564938,3.94606 0.69056,6.9056 2.170331,5.91909 2.367634,0 2.564937,-0.98652 3.354149,0 2.860891,-1.97303 0,-8.87863 0.986514,-8.87862 5.623131,-4.93258 2.466286,-0.98651 -0.394606,-0.98651 -1.085165,0 -0.295955,0 0.394606,-2.95955 0.394606,-2.95954 -1.479772,-4.93257 4.14336,-1.97303 z" stroke="#888888" stroke-width="0.5" id="RU-DA"></path>\n    <path d="m 74.057656,380.95104 -2.76224,-0.98651 0.591908,-0.98652 -0.295954,-0.98651 -1.282468,0 -1.183817,0.98651 -0.197303,-0.98651 0.09865,-0.98651 -0.986514,0 -0.69056,-0.98652 -1.677074,-1.97303 -1.973029,-0.98651 -0.493257,1.97303 -0.493257,0.98651 -1.775726,-0.98651 -1.479771,-0.98652 -1.282469,1.97303 -0.789211,2.95954 0.887863,2.95955 -0.591909,1.97303 0.789212,0.98651 -1.479772,1.97303 -1.578423,0.98651 -0.394605,-0.98651 -0.493257,0 0.09865,3.94606 1.578423,1.97302 1.282468,2.95955 1.38112,0 1.282469,0.98651 -0.394606,0.98652 -0.09865,0 -2.170332,0 -1.677074,0.98651 0.394606,0.98651 1.085165,0 -0.789211,0.98652 -1.183817,1.97303 2.268983,0 2.564937,0.98651 0.493257,0.98652 -0.197303,0.98651 2.76224,1.97303 2.170331,0 1.874377,1.97303 1.085166,0.98651 0.493257,0 -0.789211,0.98652 -0.986514,0 2.466285,1.97302 0.394606,2.95955 2.170331,-0.98652 1.479772,-0.98651 0.394605,0.98651 0.789212,0.98652 0.789211,0 0.986514,0 0.493258,-2.95955 -1.479772,-0.98651 1.479772,0 1.874377,0 0.197303,-1.97303 -0.591909,0 1.479771,-0.98651 1.38112,0.98651 2.76224,-1.97303 1.775726,-0.98651 -0.789212,-4.93257 -2.268982,-4.93257 -1.38112,-1.97303 -0.591909,-1.97303 0.394606,-1.97303 0.295954,-2.95954 -1.183817,-1.97303 -1.479771,-1.97303 -0.789212,-1.97303 -0.887863,-1.97303 -3.156845,0 z" stroke="#888888" stroke-width="0.5" id="RU-STA"></path>\n    <path d="m 60.641062,404.62739 -0.493257,-0.98652 -2.564937,-0.98651 -2.268983,0 -1.677074,0 -1.085166,0 -3.847406,2.95954 2.663589,3.94606 1.38112,4.93257 0.887863,0 0.887863,0.98651 2.268982,-0.98651 2.170332,-0.98652 0.789211,0.98652 0.591909,0.98651 1.085165,-0.98651 0.986515,0 0.789211,0.98651 1.183817,0 1.479771,-0.98651 1.183818,-2.95954 0.986514,0 0.789211,-0.98652 -0.493257,0 -1.085166,-0.98651 -1.874377,-1.97303 -2.170331,0 -2.76224,-1.97303 0.197303,-0.98651 z" stroke="#888888" stroke-width="0.5" id="RU-KB"></path>\n    <path d="m 56.201748,392.78921 -1.578423,-1.97302 -1.578423,0 0.09865,0.98651 -3.551452,1.97303 -1.578423,-1.97303 -1.578422,-2.95954 -3.354149,1.97303 -3.255497,1.97302 3.4528,6.9056 5.425828,5.91909 3.847406,-2.95954 1.085166,0 1.677074,0 1.183817,-1.97303 0.789211,-0.98652 -1.085165,0 -0.394606,-0.98651 1.677074,-0.98651 2.170332,0 0.09865,0 0.394606,-0.98652 -1.282469,-0.98651 -1.38112,0 -1.282468,-2.95955 z" stroke="#888888" stroke-width="0.5" id="RU-KC"></path>\n    <path d="m 61.528925,357.2747 -4.439314,-1.97303 -3.058195,-0.98651 0.493258,-0.98652 1.282468,-0.98651 -0.394606,-0.98651 0.197303,-0.98652 -1.085165,-0.98651 -1.38112,0 0,0.98651 -0.295955,0.98652 -0.09865,0 -0.887863,-0.98652 -0.493257,-0.98651 -1.38112,-0.98652 -1.282469,0 -0.591908,-0.98651 -0.69056,-0.98652 0,5.91909 0.295954,4.93257 -0.493257,-0.98651 -0.493257,0 -0.09865,-1.97303 0,-0.98652 -1.282469,0.98652 -1.38112,0.98651 0,-0.98651 0.394606,0 -0.69056,-0.98652 -1.874377,0.98652 -1.775726,0.98651 -0.986514,0 -1.183817,0 -1.282469,0.98652 -1.578423,0 -2.663588,-1.97303 -1.677074,-2.95954 -0.295955,1.97302 0.197303,0.98652 -1.677074,-0.98652 -1.38112,0 1.183817,1.97303 0.986514,3.94606 -0.69056,1.97303 0.197303,1.97303 0.69056,0.98651 0.69056,0 0.493257,0 0.09865,2.95954 -0.09865,1.97303 2.07168,5.91909 0.591909,6.9056 0.197303,7.89211 3.255497,0 1.282468,1.97303 0.789212,0.98651 0.69056,0 3.156845,-1.97302 3.354149,-0.98652 1.578422,1.97303 1.578423,1.97303 3.551452,-1.97303 -0.09865,-0.98651 1.578423,0 -0.09865,-3.94606 0.493257,0 0.394605,0.98651 1.578423,-0.98651 1.479772,-1.97303 -0.789212,-0.98651 0.591909,-1.97303 -0.887863,-2.95955 0.789211,-2.95954 1.282469,-1.97303 1.479771,0.98652 1.775726,0.98651 0.493257,-0.98651 0.493257,-1.97303 0.493257,-0.98651 -0.09865,-1.97303 0.591908,0 0.493258,-0.98652 -0.493258,0 -1.183817,0 -2.268983,-3.94605 0.493258,-0.98652 0.394605,-0.98651 -0.394605,-0.98652 -0.197303,-0.98651 0.69056,0 0.887863,-0.98652 -0.394606,-1.97302 -1.183817,-0.98652 z m -13.712548,12.82469 0.493257,2.95954 2.76224,2.95954 0.986514,4.93257 -1.183817,0.98652 -0.591909,0.98651 -0.493257,0.98652 -0.493257,0.98651 -0.591909,0 -0.986514,0 0.394606,-1.97303 0.295954,-1.97303 -2.170331,0.98652 -1.282469,1.97303 -0.789211,0.98651 -0.887863,0 -1.282468,1.97303 -1.973029,1.97303 -1.973029,-1.97303 -1.183817,-2.95954 0.394606,-0.98652 0.986514,-0.98651 0.789212,0 0.394605,0.98651 -0.197302,0.98652 1.282468,0 0.986514,-0.98652 -0.295954,-0.98651 -0.197303,-1.97303 2.268983,-1.97303 2.268983,0 0.295954,-2.95954 -0.69056,-2.95954 -1.085166,0 -0.887862,1.97302 -0.591909,0 -1.578423,-1.97302 -1.775725,-1.97303 -0.493258,-0.98652 -0.295954,-0.98651 0.789212,-0.98652 0.986514,0.98652 1.578423,1.97303 3.354148,0.98651 2.663589,-0.98651 z" stroke="#888888" stroke-width="0.5" id="RU-KDA"></path>\n    <path d="m 100.20028,334.58487 -0.789207,0 -0.69056,0.98652 -4.242012,0.98651 -4.044709,-0.98651 -2.268982,-1.97303 -3.156846,2.95954 -4.14336,-0.98651 -0.69056,0.98651 0,1.97303 0.789212,0 0.591908,0.98651 -1.479771,0 -2.76224,0 -0.295954,0.98652 0.295954,0.98651 -0.789212,1.97303 -0.69056,0.98652 -1.775725,1.97302 -2.564937,0.98652 -3.156846,-1.97303 -3.058194,-2.95954 -1.085166,0 -0.986514,0 -1.775726,0 -1.775725,-0.98652 -2.466286,1.97303 -2.663588,1.97303 1.677074,0.98651 0.887863,0.98652 2.860891,0.98651 2.170331,0.98652 -0.197303,0.98651 -0.591908,0 -0.789211,1.97303 -0.591909,-0.98651 -0.986514,0 -1.775726,-0.98652 -1.578423,0 -0.197303,0.98652 0.394606,0.98651 -1.282468,0.98651 -0.493258,0.98652 3.058195,0.98651 4.439314,1.97303 1.183817,0.98652 0.394606,1.97302 -0.887863,0.98652 -0.69056,0 0.197303,0.98651 0.394605,0.98652 -0.394605,0.98651 -0.493258,0.98652 2.268983,3.94605 1.183817,0 0.493258,0 -0.493258,0.98652 -0.591908,0 0.09865,1.97303 -0.493257,0.98651 1.973029,0.98651 1.677074,1.97303 3.551451,-0.98651 2.663589,-0.98652 4.242011,2.95955 3.058194,6.9056 1.775726,0.98651 1.479771,-0.98651 0.493257,0.98651 0.394606,0 1.085166,-0.98651 0.789211,-1.97303 2.564937,0 2.466286,0 0.197303,-0.98652 0.197303,0 2.762239,-2.95954 1.38112,-2.95954 -2.959542,0 -1.677075,-0.98652 0.591909,-0.98651 -0.591909,-0.98651 -0.69056,-0.98652 -0.887862,0 -0.69056,0 0.493257,-0.98651 0,-0.98652 -0.789212,0 -0.887862,0 0.197302,-0.98651 0.789212,-4.93257 -1.479772,-2.95955 -0.986514,-1.97302 0.493257,-0.98652 0.986515,0 1.183817,-0.98651 1.282468,-0.98652 3.255497,0.98652 3.551452,-1.97303 -0.197303,-2.95954 -0.493257,-1.97303 -0.591909,-0.98652 -0.394606,0 2.762241,-2.95954 2.663588,-1.97303 -0.98651,-4.93257 -0.19731,-3.94606 z" stroke="#888888" stroke-width="0.5" id="RU-ROS"></path>\n    <path d="m 190.56501,337.54442 -1.97303,-2.95955 -0.98651,2.95955 -1.97303,1.97302 -0.98652,0 -0.98651,0 -0.98651,0.98652 0,0 -2.95955,-1.97303 -1.97303,-1.97303 -1.97302,0 -1.97303,-0.98651 -0.98652,0 -1.97303,0.98651 -1.97302,0 -0.98652,0 -1.97303,4.93257 -1.97302,2.95955 0,0.98651 0.98651,1.97303 0,1.97303 0.98651,0.98651 1.97303,0.98652 0,0.98651 0,0.98651 0,0.98652 0.98652,0 0,0.98651 0,1.97303 0,0 0.98651,0.98652 0.98651,3.94605 0.98652,2.95955 7.89211,-0.98652 2.95955,-2.95954 3.94605,-1.97303 0.98652,-0.98651 1.97303,0 1.97302,-1.97303 1.97303,-2.95955 1.97303,-0.98651 1.97303,-0.98651 1.97303,-3.94606 2.95954,-0.98652 -1.97303,-1.97302 -0.98651,0 0,-0.98652 0,-1.97303 -0.98652,-0.98651 -1.97302,-1.97303 -1.97303,0 -1.97303,0.98651 -1.97303,-2.95954 z" stroke="#888888" stroke-width="0.5" id="RU-SAM"></path>\n    <path d="m 204.37621,311.89505 0,0 -1.97303,0.98651 -2.95954,-1.97303 0,0 -0.98652,0 -0.98651,0 -1.97303,0 0,0 0,0.98652 -0.98651,0 0,0 -1.97303,0 -1.97303,0.98651 -0.98651,-0.98651 -0.98652,0 -1.97303,0.98651 -0.98651,0 0,0.98651 0,0 -4.93257,0.98652 0,0.98651 0.98651,0.98652 -0.98651,2.95954 -3.94606,0 -0.98651,-0.98651 -0.98652,0 -0.98651,0.98651 0,1.97303 3.94605,0.98651 0.98652,1.97303 1.97303,1.97303 1.97303,0 2.95954,0 0.98651,1.97303 0,2.95954 1.97303,2.95954 1.97303,2.95955 1.97303,1.97302 1.97303,-0.98651 1.97303,0 1.97302,1.97303 0.98652,1.97303 0,0.98651 0,0.98652 0.98651,0 1.97303,1.97302 1.97303,2.95955 0.98651,0 0,0.98651 0,0 -0.98651,0.98652 0,1.97302 1.97303,1.97303 1.97303,-3.94605 0.98651,-1.97303 0,-0.98652 0,0 0.98652,0 -0.98652,0 1.97303,0 0.98651,-0.98651 0.98652,-1.97303 0,-1.97303 0,-0.98651 0,0 -0.98652,0 0.98652,0 -0.98652,-0.98652 0,0.98652 0,-0.98652 0,0.98652 0.98652,-0.98652 0,-0.98651 0.98651,0.98651 3.94606,-0.98651 3.94606,-1.97303 -0.98652,-1.97303 -1.97303,-1.97303 -0.98651,0 -0.98652,-1.97303 2.95955,0 2.95954,-1.97302 -1.97303,-0.98652 -0.98651,0.98652 0,-1.97303 0,-1.97303 0.98651,0 -1.97303,-0.98651 -1.97303,0.98651 0.98652,0.98651 0,0.98652 -1.97303,0.98651 -0.98651,-0.98651 0,0 -0.98652,0 0,-0.98652 -0.98651,0 -1.97303,0 -1.97303,-1.97302 -0.98651,-0.98652 -0.98652,0 1.97303,-0.98651 0.98652,-0.98652 -0.98652,0 -1.97303,-0.98651 -0.98651,-2.95954 0.98651,0 0,-0.98652 -0.98651,0 0,-1.97303 0.98651,-2.95954 -2.95954,-0.98651 z" stroke="#888888" stroke-width="0.5" id="RU-TA"></path>\n    <path d="m 201.41667,302.0299 0,-0.98651 -1.97303,-0.98652 -0.98652,-0.98651 -0.98651,0 -0.98651,0.98651 -0.98652,-0.98651 -0.98651,-0.98651 -2.95955,0 -0.98651,-1.97303 -0.98651,-0.98652 -0.98652,-0.98651 -2.95954,-1.97303 -2.95954,0 -0.98652,0 -0.98651,0.98651 -0.98652,-0.98651 -0.98651,0 -0.98652,1.97303 0.98652,1.97303 -0.98652,0 -0.98651,1.97303 0.98651,0.98651 -0.98651,1.97303 2.95954,0 0.98652,0.98651 4.93257,0.98652 0.98651,2.95954 0,0.98651 0.98652,0.98652 0,1.97303 0.98651,2.95954 0.98652,0 0.98651,0 1.97303,-0.98651 1.97303,0 0,0 0.98651,0 0,-0.98652 0,0 1.97303,0 0.98651,0 0.98652,0 0,0 2.95954,1.97303 1.97303,-0.98651 0,0 0.98651,-0.98652 0.98652,-0.98651 -0.98652,-0.98652 0,-0.98651 0,-0.98652 0,-1.97302 -0.98651,0 0,0 -0.98651,-0.98652 0.98651,-1.97303 0,-0.98651 -1.97303,0 -0.98651,0.98651 0,0 z" stroke="#888888" stroke-width="0.5" id="RU-ME"></path>\n    <path d="m 180.69987,302.0299 -0.98652,-0.98651 -2.95954,0 -0.98651,0.98651 -1.97303,0.98652 0,0 0,2.95954 0.98651,1.97303 -0.98651,0 -1.97303,0 -1.97303,0.98651 0,0.98652 -0.98651,0 0,0.98651 0.98651,0 -0.98651,3.94606 1.97302,2.95954 2.95955,1.97303 0.98651,-0.98651 0.98652,0 0.98651,0.98651 3.94606,0 0.98651,-2.95954 -0.98651,-0.98652 0,-0.98651 4.93257,-0.98652 0,0 0,-0.98651 0.98651,0 1.97303,0 -0.98651,-2.95954 0,-1.97303 -0.98652,-0.98652 0,-0.98651 -0.98651,-2.95954 -4.93257,-0.98652 z" stroke="#888888" stroke-width="0.5" id="RU-CU"></path>\n    <path d="m 185.63244,275.39402 -1.97303,1.97303 -3.94606,0 -3.94605,-1.97303 0,0.98651 -0.98652,0 -1.97303,0.98652 -0.98651,1.97303 -1.97303,0.98651 -1.97303,-0.98651 -1.97303,-0.98652 -1.97302,1.97303 -0.98652,0.98651 -0.98651,-0.98651 -0.98652,0 0,1.97303 -0.98651,0.98651 0,0.98652 0.98651,0 -1.97303,0 -0.98651,0 0,0 -2.95954,0 -2.95955,0.98651 -2.95954,1.97303 -3.94606,0.98651 0,0.98652 0,0.98651 -0.98651,0 0,0.98652 0.98651,0 1.97303,0.98651 0,1.97303 -0.98651,0.98651 1.97303,1.97303 0.98651,0.98652 1.97303,0 1.97303,0.98651 1.97303,6.9056 1.97303,3.94606 1.97302,-0.98652 1.97303,-0.98651 0,0.98651 0.98652,0 1.97303,-0.98651 2.95954,-0.98652 0.98651,0.98652 -0.98651,0.98651 0.98651,0.98652 0.98652,0 0.98651,0 0,-0.98652 1.97303,-0.98651 1.97303,0 0.98651,0 -0.98651,-1.97303 0,-2.95954 0,0 1.97303,-0.98652 0.98651,-0.98651 0.98651,-1.97303 -0.98651,-0.98651 0.98651,-1.97303 0.98652,0 -0.98652,-1.97303 0.98652,-1.97303 0.98651,0 0.98652,0.98651 0.98651,-0.98651 0.98652,-0.98651 2.95954,0.98651 2.95954,1.97303 0.98652,-0.98652 0.98651,-0.98651 0.98651,-1.97303 0.98652,-0.98651 3.94606,1.97303 1.97302,-0.98652 1.97303,-0.98651 0,0 0.98652,-0.98652 -2.95955,-3.94605 -2.95954,-3.94606 -3.94606,-0.98651 -0.98651,0 -0.98651,0 0,-1.97303 -2.95955,-2.95955 -0.98651,0.98652 z" stroke="#888888" stroke-width="0.5" id="RU-NIZ"></path>\n    <path d="m 151.10444,269.47493 -1.97303,-0.98651 -1.97303,0 0.98652,-3.94606 -0.98652,-2.95954 0,0 -3.94605,0.98651 -2.95955,-2.95954 0,-1.97303 0,-0.98651 -2.95954,4.93257 -1.97303,5.91908 0.98652,0.98652 0.98651,1.97303 0,0 0.98651,0.98651 1.97303,1.97303 -1.97303,5.91909 2.95955,3.94605 3.94605,4.93257 3.94606,-0.98651 1.97303,-1.97303 3.94606,0 2.95954,0 0,-0.98651 0.98651,0 1.97303,0 -0.98651,0 0,-0.98652 0.98651,-0.98651 0,-1.97303 -1.97303,-0.98651 -1.97302,-0.98652 0,-0.98651 0,-0.98652 0,-0.98651 -0.98652,0 -2.95954,-2.95954 -0.98652,-1.97303 -0.98651,-0.98652 z" stroke="#888888" stroke-width="0.5" id="RU-VLA"></path>\n    <path d="m 123.53125 244.78125 L 122.53125 245.75 L 121.5625 245.75 L 119.5 246.75 L 116.71875 247.71875 L 115.0625 251.6875 L 111.3125 255.625 L 112.78125 256.59375 L 113.875 256.59375 L 114.75 258.59375 L 115.75 260.5625 L 118.78125 261.53125 L 119.78125 266.46875 L 118.78125 267.46875 L 118 269.4375 L 120.09375 272.40625 L 121.5625 272.40625 L 121.5625 273.375 L 121.5625 275.34375 L 121.5625 276.34375 L 122.53125 277.3125 L 121.5625 277.3125 L 120.09375 279.28125 L 120.1875 281.28125 L 121.5625 281.28125 L 123.53125 280.28125 L 124.53125 279.28125 L 125.5 280.28125 L 126.5 280.28125 L 128.46875 279.28125 L 131.4375 279.28125 L 132.40625 279.28125 L 133.40625 279.28125 L 134.375 279.28125 L 134.375 278.3125 L 136.34375 279.28125 L 138.34375 279.28125 L 140.3125 273.375 L 138.34375 271.40625 L 137.34375 270.40625 L 136.34375 268.4375 L 135.375 267.46875 L 137.34375 261.53125 L 140.3125 256.59375 L 141.28125 255.625 L 140.3125 253.65625 L 139.3125 251.6875 L 138.34375 251.6875 L 136.34375 251.6875 L 134.375 250.6875 L 133.40625 251.6875 L 132.40625 251.6875 L 131.4375 250.6875 L 128.46875 249.6875 L 125.5 248.71875 L 124.53125 246.75 L 123.53125 244.78125 z M 129.53125 257.9375 L 130.25 259.28125 C 130.60544 259.56445 130.68688 259.7857 131.4375 259.6875 L 131.125 260.65625 L 131.90625 263.125 L 131.5 264.75 L 129 264.96875 L 127.375 263.875 L 125.75 264.75 L 124.96875 263.46875 L 124.34375 264.875 L 122.03125 265 L 120.96875 263.65625 L 119.53125 264.71875 L 119.0625 262.375 L 120.75 261.84375 L 121.28125 259.75 L 123.0625 261.71875 L 124.375 260.46875 L 127.125 261.6875 L 127.5 259.6875 L 128.6875 259.0625 L 129.53125 257.9375 z" stroke="#888888" stroke-width="0.5"  id="RU-MOS"></path>\n    <path d="m 115.68858,260.5963 -0.98652,-1.97302 -0.88786,-1.97303 -1.08516,0 -1.47978,-0.98652 -7.59618,1.97303 -0.98651,-0.98651 -0.88786,-0.98652 -0.88787,0.98652 -1.67707,0 -1.479772,-2.95955 -2.07168,-0.98651 -0.887863,0.98651 -0.69056,0.98652 -1.578423,0 -1.677074,0.98651 0.591909,4.93257 0.986514,3.94606 -1.578423,1.97303 -0.986514,0.98651 2.268983,3.94606 3.946057,0.98652 3.946056,0.98651 0.69056,-0.98651 0.49326,-0.98652 1.67707,-0.98651 1.97304,0 0.39461,-0.98652 0.29595,0 2.26898,0.98652 2.36765,0.98651 0.49326,0 0.78921,0.98652 1.08516,-0.98652 0.29596,-0.98651 1.57842,0 0.98651,0 1.38112,-0.98652 1.18382,-0.98651 0.78921,-0.98652 0.98652,-1.97302 -0.98652,-3.94606 -3.05819,-1.97303 z" stroke="#888888" stroke-width="0.5" id="RU-KLU"></path>\n    <path d="m 90.039187,309.92202 1.578423,-0.98652 0.197302,-1.97303 -0.887862,-1.97302 -0.887863,-0.98652 -5.919086,-2.95954 -4.636617,-1.97303 -1.085165,-1.97303 -0.887863,-0.98651 -0.69056,0 -0.591909,0 -2.268983,0 -1.874377,-1.97303 -3.551451,5.91908 1.282469,0.98652 1.973028,1.97303 0.493257,1.97303 0.69056,1.97302 0.09865,0.98652 3.255497,0.98651 3.156845,1.97303 -0.09865,0 -0.295954,0 -0.69056,3.94606 0,2.95954 1.282468,0.98652 1.282469,-0.98652 1.183817,3.94606 2.367634,3.94606 0.69056,-0.98652 0.887863,-0.98651 0.986514,-1.97303 1.479771,-2.95954 0.986515,0 0.986514,-0.98652 -0.197303,-1.97303 0,-2.95954 1.38112,0 0.986514,-1.97303 -1.38112,0 -1.282468,-1.97303 z" stroke="#888888" stroke-width="0.5"  id="RU-BEL"></path>\n    <path d="m 666.06488,401.66784 -2.95954,-0.98651 -1.97303,1.97303 1.97303,1.97303 -0.98652,0.98651 -0.98651,0 0,1.97303 0,0.98651 -0.98651,0 0,0.98652 0.98651,6.9056 0.98651,0 0.98652,0 0,2.95954 0,2.95954 -0.98652,0 -0.98651,-0.98651 -1.97303,1.97303 -0.98651,0.98651 -1.97303,-0.98651 -0.98652,0 -1.97302,0 -0.98652,0 -1.97303,0.98651 0,1.97303 -0.98651,0.98651 0,0 0.98651,0 0,0 0,0 0.98652,0.98652 0.98651,0.98651 0,1.97303 -0.98651,0.98651 0,0 0.98651,0 0.98652,1.97303 0,0 0,0.98652 0,0 0.98651,1.97303 -0.98651,0.98651 0,0 0.98651,2.95954 2.95954,1.97303 4.93257,3.94606 0,7.89211 -1.97302,0 -2.95955,0.98652 -0.98651,0 -1.97303,0.98651 -4.93257,4.93257 -5.91909,4.93257 -0.98651,0.98652 -0.98652,0.98651 1.97303,3.94606 1.97303,5.91908 -4.93257,3.94606 -5.91909,0.98652 -0.98651,0.98651 -1.97303,1.97303 -0.98651,-0.98652 -0.98652,0 -0.98651,1.97303 -0.98651,1.97303 -1.97303,0.98652 -2.95955,0.98651 -0.98651,1.97303 -1.97303,1.97303 -0.98651,0.98651 -1.97303,-0.98651 -2.95954,0 -2.95955,1.97303 -1.97303,1.97302 -0.98651,0 -1.97303,-0.98651 -3.94606,0 -0.98651,1.97303 0.98651,2.95954 0,0 0,0.98652 -1.97302,0.98651 -1.97303,1.97303 2.95954,1.97303 1.97303,1.97303 -1.97303,0.98651 -1.97303,0 -1.97303,2.95954 0,3.94606 1.97303,1.97303 3.94606,3.94605 6.9056,0.98652 6.9056,0.98651 0.98651,0 0.98652,-0.98651 0.98651,0.98651 1.97303,0 1.97303,-0.98651 2.95954,-1.97303 6.9056,-1.97303 6.9056,-1.97303 1.97303,-3.94605 6.9056,-5.91909 4.93257,0.98652 3.94606,1.97302 3.94605,0 5.91909,-0.98651 4.93257,2.95954 6.9056,0.98652 1.97303,-2.95955 2.95954,-2.95954 2.95954,-1.97303 1.97303,-1.97303 0,-0.98651 0,-0.98651 0,0 -0.98651,0 0,-0.98652 1.97303,-7.89211 1.97303,-8.87863 2.95954,-3.94606 1.97303,-3.94606 -0.98652,-0.98651 -0.98651,-0.98651 0,-1.97303 -0.98652,-0.98652 -2.95954,0.98652 -0.98651,-2.95955 0.98651,-1.97302 2.95954,-2.95955 0,-0.98651 0.98652,-0.98651 3.94606,-1.97303 4.93257,-2.95955 -1.97303,-2.95954 -2.95954,-2.95954 0,0 0.98651,-1.97303 0,-0.98651 0,-0.98652 0,-0.98651 0.98651,-0.98652 0.98652,-0.98651 -2.95954,-1.97303 -0.98652,0 -0.98651,-0.98651 1.97303,-4.93258 -1.97303,-4.93257 -1.97303,0.98652 -0.98652,0 -0.98651,-2.95955 -1.97303,-2.95954 -2.95954,0.98652 -1.97303,0.98651 0,0.98651 -0.98651,0 -1.97303,-1.97302 0,-1.97303 0.98651,0 0.98652,-0.98652 -1.97303,-0.98651 -1.97303,-0.98652 -0.98652,-0.98651 0,-1.97303 -0.98651,0 -0.98651,0 0.98651,-3.94605 -2.95954,-3.94606 -0.98652,-3.94606 -0.98651,0 -0.98651,0.98652 0,0 -1.97303,-3.94606 0,-1.97303 0,-3.94606 -3.94606,0.98652 -1.97303,-0.98652 z" stroke="#888888" stroke-width="0.5" id="RU-ZAB"></path>\n    <path d="m 857.44865,494.40018 -2.95955,0 -1.97302,-0.98651 0,-1.97303 0.98651,-1.97303 -0.98651,-1.97303 -1.97303,-1.97303 -0.98652,-0.98651 0,0 -2.95954,1.97303 -2.95954,2.95954 0,0 -0.98652,0 -0.98651,0 0,0.98652 0.98651,0.98651 0.98652,0.98651 0,0.98652 0.98651,0.98651 1.97303,0 1.97303,0 -1.97303,5.91909 -3.94606,1.97303 0,1.97303 0,1.97302 -3.94605,2.95955 -4.93258,1.97303 -0.98651,-0.98652 -0.98651,-0.98651 -0.98652,0.98651 -0.98651,0.98652 0,-0.98652 0,-0.98651 -0.98652,-0.98652 -0.98651,0.98652 -0.98652,-0.98652 -0.98651,0 -1.97303,2.95955 -0.98651,2.95954 0,1.97303 -1.97303,1.97302 0,4.93258 0,5.91908 -0.98652,1.97303 0.98652,1.97303 -0.98652,0.98651 -0.98651,1.97303 0.98651,2.95954 -1.97302,1.97303 -7.89212,0 -2.95954,0.98652 -0.98651,3.94605 -1.97303,0.98652 -0.98652,0.98651 0.98652,1.97303 0.98651,1.97303 2.95954,5.91909 0.98652,5.91908 0.98651,0.98651 0,0.98652 -0.98651,6.9056 -2.95954,0.98651 -0.98652,1.97303 0.98652,0 0.98651,0.98652 0.98651,1.97302 0.98652,1.97303 0.98651,-1.97303 0,-0.98651 -0.98651,-0.98651 -0.98652,-0.98652 3.94606,0 0,0 0.98652,0 0,-0.98651 0,-0.98652 0.98651,-3.94605 1.97303,-2.95955 -0.98652,-0.98651 0.98652,-0.98652 0.98651,0 0,0.98652 0,1.97303 0.98652,-0.98652 0.98651,-0.98651 0.98651,-0.98652 0,-0.98651 0.98652,2.95954 0,1.97303 0.98651,0 0,-0.98651 0.98652,0 0.98651,0.98651 0.98652,-0.98651 0,0 1.97302,0.98651 0.98652,0.98652 0,0 0,-1.97303 0.98651,0.98651 0,0 1.97303,-0.98651 1.97303,-1.97303 5.91909,-5.91909 3.94605,-6.9056 0.98652,-0.98651 0,-1.97303 0.98651,0 0,-0.98651 0,-2.95955 0.98652,-2.95954 0,-1.97303 1.97302,-1.97303 0.98652,-4.93257 1.97303,-5.91908 1.97303,-5.91909 1.97302,-4.93257 0.98652,-4.93257 0.98651,-5.91909 0,-1.97302 0,-2.95955 0.98652,-3.94605 0,-2.95955 z" stroke="#888888" stroke-width="0.5" id="RU-PRI" style=""></path>\n    <path d="m 982.79501,296.8355 2.61054,-0.87262 2.32698,1.45437 5.09028,-0.58175 -1.74524,-1.74524 -2.18155,0.7272 -3.34503,-1.16351 0.4363,-1.45436 -2.76329,1.89067 z m 13.13337,-5.29078 2.5664,0.0551 0.8705,-0.56693 2.62002,-0.23297 -0.2181,-0.50903 -6.10842,0.58175 z m -45.74739,-26.01584 -1.97303,0 0,0.98651 0,1.97303 0,3.94606 0,3.94605 0,0.98652 0.98651,0 0,-0.98652 0,-1.97303 0.98652,-1.97302 0,-0.98652 0,-0.98651 0.98651,-0.98652 0.98652,-1.97303 z m 3.94605,-62.1504 -0.98651,0.98651 0,0.98652 0,1.97302 -0.98651,0 -0.98652,0 -0.98651,0.98652 -0.98652,0.98651 -2.95954,-0.98651 -3.94606,-0.98652 -3.94605,0 -3.94606,0.98652 -0.98652,-5.91909 -0.98651,-4.93257 -2.95954,0 -1.97303,0 -0.98652,-0.98651 -1.97302,0 -2.95955,0.98651 -2.95954,0.98652 0,-0.98652 -0.98651,0 -1.97303,0 -1.97303,0.98652 0,0 -0.98652,0.98651 -1.97302,1.97303 -1.97303,0.98651 -0.98652,0 -3.94605,0.98652 0,0.98651 -0.98652,0.98652 -0.98651,0 -0.98652,0 -1.97302,0.98651 -0.98652,0.98651 -1.97303,0.98652 0.98652,2.95954 0.98651,0.98652 1.97303,3.94605 0,1.97303 0,1.97303 1.97303,2.95954 2.95954,2.95955 0,1.97302 0.98652,1.97303 0,0.98652 0.98651,1.97303 1.97303,1.97302 3.94605,1.97303 0.98652,2.95954 -0.98652,0.98652 0.98652,0.98651 0.98651,0 0,1.97303 0,0.98652 0.98652,0.98651 0.98651,1.97303 0.98652,0 0.98651,-0.98652 0,-0.98651 0.98651,0.98651 1.97303,0 0,-2.95954 -2.95954,0 -1.97303,-3.94606 0,-1.97302 -0.98651,-0.98652 -0.98652,-2.95954 2.95955,-1.97303 0.98651,-2.95954 2.95954,0 0.98652,0 0.98651,0 -1.97303,1.97303 -0.98651,3.94605 1.97303,2.95955 1.97303,2.95954 0,1.97303 0.98651,1.97303 0.98651,0 0.98652,0 0.98651,2.95954 0,1.97303 0.98652,0.98651 0.98651,0.98652 -0.98651,1.97302 -1.97303,1.97303 0,0 0,0 0,1.97303 0,0.98652 -0.98652,0.98651 -0.98651,1.97303 0,2.95954 0.98651,0.98652 -0.98651,5.91908 0,4.93257 -0.98651,0.98652 0,0.98651 -0.98652,3.94606 0,3.94605 0.98652,0.98652 0.98651,0.98651 0,0.98652 -0.98651,0.98651 0,2.95954 0,2.95955 -0.98652,3.94605 -0.98651,3.94606 -0.98652,1.97303 -0.98651,0.98651 0,0.98652 0,1.97303 -1.97303,0.98651 -1.97303,0.98652 1.97303,0.98651 1.97303,2.95954 0,5.91909 -0.98652,4.93257 1.97303,5.91908 2.95955,5.91909 13.8112,18.74377 17.75725,17.75726 2.95954,4.93257 3.94606,3.94606 2.95954,1.97302 0,0 0.98652,-4.93257 0,-4.93257 0.98651,-0.98651 0.98652,-2.95954 -0.98652,-8.87863 -1.97303,-1.97303 -0.98651,0 0,-0.98652 0,-0.98651 -0.98651,-1.97303 -0.98652,0 -0.98651,-0.98651 0.98651,-0.98652 1.97303,0.98652 0,0 2.95954,-6.9056 1.97303,-0.98652 0.98652,0 0,-0.98651 -4.93258,-3.94606 -1.97302,-5.91908 0,-4.93258 2.95954,-4.93257 0.98651,0 0.98652,0.98652 1.97303,-3.94606 0,-2.95954 -2.95955,-1.97303 -2.95954,-1.97303 -2.95954,-6.9056 0.98651,-6.9056 0,-0.98651 -0.98651,-0.98652 0.98651,-1.97303 0.98652,0.98652 0,2.95954 1.97302,0 0.98652,-2.95954 -4.93257,-3.94606 0,-0.98651 -0.98652,0.98651 -0.98651,0.98652 -2.95954,-2.95955 -1.97303,-2.95954 0,-2.95954 -0.98652,-2.95955 -1.97302,0 -1.97303,0 -0.98652,0 -0.98651,0.98652 0.98651,0.98651 -1.97303,0.98652 -1.97302,-0.98652 -2.95955,-8.87862 0,-4.93258 0,-0.98651 -0.98651,-0.98651 0,0 0.98651,0 0,-0.98652 0,0 -0.98651,0 0,-0.98651 0,-0.98652 0,-0.98651 -0.98652,-0.98652 -0.98651,0 -0.98651,-4.93257 1.97302,-3.94605 0.98652,-0.98652 -0.98652,-0.98651 2.95955,0 1.97303,0.98651 0.98651,-2.95954 -1.97303,-0.98652 0,-0.98651 1.97303,-3.94606 0.98651,-3.94605 0.98652,0.98651 3.94606,5.91909 0,-2.95955 0,-3.94605 0.98651,-4.93258 2.95954,-5.91908 3.94606,-1.97303 4.93257,-1.97303 3.94606,1.97303 2.95954,0 -0.98651,-2.95954 -1.97303,-2.95954 0.98651,-1.97303 0.98652,-2.95955 0,-1.97302 0,-1.97303 0,-0.98652 0.98651,-0.98651 -0.98651,-1.97303 -0.98652,0 0.98652,-0.98651 0.98651,0 -0.98651,-0.98652 -0.98652,-0.98651 0.98652,0 0.98651,-2.95955 -0.98651,-0.98651 -0.98652,0 0.98652,-0.98651 0.98651,-0.98652 0,-2.95954 -0.98651,0 0,-0.98652 0,-0.98651 0.98651,0 0.98651,-1.97303 0,-1.97303 0.98652,-0.98651 -0.98652,-0.98652 0,-0.98651 -1.97302,0 -1.97303,0.98651 -1.97303,-1.97302 -0.98652,-0.98652 -9.86514,11.83817 z" stroke="#888888" stroke-width="0.5" id="RU-KAM"></path>\n    <path d="m 872.24636,215.21665 0,0 -0.98651,0 -1.97303,0.98651 -0.98652,0 -1.97303,0 -0.98651,-3.94605 0,0 -1.97303,-0.98652 -2.95954,0 0,0 0,1.97303 -1.97303,0.98651 -0.98651,2.95955 -0.98652,1.97303 -0.98651,0 -1.97303,-0.98652 -0.98651,0.98652 -0.98652,0.98651 -2.95954,0.98651 -3.94606,0.98652 0,0.98651 0,0.98652 -0.98651,0 -0.98652,0 -0.98651,0 0,1.97303 0.98651,1.97302 -0.98651,1.97303 -0.98652,1.97303 0,2.95954 1.97303,0.98652 -1.97303,2.95954 0,4.93257 1.97303,1.97303 1.97303,0.98651 -0.98651,1.97303 0,0.98652 0.98651,0 0,0.98651 0,0.98652 -1.97303,0 -0.98651,2.95954 -0.98652,1.97303 -0.98651,0.98651 -1.97303,0.98652 0,0.98651 -0.98651,1.97303 -2.95955,-0.98652 -3.94605,-1.97302 -0.98652,1.97302 -1.97303,1.97303 -1.97302,0 -1.97303,0.98652 1.97303,2.95954 -0.98652,2.95954 -0.98651,0.98652 -0.98652,-0.98652 -0.98651,0.98652 -0.98652,0.98651 -1.97302,0.98652 -1.97303,0 0,0 -0.98652,2.95954 -0.98651,3.94606 0.98651,8.87862 1.97303,1.97303 2.95954,1.97303 0,0.98651 -0.98651,1.97303 0.98651,0.98652 0,1.97303 -0.98651,1.97302 0,3.94606 4.93257,-0.98651 3.94606,-0.98652 5.91908,3.94606 2.95955,5.91909 -0.98652,0 0,0.98651 0,1.97303 0.98652,0.98651 -2.95955,0.98652 0,4.93257 2.95955,0 3.94605,0 3.94606,1.97303 2.95954,2.95954 0,1.97303 0,0.98651 2.95955,-0.98651 0.98651,0 0,0 1.97303,-1.97303 1.97303,-1.97303 1.97303,0 2.95954,-0.98651 0,0 -0.98651,-0.98652 -0.98652,0 0,0 0,-1.97303 0.98652,0 0,-0.98651 0,-2.95954 2.95954,-0.98652 2.95954,-0.98651 2.95954,0 0.98652,0 0,0 -0.98652,0 0,0.98651 0.98652,0 0.98651,0 0,-1.97303 2.95954,-1.97302 1.97303,0.98651 1.97303,0.98651 1.97303,-0.98651 0.98651,0 0,0.98651 -0.98651,0 -1.97303,1.97303 -1.97303,0.98652 0.98652,2.95954 0.98651,0 1.97303,-0.98651 1.97303,-2.95955 0.98651,-0.98651 1.97303,0 1.97303,-0.98652 0,0 0,-0.98651 0,-1.97303 0.98651,-1.97303 0,0 2.95955,-0.98651 1.97303,0 0.98651,-0.98652 0,-1.97302 1.97303,0 0.98651,0 -0.98651,-0.98652 0.98651,0 0.98652,-0.98651 0,0 -0.98652,-1.97303 -1.97303,-0.98652 -1.97302,0.98652 -0.98652,0.98651 0,0.98652 -0.98651,0.98651 -0.98652,0 0,-0.98651 0,-0.98652 0,-1.97303 -0.98651,0 -0.98652,-0.98651 0,-0.98651 0.98652,-0.98652 -0.98652,0 0,-0.98651 0,-0.98652 0,-0.98651 0,-0.98652 0,-1.97302 1.97303,-3.94606 0.98652,-4.93257 -0.98652,-0.98652 0,-0.98651 0,-2.95954 0.98652,-1.97303 0,0 -0.98652,-1.97303 -0.98651,-1.97303 1.97303,-3.94606 0.98651,-2.95954 1.97303,0 0.98651,-0.98651 3.94606,-5.91909 2.95954,0 1.97303,0.98652 0.98652,-2.95955 0,-1.97303 1.97303,1.97303 0.98651,1.97303 0,1.97303 0,1.97303 0.98651,0.98651 0.98652,0.98652 0,0.98651 0.98651,0.98652 0.98652,-0.98652 0.98651,-0.98651 0.98651,1.97303 0.98652,2.95954 1.97303,-9.86514 1.97303,-10.85166 -0.98652,0 -0.98651,-1.97303 -0.98652,-0.98651 0,-0.98652 0,-1.97303 -0.98651,0 -0.98652,-0.98651 0,-0.98652 0,-2.95954 -3.94605,-1.97303 -2.95954,-1.97302 0,-1.97303 0,-0.98652 -0.98652,-1.97303 0,-1.97302 -2.95954,-2.95955 -1.97303,-2.95954 0,-1.97303 0,-1.97303 -1.97303,-3.94605 -1.97303,-0.98652 -1.97303,0.98652 -1.97302,2.95954 -0.98652,0 0,0 -0.98651,0 0,0 -2.95955,0 -3.94605,-0.98652 -2.95955,1.97303 -2.95954,0 -1.97303,-0.98651 -0.98651,0 -1.97303,0 z" stroke="#888888" stroke-width="0.5" id="RU-MAG"></path>\n    <path d="m 605.88751,176.74259 -0.98651,0 -0.98652,0 0,0.98652 0,1.97303 -0.98651,0 0,0 0.98651,1.97302 2.95955,1.97303 1.97302,-0.98651 0.98652,-1.97303 -3.94606,-3.94606 z m 102.59748,-12.82468 -1.97302,-2.95955 -2.95955,-0.98651 1.97303,1.97303 2.95954,1.97303 z m -9.86514,-22.68983 0,-3.94606 -0.98651,-0.98651 -1.97303,0.98651 1.97303,2.95955 0,1.97302 0.98651,-0.98651 z m 24.66286,9.86514 0.98651,3.94606 0.98652,0.98651 1.97302,0 0,-3.94605 -3.94605,-0.98652 z m 16.77074,11.83817 1.97303,-3.94605 0,-0.98652 -0.98652,-0.98651 -4.93257,-2.95955 -4.93257,0 -1.97303,2.95955 0,3.94605 -0.98651,1.97303 -0.98652,0.98652 -0.98651,0.98651 1.97303,0 1.97303,-0.98651 1.97303,-0.98652 2.95954,0 4.93257,-0.98651 z m -6.9056,-37.48754 0.98651,-0.98651 -4.93257,-0.98652 -3.94605,-0.98651 -0.98652,0.98651 -1.97303,0.98652 -3.94605,-1.97303 -2.95955,-0.98652 0,0.98652 0.98652,0.98651 0,0 -0.98652,0 0,0 -0.98651,0.98652 0,0.98651 0.98651,1.97303 0,0.98651 0.98652,0.98652 0,0 -2.95954,-0.98652 -2.95955,-0.98651 -1.97303,-0.98651 -0.98651,0 -0.98651,-0.98652 0,-0.98651 -0.98652,0.98651 -0.98651,1.97303 -0.98652,1.97303 -0.98651,0.98651 -0.98652,0.98652 0.98652,0.98651 0,0.98652 0,1.97302 -0.98652,1.97303 0.98652,0 0.98651,0.98652 0,1.97303 0.98652,1.97302 1.97303,1.97303 2.95954,0.98652 0.98651,1.97302 0.98652,0.98652 3.94605,0 0.98652,0 0,-2.95954 0,-2.95955 0.98651,0.98652 0.98652,0.98651 0.98651,-0.98651 0.98652,-0.98652 3.94605,-2.95954 0.98652,0 1.97302,0 0.98652,0 0,0 0.98651,-0.98651 0.98652,-0.98652 0.98651,-0.98651 -1.97303,-0.98652 -1.97303,0 -3.94605,-2.95954 -1.97303,-3.94606 2.95954,-2.95954 0,0 0,0.98652 5.91909,7.89211 2.95954,-3.94606 -0.98651,-3.94605 0.98651,-0.98652 z m 23.67634,-5.91908 0,0 -0.98651,0.98651 -2.95954,-0.98651 -2.95955,0.98651 0,0.98651 -0.98651,0.98652 -1.97303,-0.98652 0,-0.98651 -2.95954,0 -1.97303,0.98651 0,1.97303 -0.98652,0.98652 -1.97302,-1.97303 0,-0.98652 -0.98652,1.97303 0.98652,3.94606 3.94605,0.98651 4.93257,0.98652 5.91909,-1.97303 3.94606,-3.94606 0,-1.97303 -0.98652,-1.97302 z m 65.10994,35.51451 -15.78422,9.86514 -4.93258,5.91909 -3.94605,1.97303 -3.94606,-1.97303 -3.94606,-1.97303 -1.97303,0 -0.98651,0 -1.97303,0 -3.94606,-0.98652 0,0.98652 -0.98651,0.98651 -1.97303,0 -0.98651,-0.98651 0.98651,-1.97303 1.97303,-0.98651 -1.97303,-1.97303 -2.95954,-1.97303 -3.94606,0.98651 -2.95954,0.98652 -3.94606,7.89211 -3.94605,6.9056 -0.98652,0 0,-1.97303 0,0 -0.98651,-0.98651 1.97303,-0.98652 0.98651,-0.98651 -0.98651,-0.98651 0,-1.97303 1.97302,-0.98652 0.98652,-1.97303 -1.97303,0.98652 -4.93257,2.95954 -0.98652,0.98652 -0.98651,0.98651 -0.98651,-1.97303 2.95954,-2.95954 0.98651,0 2.95955,-1.97303 2.95954,-0.98651 0,0 -10.85166,0.98651 -10.85166,3.94606 -4.93257,0 -1.97303,0.98651 0.98652,0.98652 1.97303,0.98651 -0.98652,2.95954 -2.95954,0.98652 -1.97303,4.93257 0.98652,0.98651 1.97302,-0.98651 0,0.98651 0,0.98652 0.98652,0.98651 0.98651,1.97303 0,1.97303 1.97303,0.98651 0,1.97303 -1.97303,0 0,0.98651 0,0.98652 -0.98651,-0.98652 -0.98652,-0.98651 -0.98651,0 -0.98651,0.98651 -0.98652,0 -0.98651,0 0,0 0,2.95955 0,2.95954 -3.94606,-1.97303 -6.9056,-0.98651 -2.95954,3.94605 -3.94606,2.95955 -3.94606,-0.98652 -2.95954,-1.97303 -0.98651,-1.97302 1.97303,-0.98652 0,0 -1.97303,-0.98651 -0.98652,8.87863 -0.98651,10.85165 -0.98652,0.98652 -0.98651,-0.98652 -0.98651,-0.98651 0,0 0,0.98651 -0.98652,0 -0.98651,0 -0.98652,-0.98651 0,-0.98652 -0.98651,0 -1.97303,0 -1.97303,-2.95954 -1.97303,-2.95954 -0.98651,0 -0.98652,-0.98652 0.98652,-0.98651 0.98651,-0.98651 -0.98651,-1.97303 -1.97303,-0.98652 0,0 0.98651,0.98652 0,0.98651 -0.98651,0.98652 -1.97303,-1.97303 -0.98651,-1.97303 -4.93257,-2.95954 -1.97303,-0.98652 0.98651,0 1.97303,0 1.97303,1.97303 1.97303,1.97303 2.95954,0 1.97303,-1.97303 -0.98652,-2.95954 -1.97302,-1.97303 0,-1.97303 0,-1.97303 -0.98652,-1.97303 0,-0.98651 -1.97303,-1.97303 -0.98651,0 -0.98652,0 -5.91908,-4.93257 -1.97303,0.98651 -1.97303,0.98652 -0.98651,0 -1.97303,0 -1.97303,0 -2.95954,-1.97303 -3.94606,-0.98651 0,0.98651 -0.98651,0.98651 -1.97303,4.93258 0.98651,3.94605 0,3.94606 -1.97303,-0.98652 -2.95954,0 0,0 0,0.98652 -0.98651,0 -0.98652,0 -1.97303,0.98651 -0.98651,0.98652 -2.95954,-0.98652 -1.97303,-0.98651 -2.95954,0 -2.95955,0 -1.97303,-0.98652 0,-1.97302 1.97303,-1.97303 -0.98651,-0.98652 -0.98652,0 -1.97302,0 -1.97303,0 -2.95954,0 -1.97303,-0.98651 -0.98652,0.98651 -0.98651,0 -1.97303,-0.98651 -1.97303,0 -0.98651,0.98651 -0.98652,0.98652 -1.97303,0.98651 -2.95954,0.98652 0,1.97302 0,0.98652 -1.97303,-1.97303 0.98652,-1.97303 -0.98652,-2.95954 -1.97303,-1.97303 0,0.98652 0,1.97302 -0.98651,0.98652 -2.95954,0 -2.95955,-1.97303 -0.98651,0.98651 -0.98651,2.95955 -1.97303,1.97302 0.98651,0.98652 0.98652,0 0,0.98651 0,0.98652 0,0.98651 0.98651,0.98652 -0.98651,3.94605 0.98651,3.94606 0.98651,0.98651 0,0.98652 0,1.97303 0.98652,0.98651 1.97303,0.98652 1.97303,1.97302 0.98651,3.94606 0,3.94606 1.97303,3.94606 0.98651,2.95954 0,0.98651 -3.94605,2.95955 -3.94606,2.95954 -0.98652,2.95954 0,1.97303 -0.98651,0.98651 -1.97303,0.98652 0,3.94605 -1.97303,2.95955 -1.97303,0 -2.95954,-0.98652 -2.95954,0.98652 -1.97303,1.97303 -1.97303,0 -1.97303,-0.98652 0,0.98652 -0.98651,0 -0.98651,1.97302 0,0.98652 0.98651,3.94606 1.97303,2.95954 0,6.9056 0,6.9056 -0.98652,10.85165 -2.95954,1.97303 -1.97303,1.97303 0.98652,0.98652 0.98651,0.98651 0,3.94606 0,2.95954 0.98652,1.97303 0,1.97303 0,2.95954 0.98651,1.97303 1.97303,1.97303 1.97303,1.97303 -0.98652,1.97302 -0.98651,0.98652 -1.97303,2.95954 0,2.95954 -1.97303,2.95955 1.97303,3.94605 0.98651,0 0.98652,0 0.98651,0.98652 0.98652,0.98651 3.94605,0.98652 3.94606,0 2.95954,0 0.98652,1.97302 0.98651,2.95955 -0.98651,0.98651 -1.97303,2.95954 2.95954,1.97303 3.94606,1.97303 0.98651,6.9056 0,4.93257 1.97303,1.97303 0.98652,2.95954 -0.98652,2.95955 -1.97303,0.98651 0.98652,4.93257 2.95954,2.95955 -1.97303,4.93257 -1.97303,5.91908 0,1.97303 0,0.98651 0,0.98652 -0.98651,0.98651 -0.98652,4.93257 0.98652,3.94606 0.98651,0 0.98652,0 4.93257,-0.98651 0.98651,-1.97303 2.95955,0.98651 0.98651,0 0,-0.98651 0.98651,0 0.98652,0.98651 0.98651,-0.98651 0,0 0.98652,0 1.97303,0 0.98651,-0.98652 1.97303,-1.97302 0,0.98651 1.97303,1.97303 0.98651,0.98651 -0.98651,2.95955 4.93257,-4.93258 3.94605,-5.91908 0.98652,0 0.98651,0 0.98652,-1.97303 0.98651,-2.95954 1.97303,-0.98652 1.97303,0 2.95954,-2.95954 3.94606,0 2.95954,0.98651 1.97303,1.97303 1.97303,0.98652 0,1.97303 0.98651,0.98651 0,0.98651 0,0.98652 4.93257,0 4.93258,0.98651 0.98651,0.98652 0,1.97303 0.98651,1.97302 0,0.98652 0,1.97303 0.98652,1.97303 0.98651,0.98651 0,0.98651 0.98652,1.97303 0,3.94606 0,1.97303 1.97303,3.94606 0,0 0.98651,-0.98652 0.98651,0 0.98652,3.94606 2.95954,3.94606 3.94606,-1.97303 3.94605,-0.98652 1.97303,0.98652 1.97303,0.98651 1.97303,0.98652 2.95954,0 0.98652,0 1.97303,0.98651 0.98651,0.98651 5.91909,0 4.93257,0.98652 1.97303,1.97303 1.97302,1.97302 4.93258,0.98652 2.95954,-0.98652 2.95954,0 1.97303,0.98652 1.97303,0 2.95954,-1.97303 1.97303,-0.98651 1.97303,0 0.98651,0.98651 0.98652,-0.98651 0,-1.97303 0.98651,0 1.97303,0 0.98651,0 0.98652,-0.98652 1.97303,0.98652 2.95954,0.98651 0.98651,-0.98651 0,-0.98652 1.97303,-1.97302 1.97303,-0.98652 0,-0.98651 0.98651,-0.98652 2.95955,0 1.97303,-1.97303 0.98651,-4.93257 0,-3.94605 1.97303,-0.98652 0.98651,-0.98651 0,-1.97303 -0.98651,-1.97303 -1.97303,-0.98651 -0.98651,-0.98652 -0.98652,0 -0.98651,0 0.98651,-1.97303 1.97303,-0.98651 0,-1.97303 0,-0.98651 0.98651,-0.98652 0.98652,-0.98651 -2.95954,-1.97303 -1.97303,-2.95954 0.98651,0 1.97303,0 -0.98651,-3.94606 0.98651,-2.95954 0.98651,-5.91909 0.98652,-1.97303 1.97303,-1.97303 0.98651,0 0.98652,0 4.93257,-1.97302 4.93257,-1.97303 0.98651,-0.98652 0,-0.98651 0,-0.98652 0.98652,-1.97302 0.98651,0 0.98651,0.98651 0.98652,0 1.97303,-0.98651 0,0 4.93257,-2.95955 0.98651,-3.94605 0,-0.98652 0.98652,-0.98651 1.97303,1.97303 0.98651,-0.98652 -0.98651,-2.95954 -0.98652,-1.97303 -1.97303,-3.94606 -0.98651,-4.93257 -1.97303,-2.95954 0.98651,-3.94606 0,-0.98651 0.98652,-0.98652 0,-0.98651 0.98651,-0.98651 0,-0.98652 0,-0.98651 1.97303,-0.98652 0.98652,-0.98651 0,-5.91909 0.98651,-5.91908 3.94606,0 4.93257,1.97303 1.97303,0 0.98651,-0.98652 0.98652,0.98652 0.98651,0.98651 1.97303,-2.95954 1.97303,-1.97303 1.97303,0 0,0.98651 0.98651,-0.98651 0.98651,-0.98652 0.98652,0.98652 1.97303,1.97303 0.98651,-2.95955 0,-2.95954 0,-3.94606 0.98651,-1.97302 0,-1.97303 -0.98651,-0.98652 0.98651,-1.97303 0,-0.98651 -1.97302,-1.97303 -2.95955,-1.97303 -0.98651,-8.87862 0.98651,-3.94606 0.98652,-2.95954 0,0 1.97303,0 1.97302,-0.98652 0.98652,-0.98651 0.98651,-0.98652 0.98652,0.98652 0.98651,-0.98652 0.98652,-2.95954 -1.97303,-2.95954 1.97303,-0.98652 1.97302,0 1.97303,-1.97303 0.98652,-1.97302 3.94605,1.97302 2.95955,0.98652 0.98651,-1.97303 0,-0.98651 1.97303,-0.98652 0.98651,-0.98651 0.98652,-1.97303 1.97303,-2.95954 0.98651,0 0,-0.98652 0,-0.98651 -0.98651,0 0,-0.98652 0.98651,-1.97303 -0.98651,-0.98651 -2.95955,-1.97303 0,-4.93257 1.97303,-2.95954 -1.97303,-0.98652 0,-2.95954 0.98652,-1.97303 0.98651,-1.97303 -0.98651,-1.97302 0,-1.97303 0.98651,0 0.98652,0 0.98651,0 0,-0.98652 0,-0.98651 3.94606,-0.98652 2.95954,-0.98651 0.98652,-0.98651 0.98651,-0.98652 1.97303,0.98652 0.98651,0 0.98652,-1.97303 0.98651,-2.95955 1.97303,-0.98651 0,-1.97303 0,0 -1.97303,-2.95954 -1.97303,-3.94606 0.98652,-0.98651 0,-0.98652 -5.91909,-1.97303 -5.91908,-3.94605 0,-1.97303 0.98651,-1.97303 -0.98651,-0.98651 -0.98652,-0.98652 4.93257,-6.9056 6.9056,-7.89211 0.98652,-0.98652 1.97303,-0.98651 -0.98652,-1.97303 -1.97303,-2.95954 0,-0.98652 0,-0.98651 -1.97303,-0.98651 -0.98651,0 -0.98651,-1.97303 0,0 -0.98652,-0.98652 -0.98651,0 -0.98652,-0.98651 -0.98651,-1.97303 0,0 -0.98652,1.97303 0,0.98651 0,0.98652 -0.98651,0 0,-0.98652 -0.98651,0 0,2.95955 0,1.97302 -0.98652,-1.97302 -1.97303,-1.97303 -2.95954,0.98651 -3.94606,0 -0.98651,-2.95954 -1.97303,-3.94606 -10.85166,-2.95954 z m -96.67839,41.4336 1.97302,0.98651 1.97303,-0.98651 0,-0.98652 -0.98651,-0.98651 -1.97303,0.98651 -0.98651,0.98652 z" stroke="#888888" stroke-width="0.5" id="RU-SA" style=""></path>\n    <path d="m 454.95083,186.60774 0.98651,1.97302 2.95955,0 0,-2.95954 0,-2.95954 -3.94606,3.94606 z m 25.64937,-35.51452 m -0.98651,0 m -0.98652,1.97303 0.98652,0 0,0.98651 0.98651,0.98652 0.98652,-3.94606 -0.98652,-0.98651 0,0 0,0.98651 z m 5.91909,-74.284523 0,-0.887863 -0.98652,-0.69056 -2.95954,-1.282468 1.97303,1.578422 0,0.493258 0,0.887862 1.97303,-0.09865 z m 16.77074,-22.591176 -2.95954,-0.789212 -1.97303,0.887863 0.98651,0.986514 0.98652,0 1.97303,0.591909 0.98651,-1.677074 z m 100.62445,87.010559 0.98652,0.98651 0,0.98652 1.97303,0.98651 -0.98652,-2.95954 -0.98651,-0.98652 -0.98652,0.98652 z m -64.12342,-7.89212 1.97303,0 0.98651,0 1.97303,-2.95954 -1.97303,0 -0.98651,0.98652 -0.98652,0.98651 -0.98651,0.98651 z m -0.98652,-49.42436 0.98652,-2.860892 -1.97303,-1.973028 -2.95954,-0.986514 -0.98652,-0.493258 -1.97303,1.183817 0,2.564938 1.97303,0.789211 0.98652,0.789211 0,1.183817 0,0.789212 3.94605,-0.986514 z m 21.70332,1.479771 -2.95955,-5.228526 -2.95954,2.170332 -1.97303,3.255497 -0.98651,1.183817 -0.98652,0.591909 0.98652,-1.282469 0.98651,-1.085166 0,-0.197303 0,-0.295954 -0.98651,0.493257 -1.97303,0.789212 0,0 -0.98651,-0.197303 3.94605,-2.268983 0.98652,-3.748754 -2.95955,-1.085166 -3.94605,0.394606 -0.98652,0.197303 0,0.493257 -0.98651,0 -0.98652,0.394606 -1.97302,1.775725 0.98651,1.183817 0,1.183817 -0.98651,0.197303 -0.98652,0.09865 -0.98651,1.183817 -0.98652,1.479771 -0.98651,0.394606 0,0.493257 0,0.986514 0.98651,0.295955 0,-0.789212 0,-0.789211 0.98652,-0.295954 0,0 0,1.381119 0,1.085166 0.98651,-0.09865 0.98652,0.394605 -0.98652,1.874378 0,1.973028 0.98652,0.591909 0,0.591908 0,0.789212 0,0.789211 0.98651,1.085166 0.98651,0 0.98652,-0.986515 0,0.986515 0,0.98651 0.98651,0 1.97303,0 1.97303,1.97303 1.97303,1.97303 3.94606,0.98652 3.94605,-2.95955 -0.98651,-1.97303 0,-1.973025 -0.98652,-1.874377 0,-0.09865 0.98652,-0.09865 0.98651,-4.636617 0.98652,-4.735268 z m 21.70331,27.227789 -0.98651,0 0,0.98652 -0.98652,0.98651 0.98652,0 0.98651,-1.97303 z m 0.98652,3.94606 1.97302,0 0.98652,-0.98651 -0.98652,-0.98652 -0.98651,0 -0.98651,0 -0.98652,0.98652 0,0.98651 0.98652,0 z m -16.77075,-20.223541 0,-0.986514 0,-1.38112 -0.98651,0.394606 -0.98652,0.986514 -0.98651,2.466286 0,1.973029 0,0 0.98651,0.98651 -0.98651,0 0,0 -0.98651,0.98652 0,0 0,0.98651 0,0.98652 0,0.98651 -0.98652,0 0,-0.98651 -0.98651,1.97302 -0.98652,1.97303 0,2.95955 -1.97303,2.95954 -0.98651,2.95954 1.97303,1.97303 2.95954,-1.97303 1.97303,-1.97303 3.94606,0 5.91908,-1.97303 2.95955,-0.98651 0.98651,-2.95954 0,-2.95955 -0.98651,-1.97302 -0.98652,0 0,0.98651 -0.98651,0 0,-1.97303 0,0 0,-0.98651 -0.98652,-0.98652 -0.98651,-0.98651 0,-0.98652 0,-0.986509 -1.97303,1.973029 -1.97303,2.95954 0,0.98652 -0.98651,0 0,-0.98652 2.95954,-8.188066 -1.97303,-1.085166 -0.98651,-0.09865 0,1.775726 -0.98652,1.183817 z m 41.4336,51.792001 0,0.98651 -0.98651,-1.97303 0,-1.97303 -0.98652,-0.98651 -1.97303,0 -1.97302,-2.95954 -1.97303,-2.95954 -0.98652,0.98651 0,0 -0.98651,-0.98651 -0.98652,0 0,0.98651 -0.98651,0 -0.98651,0 -0.98652,0 -1.97303,0 -1.97303,0.98651 -0.98651,-0.98651 -0.98651,0 -0.98652,0.98651 -1.97303,3.94606 -2.95954,0 1.97303,-4.93257 0,-3.94606 -2.95954,0 -2.95955,0 0.98652,-0.98651 0,-0.98652 -2.95954,0.98652 -1.97303,-0.98652 1.97303,-0.98651 1.97302,-1.97303 0.98652,-0.98651 0.98651,0 0.98652,-0.98652 -1.97303,-1.97303 -2.95954,-0.98651 -0.98652,-0.98651 0,-0.98652 -1.97303,0 -1.97303,0.98652 -0.98651,0 0,0 -5.91909,6.9056 -3.94605,6.9056 0.98651,0.98651 0,2.95954 -5.91908,1.97303 -0.98652,-0.98651 -1.97303,0 0,0.98651 1.97303,2.95954 0.98652,1.97303 -1.97303,0 -0.98652,-1.97303 -1.97303,0.98652 -0.98651,0 0,0.98651 -0.98651,0.98652 0,0 -0.98652,0 0,0 0,0.98651 -1.97303,0 -0.98651,0 -0.98652,0.98651 -1.97302,0 0.98651,0 0,-0.98651 -0.98651,-0.98651 -1.97303,0.98651 -0.98652,0.98651 0.98652,-1.97302 0.98651,-0.98652 -5.91908,-1.97303 -5.91909,0.98652 -0.98651,0.98651 1.97303,0.98652 1.97302,0 0,0.98651 -1.97302,0.98651 -1.97303,0 -3.94606,0.98652 -2.95954,0.98651 -1.97303,0 -2.95954,0 -0.98652,0 -1.97303,0.98652 0,0 -3.94605,1.97303 -1.97303,1.97302 -2.95955,0 -2.95954,0 0.98652,0.98652 1.97302,0.98651 -0.98651,0.98652 -1.97303,0.98651 -0.98651,1.97303 0,1.97303 -1.97303,-1.97303 -2.95954,-0.98651 0,0.98651 2.95954,2.95954 1.97303,1.97303 -0.98652,0.98652 0,0 -0.98651,-0.98652 -0.98652,-0.98651 -0.98651,0.98651 0,0 -0.98651,0 -0.98652,0 1.97303,1.97303 2.95954,2.95954 0,0 0,0 -0.98651,0.98652 0,0 0,3.94605 0,1.97303 -0.98652,0 -1.97302,0.98652 -0.98652,0 0.98652,-0.98652 0.98651,-0.98651 0.98651,-0.98652 0,-0.98651 -3.94605,-0.98651 -2.95954,0.98651 -4.93258,0 -5.91908,-0.98651 -5.91909,-0.98652 -0.98651,0 -0.98652,0 -0.98651,0 -1.97303,-0.98651 0,0.98651 -0.98651,1.97303 -0.98652,0.98651 0.98652,0.98652 0,0.98651 0,0 -0.98652,0 0,1.97303 0.98652,0.98652 -0.98652,2.95954 -0.98651,1.97303 0,0.98651 0,0 0,0.98651 -0.98652,0.98652 2.95955,2.95954 2.95954,1.97303 0,2.95954 0,2.95955 2.95954,1.97302 0.98652,3.94606 -1.97303,2.95954 -1.97303,2.95955 0.98651,1.97303 -0.98651,8.87862 -1.97303,0.98652 -1.97303,0.98651 2.95955,6.9056 0.98651,3.94606 -0.98651,0 0,-0.98652 -1.97303,-0.98651 -0.98652,-0.98651 0,-1.97303 0,-1.97303 -0.98651,-1.97303 -0.98652,-0.98651 3.94606,-9.86515 -0.98651,-1.97302 -1.97303,-0.98652 0.98651,-0.98651 0,-0.98652 0,0 0,-0.98651 2.95955,-1.97303 2.95954,-3.94606 -2.95954,-1.97303 -4.93258,-0.98651 -0.98651,-2.95954 -0.98651,-2.95955 -2.95955,-3.94605 -2.95954,-2.95955 -1.97303,0 -0.98651,0 0.98651,1.97303 0.98652,1.97303 1.97302,1.97303 1.97303,1.97303 0,2.95954 -1.97303,1.97303 -0.98651,0.98651 0,-0.98651 -1.97303,0 0,1.97303 0,1.97303 1.97303,1.97303 1.97303,1.97302 0,4.93258 -0.98652,4.93257 -1.97302,0 -1.97303,-0.98652 -1.97303,1.97303 -3.94606,2.95954 -0.98651,0 0,0.98652 0,0 -1.97303,0.98651 0,0.98652 0,1.97303 0.98651,1.97302 0.98652,2.95955 0,0 2.95954,1.97302 1.97303,1.97303 0,0.98652 0.98651,0 1.97303,-0.98652 1.97303,-1.97303 0.98651,0.98652 0,0.98651 0.98652,0.98652 0.98651,0.98651 -0.98651,5.91909 -0.98652,5.91908 -1.97302,4.93257 -3.94606,1.97303 0,0.98652 0,0.98651 0,0 0,0 0,0 0,1.97303 0.98651,1.97303 0,-0.98652 0,0 0,0.98652 0,0 -1.97303,1.97303 0,0.98651 0.98652,1.97303 0.98651,1.97303 0.98652,4.93257 -0.98652,3.94606 0,6.9056 0.98652,2.95954 2.95954,0.98651 0,0.98652 0,0.98651 0,0 0,1.97303 0,1.97303 0,0.98651 -0.98651,1.97303 -0.98652,0 0.98652,2.95954 1.97302,0 0.98652,1.97303 1.97303,0.98652 1.97303,-0.98652 0.98651,2.95955 -0.98651,5.91908 -3.94606,5.91909 -1.97303,0 -0.98651,0.98651 0,1.97303 0.98651,0.98651 1.97303,0.98652 -0.98652,1.97303 -0.98651,0.98651 0,0.98651 -0.98651,1.97303 -2.95955,3.94606 -4.93257,3.94606 0.98652,6.9056 3.94605,1.97303 1.97303,1.97302 -6.9056,3.94606 -7.89211,1.97303 0,7.89211 0,4.93258 4.93257,1.97302 2.95954,-0.98651 3.94606,0.98651 2.95954,0.98652 1.97303,0.98651 0,0.98652 0.98651,0.98651 0.98652,0 1.97303,1.97303 0,2.95954 0.98651,1.97303 2.95954,0.98651 1.97303,2.95955 -1.97303,0.98651 -1.97302,1.97303 -1.97303,2.95954 0,2.95955 3.94605,3.94605 2.95955,4.93257 -0.98652,0.98652 -0.98651,0 0,1.97303 -0.98652,0.98651 -0.98651,0 -0.98651,0 -1.97303,3.94606 -0.98652,1.97303 0,0.98651 0,0.98652 0.98652,0.98651 -0.98652,0 -0.98651,1.97303 0.98651,0.98651 0.98652,0.98652 0.98651,8.87862 0,0.98652 -2.95954,0.98651 -2.95954,2.95955 2.95954,2.95954 2.95954,2.95954 2.95954,0 1.97303,-0.98651 1.97303,1.97303 2.95954,0.98651 0.98652,5.91909 1.97303,5.91908 -1.97303,4.93257 0.98651,0.98652 0,0 0,0.98651 0.98652,0.98652 0.98651,0.98651 0,0.98651 -1.97303,1.97303 -1.97303,0.98652 0,0.98651 -1.97302,3.94606 0,0 -1.97303,0 -0.98652,0.98651 -1.97303,1.97303 -0.98651,2.95954 1.97303,0.98652 0.98651,1.97303 5.91909,1.97302 6.9056,0.98652 6.9056,-3.94606 4.93257,-6.9056 1.97303,-0.98651 1.97303,-0.98652 0.98651,-2.95954 0.98651,-1.97303 1.97303,0 0.98652,0 0.98651,-0.98651 0.98652,0 0,0.98651 0.98651,0 0.98651,0 0.98652,-0.98651 2.95954,0.98651 4.93257,-1.97303 -1.97303,-2.95954 -1.97302,-2.95954 -1.97303,-0.98652 -0.98652,-0.98651 0,-0.98651 0,-0.98652 2.95955,-1.97303 2.95954,-0.98651 0.98651,0 0.98652,-2.95954 0,-2.95955 0,-1.97303 0.98651,-0.98651 0.98652,-0.98651 0,-1.97303 0,-2.95955 3.94605,-3.94605 2.95955,-1.97303 0.98651,0 0.98651,-0.98652 -0.98651,-0.98651 0,-2.95954 0,-1.97303 -0.98651,-1.97303 -1.97303,-0.98651 1.97303,-4.93257 2.95954,-4.93258 2.95954,0.98652 2.95954,0 1.97303,0.98651 3.94606,0 0.98651,-3.94605 0.98652,-0.98652 0.98651,0 0.98652,0 0,0.98652 1.97302,6.9056 3.94606,1.97302 0,-1.97302 0,-0.98652 0,-0.98651 0,-0.98652 -0.98651,0 3.94605,-7.89211 7.89212,-4.93257 0,-0.98652 0.98651,-1.97303 2.95955,-1.97302 1.97302,0 0.98652,0.98651 0,0.98651 0,1.97303 1.97303,0.98652 1.97303,0 -0.98652,0.98651 0,0.98652 1.97303,0 0.98651,0.98651 0.98652,0.98651 0.98651,0 1.97303,-2.95954 0,-0.98651 1.97303,-1.97303 0.98651,-2.95954 -1.97302,-2.95955 -1.97303,-1.97303 0.98651,-0.98651 0.98652,-0.98651 0,-0.98652 0.98651,0 0.98651,0 0.98652,0 0,-0.98651 0,-0.98652 0,-0.98651 0,-0.98652 -1.97303,-1.97302 -2.95954,-0.98652 -1.97303,-7.89211 0.98651,-4.93257 0,-0.98652 0,0 1.97303,-0.98651 0.98652,-0.98652 4.93257,-3.94605 3.94605,-4.93257 0,-1.97303 -0.98651,-0.98652 0.98651,-1.97303 0.98652,-0.98651 -0.98652,-2.95954 -0.98651,-2.95955 0.98651,-3.94605 2.95955,-4.93257 -0.98652,-0.98652 0,0 1.97303,-0.98651 0.98651,0.98651 0.98652,0.98652 0,0 0.98651,-0.98652 0.98652,-0.98651 1.97303,-0.98652 0.98651,0 0,-3.94605 -3.94606,0 -3.94605,-0.98652 -0.98652,-0.98651 -0.98651,-0.98652 -0.98652,0 -0.98651,0 -1.97303,-3.94605 1.97303,-2.95955 0,-2.95954 1.97303,-2.95954 0.98651,-0.98652 0.98652,-1.97302 -1.97303,-1.97303 -1.97303,-1.97303 -0.98651,-1.97303 0,-2.95954 0,-1.97303 -0.98652,-1.97303 0,-3.94606 0,-2.95954 -0.98651,-0.98651 -0.98652,-0.98652 1.97303,-1.97303 2.95954,-1.97303 0.98652,-10.85165 0,-6.9056 0,-6.9056 -1.97303,-2.95954 -0.98651,-3.94606 0,-0.98652 0.98651,-1.97302 0.98651,0 0,-0.98652 1.97303,0.98652 1.97303,0 1.97303,-1.97303 2.95954,-0.98652 2.95954,0.98652 1.97303,0 1.97303,-2.95955 0,-3.94605 1.97303,-0.98652 0.98651,-0.98651 0,-1.97303 0.98652,-2.95954 3.94606,-2.95954 3.94605,-2.95955 0,-0.98651 -0.98651,-2.95954 -1.97303,-3.94606 0,-3.94606 -0.98651,-3.94606 -1.97303,-1.97302 -1.97303,-0.98652 -0.98652,-0.98651 0,-1.97303 0,-0.98652 -0.98651,-0.98651 -0.98651,-3.94606 0.98651,-3.94605 -0.98651,-0.98652 0,-0.98651 0,-0.98652 0,-0.98651 -0.98652,0 -0.98651,-0.98652 1.97303,-1.97302 0.98651,-2.95955 0.98651,-0.98651 0,-1.97303 0.98652,-0.98651 -1.97303,0.98651 -0.98651,0.98652 -1.97303,-0.98652 -2.95955,1.97303 0,0.98651 0,1.97303 1.97303,0 2.95955,-0.98651 0,0.98651 -0.98652,0.98652 -0.98651,0 -1.97303,2.95954 -1.97303,0.98651 -0.98651,-0.98651 0,0 -0.98652,1.97303 -1.97303,0.98651 0,0 0,0 0,1.97303 0,0.98651 -1.97303,-0.98651 -0.98651,-0.98651 0,0.98651 -0.98651,0 -2.95955,0 -2.95954,0 -0.98651,2.95954 -2.95955,2.95955 -0.98651,0 0.98651,-1.97303 1.97303,-1.97303 0,-1.97303 0.98652,-1.97303 2.95954,-0.98651 0.98651,-2.95955 -0.98651,-0.98651 -1.97303,-0.98651 -0.98651,0 0,0 0,0 5.91908,0.98651 3.94606,-3.94606 0.98651,0 0.98652,-1.97302 0.98651,-1.97303 1.97303,-1.97303 1.97303,-1.97303 0.98651,-2.95954 5.91909,-3.94606 0,-0.98651 0.98651,-0.98652 1.97303,-2.95954 2.95954,-2.95954 0.98652,-4.93258 -1.97303,-0.98651 -0.98651,-1.97303 0,0.98652 -0.98652,0.98651 0,0 0,0 0,-2.95954 0.98652,0 1.97302,0.98651 0,0.98652 0,0.98651 0.98652,-1.97303 0,-4.93257 -0.98652,0 -0.98651,0 0,-2.95954 -1.97303,-1.97303 0,1.97303 z m -72.01554,-75.073737 -0.98651,0.197303 -0.98652,0.591908 0.98652,0.394606 0.98651,0.295954 0.98652,0.887863 0.98651,0.986514 -0.98651,0.09865 -0.98652,-0.09865 0,0.295955 0,0.394605 0.98652,0.197303 0.98651,0.09865 0.98651,1.085165 0.98652,0.591909 1.97303,-0.69056 0.98651,-0.887863 7.89211,-0.986514 0.98652,-0.493257 0,-2.466286 0,-2.860891 1.97303,-1.183818 0.98651,-1.183817 0,-1.085165 -0.98651,-1.085166 0,-0.197303 -0.98652,-0.493257 -1.97303,-4.636617 -0.98651,-3.650103 -1.97303,-0.09865 0,1.38112 -4.93257,2.76224 -3.94606,3.156845 0,1.677075 0.98652,0.394605 0,0.887863 -0.98652,0.986514 0,1.085166 -0.98651,1.085166 -0.98651,0.493257 -0.98652,0.493257 0,0.789211 0.98652,0.69056 0,0.295955 -0.98652,0 z m -1.97303,-16.57344 -0.98651,1.282469 0,0.887863 0.98651,0 1.97303,0.887863 1.97303,-2.466286 -3.94606,-0.591909 z m 7.89212,89.674147 -1.97303,-0.98652 0,0 0.98651,1.97303 1.97303,0.98652 0,-0.98652 0,-0.98651 -0.98651,0 z" stroke="#888888" stroke-width="0.5" id="RU-KYA" style=""></path>\n    <path d="m 208.32227,371.0859 0.98651,-2.95954 -0.98651,0 -0.98652,-0.98652 0,-0.98651 0,0 -0.98651,-0.98651 -0.98652,-0.98652 0,-2.95954 0,-2.95954 0.98652,-1.97303 0,-0.98652 -1.97303,-1.97303 0,-1.97302 0.98651,-0.98652 0,0 0,-0.98651 -0.98651,0 -1.97303,-2.95955 -2.95954,1.97303 -1.97303,2.95955 -1.97303,0.98651 -1.97303,0.98651 -1.97303,2.95955 -1.97302,1.97303 -1.97303,0 -0.98652,0.98651 -3.94605,1.97303 -2.95955,2.95954 -7.89211,0.98652 0,0.98651 1.97303,2.95954 0,1.97303 0,0 2.95954,1.97303 4.93257,0 0,1.97303 0,2.95954 2.95954,0.98651 1.97303,1.97303 0.98652,1.97303 0,1.97303 0.98651,3.94606 0.98652,3.94605 -0.98652,0.98652 0,1.97303 1.97303,-0.98652 0.98651,-1.97303 0.98652,0.98652 0.98651,0 0,0.98651 0,1.97303 1.97303,1.97303 0.98652,1.97303 1.97302,0 0.98652,0 0.98651,-0.98652 0.98652,-0.98651 3.94605,0.98651 3.94606,1.97303 0.98652,1.97303 0,0.98652 1.97302,0 1.97303,-0.98652 0.98652,0.98652 0.98651,0.98651 0.98651,0 0.98652,0 0.98651,2.95954 -0.98651,1.97303 4.93257,6.9056 2.95954,0 1.97303,-1.97303 0.98652,1.97303 0,0.98652 6.9056,2.95954 5.91908,-4.93257 -2.95954,-4.93257 -2.95954,-3.94606 0.98651,0 0,-0.98652 -0.98651,-1.97302 0,-1.97303 -0.98652,0 1.97303,-2.95955 1.97303,-0.98651 -2.95954,-2.95954 -2.95955,-0.98652 -0.98651,0.98652 -0.98652,0 0,-0.98652 0,-0.98651 -0.98651,-0.98652 -0.98651,1.97303 -1.97303,0 -2.95955,3.94606 -3.94605,-0.98651 0,-0.98652 -1.97303,-0.98651 -1.97303,0 -1.97303,0 -0.98651,-0.98652 -0.98652,-1.97303 -0.98651,0 1.97303,-4.93257 -0.98652,-0.98651 -0.98651,-0.98652 1.97303,-1.97302 1.97303,-2.95955 -2.95955,-1.97303 -1.97302,2.95955 -0.98652,0 -0.98651,-3.94606 -0.98652,-2.95954 0.98652,0.98651 0.98651,0 0,-1.97303 -0.98651,-0.98651 0,-2.95954 z" stroke="#888888" stroke-width="0.5" id="RU-ORE"></path>\n    <path d="m 146.17187,335.57139 -0.98652,-0.98652 -1.97302,-0.98651 -2.95955,-1.97303 0,-0.98651 -0.98651,-0.98652 -0.98652,-0.98651 -1.97302,0 -0.98652,-0.98652 -0.98651,-1.97302 -2.95955,-0.98652 -1.97302,-2.95954 -3.94606,1.97303 -5.72178,1.97303 0.1973,2.95954 -1.38112,3.94605 0.59191,3.94606 2.36763,1.97303 2.95954,0 0,0.98651 0.98652,0.98652 0,0 1.97303,0 0,0.98651 0,0.98652 0.98651,0 0.98652,0.98651 0.98651,2.95954 -1.97303,2.95955 -1.97303,0.98651 0,0 0.98652,0.98652 0.98651,0 0,0.98651 0.98652,0.98651 0,0 0.98651,-0.98651 0,0 0.98651,0 0.98652,0.98651 0,1.97303 1.97303,0.98652 1.97303,0 0.98651,2.95954 1.97303,3.94606 0,0.98651 2.95954,4.93257 0,5.91909 4.93257,-1.97303 0.98652,-2.95954 0.98651,-2.95955 0.98652,0 0,0.98652 0.98651,0.98651 1.97303,0 2.95954,0 0.98652,-0.98651 0.98651,-1.97303 7.89211,1.97303 1.97303,-0.98652 1.97303,-0.98651 0.98651,0.98651 0,0 0.98652,0 0,-0.98651 0,-0.98651 -0.98652,-3.94606 -0.98651,-2.95954 -0.98651,-0.98652 0,0 0,-1.97303 0,-0.98651 0,-0.98652 -0.98652,0 0,-0.98651 0,-0.98651 -1.97303,-0.98652 -0.98651,-0.98651 0,-1.97303 -0.98651,-2.95954 0,0 0,-0.98652 -0.98652,-0.98651 -5.91908,-0.98652 -2.95955,-3.94605 -0.98651,-0.98652 -1.97303,-0.98651 -1.97303,0 -2.95954,0.98651 0,-1.97303 z" stroke="#888888" stroke-width="0.5" id="RU-SAR"></path>\n    <path d="m 124.46855,339.51744 0,-0.98651 -2.95954,0 -2.36763,-1.97303 -0.59191,-3.94606 -2.17033,-0.98651 -2.56494,-0.98651 -1.08516,-0.98652 -0.88787,-1.97303 -1.28247,0 -1.47978,0.98652 -2.36763,-0.98652 -2.46629,0 -0.0987,1.97303 0.29596,1.97303 -2.07169,1.97303 -2.17034,0.98651 0.19731,3.94606 0.98651,4.93257 -2.663587,1.97303 -2.762241,2.95954 0.394606,0 0.591909,0.98652 0.493257,1.97303 0.197303,2.95954 -3.551452,1.97303 -3.255497,-0.98652 -1.282468,0.98652 -1.183817,0.98651 -0.986515,0 -0.493257,0.98652 0.986514,1.97302 1.479772,2.95955 -0.789212,3.94605 -0.197302,1.97303 0.887862,0 0.789212,0 0,0.98652 -0.493257,0.98651 0.69056,0 0.887862,0 0.69056,0.98652 0.591909,0.98651 4.83392,-1.97303 3.650099,1.97303 1.28247,-1.97303 0.69056,-1.97303 1.47978,0.98652 0,1.97303 1.38112,0 1.57843,0 1.67707,-0.98652 1.28248,0 0.78921,0.98652 0.1973,0 0.19731,-0.98652 1.08516,0.98652 1.28247,0 3.15685,0 2.95954,0.98651 0.59191,1.97303 0.98651,1.97303 1.97303,-0.98652 0.98651,-0.98651 1.97303,0 0.98652,0 0,-1.97303 0.98651,-2.95954 3.94606,-2.95955 4.93257,-0.98651 0.98651,-0.98651 0.98652,-0.98652 0,-0.98651 -1.97303,-3.94606 -0.98651,-2.95954 -1.97303,0 -1.97303,-0.98652 0,-1.97303 -0.98652,-0.98651 -0.98651,0 0,0 -0.98651,0.98651 0,0 -0.98652,-0.98651 0,-0.98651 -0.98651,0 -0.98652,-0.98652 0,0 1.97303,-0.98651 1.97303,-2.95955 -0.98651,-2.95954 -0.98652,-0.98651 -0.98651,0 0,-0.98652 0,-0.98651 -1.97303,0 0,0 -0.98652,-0.98652 z" stroke="#888888" stroke-width="0.5"  id="RU-VGG"></path>\n    <path d="m 102.56792,304.00293 0,-0.98651 -2.36764,-0.98652 -2.762236,-0.98651 0,0 0.197303,0.98651 -0.591909,0.98652 0,0.98651 -0.295954,0 -1.183817,0 -1.282469,-0.98651 -1.085166,1.97303 -1.38112,1.97302 -0.197302,1.97303 -1.578423,0.98652 1.282468,0.98651 1.38112,0 -0.986514,1.97303 -1.38112,0 0,2.95954 0.197303,1.97303 -0.986514,0.98652 -0.986515,0 -1.479771,2.95954 -0.986514,2.95954 -0.789212,0 -0.789211,0.98652 1.085166,5.91908 1.775725,0.98651 0.789212,0.98652 2.268982,1.97303 4.044709,0.98651 4.242012,-0.98651 0.69056,-0.98652 0.789207,0 2.17034,-0.98651 2.07169,-1.97303 -0.29596,-1.97303 0.0987,-1.97303 2.46629,0 2.36763,0.98652 1.47978,-0.98652 1.28247,0 0.88787,1.97303 1.08516,0.98652 2.56494,0.98651 2.17033,0.98651 1.38112,-3.94605 -0.1973,-2.95954 -1.28247,-0.98652 0.1973,-0.98651 -0.78921,0 -0.69056,0 -0.98651,-1.97303 -1.08517,-1.97303 -2.07168,-0.98651 -1.77573,-0.98652 0.29596,-0.98651 0.49326,-1.97303 -0.98652,-0.98652 -0.78921,-0.98651 -2.6636,-2.95954 -2.46628,-1.97303 0.29595,-0.98652 -0.88786,-1.97302 -1.18383,0 -0.88786,-0.98652 0.0987,0 z" stroke="#888888" stroke-width="0.5"  id="RU-VOR"></path>\n    <path d="m 113.22229,241.85253 -3.74876,-0.98651 -5.22853,-0.98652 -3.84741,-4.93257 -4.143363,-4.93257 -1.38112,-1.97303 -2.07168,0 -1.282469,0.98652 -2.170331,1.97303 -2.959543,2.95954 -1.874377,0 -0.09865,1.97303 0.197303,0.98651 0.295955,0 0.09865,0.98652 -0.887863,0 -0.986514,0.98651 -0.887863,1.97303 -0.394606,2.95954 0.394606,1.97303 -0.09865,0.98651 -0.986515,0.98652 -1.183817,0.98651 0.591909,0.98652 1.085166,0.98651 0.295954,2.95954 -0.986514,0.98652 0.197302,1.97303 -0.394605,0.98651 0.394605,0 0.69056,0 1.085166,0 0.986514,-0.98651 3.4528,0 3.4528,-0.98652 1.677074,-0.98651 1.578423,0 0.69056,-0.98652 0.887863,-0.98651 2.07168,0.98651 1.479772,2.95955 1.677068,0 0.88787,-0.98652 0.88786,0.98652 0.98651,0.98651 7.59618,-1.97303 3.74876,-3.94605 1.67707,-3.94606 -1.28247,-0.98652 -1.47977,-1.97302 -0.3946,-0.98652 -0.29596,-1.97303 z" stroke="#888888" stroke-width="0.5" id="RU-SMO"></path>\n    <path d="m 133.34718,222.12225 -2.95954,-1.97303 -0.98651,0.98651 -0.98652,0.98652 -2.95954,0.98651 -2.95954,0.98652 -0.98652,0 -0.98651,-0.98652 -0.88786,-0.98651 -5.42583,-0.98652 -5.52449,-1.97302 -1.38112,-0.98652 -1.28247,-1.97303 -1.57842,0.98652 -1.38113,0.98651 0.0987,0 0.49325,0.98652 -0.88786,0.98651 -0.88786,0.98651 0,1.97303 -0.59191,1.97303 -2.564937,1.97303 -2.466286,2.95954 4.143363,4.93257 3.84741,4.93257 5.22853,0.98652 3.74876,0.98651 0.29596,1.97303 0.3946,0.98652 1.47977,1.97302 1.38112,0.98652 2.66359,-0.98652 2.07168,-0.98651 0.98652,0 0.98651,-0.98651 0.98651,1.97302 0.98652,1.97303 2.95954,0.98652 2.95954,0.98651 0.98652,0.98652 0.98651,-0.98652 0.98652,-0.98651 1.97303,0.98651 1.97302,0.98652 0.98652,0 0.98651,1.97302 0,1.97303 2.95955,-3.94605 2.95954,-0.98652 -0.98652,-1.97303 0,-0.98651 0,-2.95954 0.98652,-1.97303 0,-0.98652 0.98651,-0.98651 0.98652,-0.98652 1.97303,0 0,-0.98651 -0.98652,-0.98651 1.97303,-0.98652 1.97303,0 0.98651,-5.91908 0,0 -3.94605,-0.98652 -2.95955,-0.98651 -1.97303,0 -0.98651,-0.98652 -0.98651,-0.98651 -1.97303,-0.98651 -0.98652,0 -0.98651,0.98651 -1.97303,-0.98651 -0.98651,-0.98652 -0.98652,0 0,0 -1.97303,-2.95954 z" stroke="#888888" stroke-width="0.5" id="RU-TVE"></path>\n    <path d="m 263.56706,284.27265 -1.97302,-1.97303 -1.97303,-1.97303 -1.97303,0 -1.97303,-0.98651 -0.98651,-0.98652 0.98651,-1.97303 -1.97303,-1.97303 -0.98651,0 -0.98652,0 -5.91908,-1.97302 -1.97303,4.93257 0.98651,2.95954 -1.97302,0.98651 3.94605,4.93257 3.94606,1.97303 -2.95954,3.94606 -4.93257,2.95954 0,2.95955 1.97302,1.97302 -0.98651,0.98652 -0.98651,2.95954 -1.97303,0.98652 -0.98652,1.97302 -2.95954,8.87863 -3.94606,8.87863 -0.98651,0.98652 -0.98652,-0.98652 0,0.98652 -0.98651,0.98651 -0.98651,0 -0.98652,0.98651 0,4.93257 0.98652,-0.98651 0.98651,0 0.98651,2.95954 0.98652,1.97303 2.95954,0.98652 2.95954,0 0,0.98651 0.98652,0.98651 0.98651,0.98652 0.98652,0 0.98651,2.95954 0,0.98652 1.97303,0 1.97303,0 1.97303,-1.97303 0.98651,-2.95955 0,0 0,-0.98651 1.97303,0 4.93257,-0.98651 1.97303,-2.95955 1.97303,-1.97303 1.97303,1.97303 2.95954,0 0,-1.97303 0.98651,-2.95954 4.93257,-0.98651 2.95955,-2.95954 0,0 0,-0.98652 0,-2.95954 1.97303,-2.95954 -1.97303,-4.93258 2.95954,-2.95954 1.97303,-0.98651 1.97303,-0.98652 4.93257,-4.93257 4.93257,-4.93257 0,-0.98651 0,-0.98652 1.97303,-3.94606 2.95954,-2.95954 -9.86514,-1.97303 -5.91909,-4.93257 -2.95954,0 -1.97303,0.98652 0,0 -0.98651,0 -0.98652,-0.98652 -0.98651,0.98652 -1.97303,0 0,-0.98652 -0.98651,0 -2.95955,0 -1.97303,0.98652 z" stroke="#888888" stroke-width="0.5" id="RU-PER"></path>\n    <path d="m 383.9218,307.94899 -1.97302,-1.97303 -4.93258,0 -4.93257,-0.98651 0,-2.95955 0,-3.94605 -1.97303,-0.98652 -0.98651,-2.95954 0,-2.95954 0.98651,-0.98652 0.98652,-1.97303 -1.97303,-1.97303 -0.98651,0 -0.98652,-0.98651 0,-0.98651 -1.97303,0 -0.98651,0.98651 -0.98652,0 -2.95954,0 -1.97303,0 -1.97303,0.98651 0,0 -2.95954,-2.95954 -1.97303,-2.95954 1.97303,-0.98651 0.98652,-0.98652 -1.97303,-0.98651 -0.98652,-0.98652 -2.95954,-1.97303 -2.95954,-0.98651 -0.98652,0 -0.98651,0.98651 -0.98651,-0.98651 0,-0.98651 -1.97303,0 -1.97303,0.98651 -0.98652,-0.98651 -0.98651,0 -0.98651,0 -0.98652,0 -0.98651,-1.97303 0.98651,-1.97303 -2.95954,-0.98652 -0.98652,-1.97302 0.98652,-1.97303 1.97303,0 0.98651,-2.95955 1.97303,-2.95954 0,-0.98651 -0.98651,-0.98652 0,-2.95954 -0.98652,-2.95954 -1.97303,0.98651 -2.95954,0.98652 0,0.98651 0,0.98651 -1.97303,0 -1.97303,0.98652 -1.97303,0.98651 -0.98651,-1.97303 0,-0.98651 0,0 -1.97303,0 -1.97303,0.98651 -0.98651,0 -0.98652,0.98652 0,0 -1.97302,0.98651 -0.98652,0.98652 -0.98651,5.91908 -3.94606,3.94606 -3.94606,3.94606 -1.97302,3.94605 -1.97303,4.93258 0,0.98651 0.98651,0 -0.98651,1.97303 -1.97303,0 -0.98652,2.95954 -0.98651,1.97303 0,0.98651 0.98651,0.98652 0,0.98651 0,1.97303 2.95955,1.97303 2.95954,1.97303 2.95954,6.9056 0.98652,1.97303 1.97302,2.95954 -1.97302,3.94606 -0.98652,3.94605 -0.98651,1.97303 0,2.95954 0,0 1.97303,0.98652 0,1.97303 -0.98652,3.94605 -0.98651,3.94606 2.95954,1.97303 2.95954,1.97303 0,3.94605 0,4.93258 0,1.97302 0.98652,0.98652 2.95954,0.98651 2.95954,0 0.98652,-1.97303 1.97303,-0.98651 0.98651,0 0,0.98651 2.95954,0 2.95955,0 1.97302,0.98652 0.98652,0 0.98651,-0.98652 0.98652,-0.98651 3.94605,-0.98651 1.97303,-2.95955 0.98652,-0.98651 1.97303,0 0.98651,1.97303 0,0.98651 2.95954,0 0.98652,0 2.95954,0.98652 0.98651,0.98651 0.98652,0.98651 0.98651,0 1.97303,2.95955 0.98651,3.94605 0.98652,0 0.98651,0.98652 -0.98651,0.98651 0,0.98652 1.97303,1.97303 0.98651,0 0,2.95954 -0.98651,1.97303 2.95954,1.97303 2.95954,0.98651 0.98652,0.98651 0.98651,0.98652 2.95954,0 1.97303,1.97303 3.94606,-3.94606 3.94606,-3.94606 2.95954,0 2.95954,0 2.95955,-4.93257 0.98651,-3.94606 0.98651,-0.98651 0.98652,0 0.98651,-1.97303 -0.98651,-1.97303 0,-0.98651 0.98651,0 0.98652,0.98651 3.94605,0.98652 3.94606,0.98651 0.98651,0.98652 0.98652,0.98651 1.97303,-0.98651 0.98651,0 0.98652,0 0,1.97302 1.97302,1.97303 3.94606,0 3.94606,-0.98651 0,1.97303 0.98651,1.97303 1.97303,0 1.97303,0 0.98651,0.98651 1.97303,0.98651 0.98652,-0.98651 0.98651,0 2.95954,-1.97303 1.97303,-0.98651 2.95955,1.97303 1.97302,0.98651 8.87863,-1.97303 5.91909,-3.94606 -0.98652,-1.97302 -3.94605,-1.97303 -0.98652,-6.9056 -1.97303,-3.94606 -1.97302,-1.97303 -1.97303,0 -1.97303,0 -1.97303,-2.95954 -1.97303,-2.95954 -1.97303,0 -1.97303,0 -2.95954,-2.95955 0,-0.98651 -0.98651,-1.97303 0,0 -4.93257,1.97303 -4.93258,1.97303 -1.97302,-0.98652 -1.97303,-0.98651 -3.94606,0 -2.95954,0 -1.97303,-1.97303 -0.98652,-3.94606 -4.93257,-2.95954 -3.94605,-2.95954 -4.93257,-0.98652 -1.97303,-0.98651 -1.97303,-1.97303 -1.97303,-2.95954 z" stroke="#888888" stroke-width="0.5" id="RU-KHM" style=""></path>\n    <path d="m 424.36889,359.24773 -1.97303,-0.98651 -1.97303,0 -0.98651,0 -0.98652,-1.97303 -0.98651,-1.97303 -3.94606,0.98651 -3.94606,0 -1.97302,-1.97303 0,-1.97302 -0.98652,0 -0.98651,0 -1.97303,0.98651 -0.98652,-0.98651 -0.98651,-0.98652 -3.94606,-0.98651 -3.94605,-0.98652 -0.98652,-0.98651 0,0 0,0.98651 0,1.97303 -0.98651,1.97303 -0.98652,0 -0.98651,0.98651 -0.98651,3.94606 -2.95955,4.93257 -1.97303,0 -3.94605,0 -3.94606,3.94606 -3.94606,3.94606 0,0.98651 0,1.97303 -0.98651,0 0,1.97303 0,0.98651 -0.98652,0 0,0.98652 0.98652,0.98651 0,1.97303 0,0.98651 0,0.98652 0.98651,1.97303 0,0.98651 0,0.98651 -0.98651,0.98652 0.98651,1.97303 0.98652,0.98651 1.97303,1.97303 1.97302,0.98651 11.83818,3.94606 -0.98652,0.98652 6.9056,3.94605 4.93257,7.89212 6.9056,0.98651 0.98652,3.94606 5.91908,0 0,0 0.98652,0.98651 0,-0.98651 0.98651,-0.98652 1.97303,0 0.98651,0 0.98652,1.97303 -0.98652,0.98652 0,3.94605 -0.98651,0.98652 -0.98652,0.98651 0.98652,0 0,0.98652 0.98651,0.98651 0,0 1.97303,-0.98651 0.98652,-2.95955 0.98651,0.98652 0.98651,0 1.97303,0 1.97303,0 1.97303,0 1.97303,-0.98652 0.98651,0.98652 0.98652,0 0.98651,-0.98652 1.97303,-1.97302 0.98651,0 0.98652,0.98651 0.98651,-0.98651 0.98652,0 2.95954,0 2.95954,0 0,0 0.98652,-0.98652 1.97302,0.98652 1.97303,0.98651 2.95955,-1.97303 3.94605,0 0.98652,-2.95954 1.97303,-3.94606 0.98651,0 0.98651,0 0.98652,-0.98651 0,-1.97303 0.98651,0 0,-0.98652 -1.97303,-4.93257 -3.94605,-3.94605 0,-2.95955 0.98651,-2.95954 2.95954,-1.97303 1.97303,-0.98651 -1.97303,-2.95955 -2.95954,-0.98651 -0.98651,-1.97303 0,-2.95954 -1.97303,-1.97303 -0.98652,0 -0.98651,-0.98651 0,-0.98652 -1.97303,-0.98651 -3.94606,-0.98652 -2.95954,-0.98651 -3.94605,0.98651 -3.94606,-1.97302 0,-4.93258 0,-7.89211 -2.95954,-0.98651 -2.95955,-1.97303 -1.97303,0.98651 -2.95954,1.97303 -0.98651,0 -0.98652,0.98651 -1.97303,-0.98651 z" stroke="#888888" stroke-width="0.5" id="RU-TOM"></path>\n    <path d="m 597.00888,330.63882 -2.95954,0 0,3.94605 -0.98651,0 -1.97303,0.98652 -0.98652,0.98651 -0.98651,0.98652 0,0 -0.98652,-0.98652 -0.98651,0 -1.97303,0 0,0.98652 0,0 -1.97303,4.93257 -0.98651,4.93257 0.98651,1.97303 0.98652,2.95954 -0.98652,0.98651 -0.98651,1.97303 0.98651,0.98652 0,1.97303 -3.94605,4.93257 -4.93257,4.93257 -1.97303,0 -0.98652,0.98651 0,0.98652 0,0 -0.98651,4.93257 1.97303,7.89211 2.95954,0.98652 1.97303,1.97302 0,0.98652 0,0.98651 0,0.98652 0,0.98651 -0.98652,0 -0.98651,0 -0.98651,0 0,0.98652 -0.98652,0.98651 -0.98651,0.98651 1.97303,1.97303 1.97302,2.95955 -0.98651,2.95954 -1.97303,1.97303 0,0.98651 -1.97303,2.95954 -0.98651,0 -0.98652,-0.98651 -0.98651,-0.98651 -1.97303,0 0,-0.98652 0,-0.98651 -0.98651,0 -1.97303,-0.98652 0,-1.97303 0,-0.98651 -0.98652,-0.98651 -2.95954,0.98651 -1.97303,0.98651 -0.98651,1.97303 0,0.98652 -7.89212,4.93257 -3.94605,7.89211 0,0 0.98651,0.98652 -0.98651,0.98651 0.98651,0.98652 0,1.97302 -3.94606,-1.97302 -1.97302,-5.91909 0,-1.97303 -0.98652,0 -0.98651,0 -0.98652,0.98652 -0.98651,3.94605 -3.94606,0 -1.97303,-0.98651 -2.95954,0 -2.95954,-0.98652 -2.95954,4.93258 -1.97303,4.93257 0.98651,0.98651 1.97303,1.97303 0,1.97303 0,2.95954 0.98651,0.98651 -0.98651,0.98652 -0.98651,0 -2.95955,1.97303 -3.94605,3.94605 -0.98652,2.95955 0.98652,1.97303 -0.98652,0.98651 -0.98651,0.98651 0,1.97303 -0.98652,2.95955 0,2.95954 -0.98651,0 -2.95954,0.98651 -2.95955,1.97303 0,0.98652 0,0.98651 0.98652,0.98651 1.97303,0.98652 1.97302,2.95954 1.97303,2.95954 1.97303,0 4.93257,3.94606 4.93257,3.94606 1.97303,0 1.97303,0 0.98652,0.98651 0,1.97303 0.98651,0.98651 3.94606,-2.95954 3.94605,-3.94606 0.98652,1.97303 0.98651,2.95955 3.94606,2.95954 4.93257,2.95954 0.98651,2.95954 0.98652,1.97303 0.98651,0 0.98652,-0.98651 6.9056,5.91908 0,1.97303 0.98651,1.97303 0.98652,0.98652 1.97302,1.97302 0,1.97303 -0.98651,1.97303 1.97303,0 0.98651,-0.98651 3.94606,0 2.95954,-2.95955 0,-0.98651 -6.9056,-1.97303 2.95955,-0.98651 4.93257,-1.97303 -0.98652,-0.98652 -1.97303,-0.98651 0,-0.98651 -0.98651,-0.98652 0,-0.98651 2.95954,2.95954 3.94606,1.97303 11.83817,-12.82469 14.79771,-21.70331 -0.98651,-7.89211 0.98651,-7.89212 0.98652,-1.97303 0.98651,0 0.98652,0 -0.98652,-1.97303 -1.97303,-0.98651 0,-0.98651 -0.98651,-0.98652 -0.98651,0 -0.98652,-4.93257 1.97303,-1.97303 2.95954,-1.97303 0.98652,0.98652 0.98651,0 0.98652,-1.97303 1.97302,-1.97303 0.98652,0.98651 0,0.98652 0,0 0.98651,0 0.98652,0.98651 2.95954,0 1.97303,0 2.95954,-1.97303 0.98652,-1.97302 0.98651,0.98651 0.98651,0.98651 0.98652,0 1.97303,0 1.97303,0 1.97302,-0.98651 0,1.97303 1.97303,1.97303 1.97303,0 1.97303,-0.98652 3.94606,0.98652 4.93257,-1.97303 4.93257,-5.91909 3.94606,0.98652 0,0.98651 -0.98652,0 0.98652,0.98652 1.97302,0 0.98652,0 1.97303,0.98651 0.98651,-0.98651 1.97303,-1.97303 0.98651,0.98651 0.98652,0 0,-2.95954 0,-2.95954 -0.98652,0 -0.98651,0 -0.98651,-6.9056 0,-0.98652 0.98651,0 0,-0.98651 0,-1.97303 0.98651,0 0.98652,-0.98651 -1.97303,-1.97303 1.97303,-1.97303 2.95954,0.98651 1.97303,0.98652 3.94606,-0.98652 -0.98652,-1.97303 0,-0.98651 -0.98651,-0.98651 -0.98652,-1.97303 0,-1.97303 0,-0.98652 -0.98651,-1.97302 0,-1.97303 -0.98651,-1.97303 -4.93258,0 -4.93257,0 0,-0.98652 0,-0.98651 -0.98651,-0.98651 0,-1.97303 -1.97303,-0.98652 -1.97303,-1.97303 -2.95954,-0.98651 -3.94606,0 -2.95954,1.97303 -1.97303,0.98651 -1.97303,0.98652 -0.98651,2.95954 -0.98652,1.97303 -0.98651,0 -0.98652,0 -3.94605,5.91908 -4.93257,4.93258 0.98651,-2.95955 -1.97303,-0.98651 -0.98651,-1.97303 0,-0.98651 -1.97303,1.97302 -1.97303,0.98652 -0.98651,0 -0.98652,0 -0.98651,0 0,0 -0.98652,0 -0.98651,0 0,0.98651 -0.98651,0 -2.95955,-0.98651 -0.98651,1.97303 -4.93257,0.98651 -0.98652,0 -0.98651,0 -0.98652,-3.94606 0,-4.93257 0.98652,-0.98651 0.98651,-0.98652 0,-1.97302 0,-0.98652 1.97303,-5.91908 1.97303,-4.93257 -2.95954,-2.95955 -0.98652,-4.93257 1.97303,-1.97303 0.98652,-1.97303 -1.97303,-2.95954 -1.97303,-1.97303 0,-4.93257 -0.98652,-6.9056 -2.95954,-2.95954 -3.94606,-0.98652 2.95955,-2.95954 0.98651,-0.98651 -0.98651,-2.95955 -0.98652,-1.97302 z" stroke="#888888" stroke-width="0.5" id="RU-IRK" style=""></path>\n  </svg>\n  <div class="indicator">\n    <img src="" alt="">\n  </div>\n\n  <div class="regs">\n\n  </div>\n'},5199:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.regions=void 0,t.regions=new Array(["RU-MOW","Москва","moscow.gif"],["RU-CHE","Челябинская область","chelyabinskaya_flag.png"],["RU-ORL","Орловская область"],["RU-OMS","Омская область","flag_omskoj_oblasti.png"],["RU-LIP","Липецкая область","lipeckya.jpg"],["RU-KRS","Курская область","flag_of_kursk_oblast.png"],["RU-RYA","Рязанская область","ryazan.png"],["RU-BRY","Брянская область","bryanskaya_flag.png"],["RU-KIR","Кировская область","flag_kirovskoy_oblasti.png"],["RU-ARK","Архангельская область",""],["RU-MUR","Мурманская область",""],["RU-SPE","Санкт-Петербург",""],["RU-YAR","Ярославская область",""],["RU-ULY","Ульяновская область",""],["RU-NVS","Новосибирская область",""],["RU-TYU","Тюменская область",""],["RU-SVE","Свердловская область",""],["RU-NGR","Новгородская область",""],["RU-KGN","Курганская область",""],["RU-KGD","Калининградская область",""],["RU-IVA","Ивановская область",""],["RU-AST","Астраханская область",""],["RU-KHA","Хабаровский край",""],["RU-CE","Чеченская республика",""],["RU-UD","Удмуртская республика",""],["RU-SE","Республика Северная Осетия",""],["RU-MO","Республика Мордовия",""],["RU-KR","Республика  Карелия",""],["RU-KL","Республика  Калмыкия",""],["RU-IN","Республика  Ингушетия",""],["RU-AL","Республика Алтай",""],["RU-BA","Республика Башкортостан",""],["RU-AD","Республика Адыгея",""],["RU-CR","Республика Крым",""],["RU-SEV","Севастополь",""],["RU-KO","Республика Коми",""],["RU-PNZ","Пензенская область",""],["RU-TAM","Тамбовская область",""],["RU-LEN","Ленинградская область",""],["RU-VLG","Вологодская область",""],["RU-KOS","Костромская область",""],["RU-PSK","Псковская область",""],["RU-YAN","Ямало-Ненецкий АО",""],["RU-CHU","Чукотский АО",""],["RU-YEV","Еврейская автономская область",""],["RU-TY","Республика Тыва",""],["RU-SAK","Сахалинская область",""],["RU-AMU","Амурская область",""],["RU-BU","Республика Бурятия",""],["RU-KK","Республика Хакасия",""],["RU-KEM","Кемеровская область",""],["RU-ALT","Алтайский край",""],["RU-DA","Республика Дагестан",""],["RU-KB","Кабардино-Балкарская республика",""],["RU-KC","Карачаевая-Черкесская республика",""],["RU-KDA","Краснодарский край",""],["RU-ROS","Ростовская область",""],["RU-SAM","Самарская область",""],["RU-TA","Республика Татарстан",""],["RU-ME","Республика Марий Эл",""],["RU-CU","Чувашская республика",""],["RU-NIZ","Нижегородская край",""],["RU-VLA","Владимировская область",""],["RU-MOS","Московская область",""],["RU-KLU","Калужская область",""],["RU-BEL","Белгородская область",""],["RU-ZAB","Забайкальский край",""],["RU-PRI","Приморский край",""],["RU-KAM","Камачатский край",""],["RU-MAG","Магаданская область",""],["RU-SA","Республика Саха",""],["RU-KYA","Красноярский край",""],["RU-ORE","Оренбургская область",""],["RU-SAR","Саратовская область",""],["RU-VGG","Волгоградская область",""],["RU-VOR","Ставропольский край",""],["RU-SMO","Смоленская область",""],["RU-TVE","Тверская область",""],["RU-PER","Пермская область",""],["RU-KHM","Ханты-Мансийский АО",""],["RU-KHM","Ханты-Мансийский АО",""],["RU-TOM","Томская область",""],["RU-IRK","Иркутская область",""],["RU-NEN","Ненецскй АО",""],["RU-STA","Ставропольский край",""],["RU-TUL","Тульская область","tulskaya_flag.png"])},697:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.regionsAlias=void 0,t.regionsAlias=["RU-MOW","RU-SPE","RU-NEN","RU-YAR","RU-CHE","RU-ULY","RU-TYU","RU-TUL","RU-SVE","RU-RYA","RU-ORL","RU-OMS","RU-NGR","RU-LIP","RU-KRS","RU-KGN","RU-KGD","RU-IVA","RU-BRY","RU-AST","RU-KHA","RU-CE","RU-UD","RU-SE","RU-MO","RU-KR","RU-KL","RU-IN","RU-AL","RU-BA","RU-AD","RU-CR","RU-SEV","RU-KO","RU-KIR","RU-PNZ","RU-TAM","RU-MUR","RU-LEN","RU-VLG","RU-KOS","RU-PSK","RU-ARK","RU-YAN","RU-CHU","RU-YEV","RU-TY","RU-SAK","RU-AMU","RU-BU","RU-KK","RU-KEM","RU-NVS","RU-ALT","RU-DA","RU-STA","RU-KB","RU-KC","RU-KDA","RU-ROS","RU-SAM","RU-TA","RU-ME","RU-CU","RU-NIZ","RU-VLA","RU-MOS","RU-KLU","RU-BEL","RU-ZAB","RU-PRI","RU-KAM","RU-MAG","RU-SA","RU-KYA","RU-ORE","RU-SAR","RU-VGG","RU-VOR","RU-SMO","RU-TVE","RU-PER","RU-KHM","RU-TOM","RU-IRK"]},8514:function(e,t,n){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var r=i(n(9755));n(1317);var o=n(5199),a=n(697);t.default=function(){(0,r.default)("path").hover((function(e){var t;if((0,r.default)("path").css("fill","#fff"),(0,r.default)(".indicator").html(""),null===(t=(0,r.default)(this).attr("id"))||void 0===t||t.toUpperCase(),(0,r.default)(this).attr("name")){var n=(0,r.default)(this).attr("name");(0,r.default)("<div>"+n+"</div>").appendTo(".indicator")}(0,r.default)(this).css("fill","#f6e72d"),(0,r.default)("path").not(this).css("fill","rgba(0,0,0,0.5)"),(0,r.default)(".indicator").css({top:e.pageY,left:e.pageX+30}).show()}),(function(){(0,r.default)(".indicator").html(""),(0,r.default)(".indicator").hide(),(0,r.default)("path").css("fill","rgba(0,0,0,0.2)")})),a.regionsAlias;var e=o.regions;(0,r.default)("path").each((function(){for(var t=(0,r.default)(this).attr("id"),n="",i="",o=0;o<e.length;o++)t==e[o][0]&&(i=e[o][1],n="flags/"+e[o][2],(0,r.default)(this).attr("name",i),(0,r.default)(this).attr("flag",n));var a='<div class="reg" >[<span>'+t+"</span>] "+i+"</div>";(0,r.default)(a).appendTo(".regs")})),(0,r.default)(".reg").hover((function(e){var t="#"+(0,r.default)(this).find("span").text();(0,r.default)(t).css("fill","#f6e72d")}),(function(){(0,r.default)(".indicator").html(""),(0,r.default)(".indicator").hide(),(0,r.default)("path").css("fill","rgba(0,0,0,0.2)")}))}},7462:(e,t,n)=>{"use strict";function i(){return i=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},i.apply(this,arguments)}n.d(t,{Z:()=>i})}},t={};function n(i){var r=t[i];if(void 0!==r)return r.exports;var o=t[i]={exports:{}};return e[i].call(o.exports,o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var i in t)n.o(t,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{"use strict";var e=n(9557);n(1057),n(9506),n(5428),n(6830),n(4121);var t,i,r=(t=document.getElementById("root"),(i=document.createElement("h1")).innerText="Карта",i.classList.add("webpack"),null==t||t.appendChild(i),i),o=!1;r.onclick=function(t){t.preventDefault(),o?((0,e.delMap)(),o=!1,r.innerText="Карта"):(r.innerText="Удалить карту",o=!0,(0,e.map)())}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,